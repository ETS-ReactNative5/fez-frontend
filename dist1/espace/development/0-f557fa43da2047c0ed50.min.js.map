{"version":3,"sources":["webpack:///0-f557fa43da2047c0ed50.min.js","webpack:///./src/modules/FixRecord/components/FixRecord.js","webpack:///./src/modules/FixRecord/index.js","webpack:///./src/modules/FixRecord/containers/FixRecord.js"],"names":["webpackJsonp","1410","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_react","_react2","_propTypes","_propTypes2","_immutable","_RaisedButton","_RaisedButton2","_MenuItem","_MenuItem2","_uqlibraryReactToolbox","_PublicationsList","_config","FixRecord","_Component","this","_this","getPrototypeOf","isLoggedInUserLinked","author","recordToFix","searchKey","subkey","filter","authorId","aut_id","_navigateToMyResearch","history","push","routes","pathConfig","records","mine","_navigateToDashboard","dashboard","_actionSelected","event","setState","selectedRecordAction","_handleKeyboardFormSubmit","shiftKey","preventDefault","handleSubmit","getAlert","_ref","_ref$submitFailed","submitFailed","undefined","_ref$dirty","dirty","_ref$invalid","invalid","_ref$submitting","submitting","error","_ref$submitSucceeded","submitSucceeded","_ref$alertLocale","alertLocale","alertProps","errorAlert","message","validationAlert","progressAlert","successAlert","createElement","Alert","_setSuccessConfirmation","ref","successConfirmationBox","state","_props","isAuthorLinked","isContributorLinked","authorLoading","recordToFixLoading","go","actions","loadRecordToFix","match","params","pid","loadCurrentAccount","nextProps","showConfirmation","clearFixRecord","txt","locale","pages","fixRecord","txtFixForm","forms","fixPublicationForm","txtUnclaimForm","unclaimPublicationForm","className","InlineLoader","loadingMessage","_props2","fixOptions","actionsOptions","map","item","index","action","primaryText","title","saveConfirmationLocale","successWorkflowConfirmation","publicationToFixFileUploadingError","confirmationMessage","fileFailConfirmationMessage","StandardPage","onKeyDown","StandardCard","subTitle","help","PublicationCitation","publication","Field","component","SelectField","disabled","name","context","selectFieldMobileOverrides","floatingLabelText","fieldLabels","validate","validation","required","onChange","NavigationDialogBox","when","cancelWorkflowConfirmation","ConfirmDialogBox","onRef","onAction","onCancelAction","comments","TextField","type","fullWidth","multiLine","rows","url","fileUpload","description","FileUploadField","requireFileAccess","validFileUpload","alert","label","cancel","onTouchTap","secondary","submit","Component","propTypes","object","bool","isRequired","contextTypes","1411","_FixRecord","get","1412","mapDispatchToProps","dispatch","_redux","bindActionCreators","_reactRedux","_immutable2","_immutable3","_FixRecord2","_reactRouterDom","_actions","newObj","_ConfirmDiscardFormChanges","onSubmit","values","data","toJS","fixAction","unclaimRecord","then","catch","SubmissionError","_error","stopSubmit","FixRecordContainer","reduxForm","form","confirmDiscardFormChanges","mapStateToProps","formValues","getFormValues","Map","connect","withRouter"],"mappings":"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","file":"0-f557fa43da2047c0ed50.min.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 1410:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _immutable = __webpack_require__(25);\n\nvar _RaisedButton = __webpack_require__(47);\n\nvar _RaisedButton2 = _interopRequireDefault(_RaisedButton);\n\nvar _MenuItem = __webpack_require__(94);\n\nvar _MenuItem2 = _interopRequireDefault(_MenuItem);\n\nvar _uqlibraryReactToolbox = __webpack_require__(14);\n\nvar _PublicationsList = __webpack_require__(144);\n\nvar _config = __webpack_require__(13);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FixRecord = function (_Component) {\n    _inherits(FixRecord, _Component);\n\n    function FixRecord(props) {\n        _classCallCheck(this, FixRecord);\n\n        var _this = _possibleConstructorReturn(this, (FixRecord.__proto__ || Object.getPrototypeOf(FixRecord)).call(this, props));\n\n        _this.isLoggedInUserLinked = function (author, recordToFix, searchKey, subkey) {\n            return recordToFix[searchKey] && recordToFix[searchKey].length > 0 && recordToFix[searchKey].filter(function (authorId) {\n                return authorId[subkey] === author.aut_id;\n            }).length > 0;\n        };\n\n        _this._navigateToMyResearch = function () {\n            _this.props.history.push(_config.routes.pathConfig.records.mine);\n        };\n\n        _this._navigateToDashboard = function () {\n            _this.props.history.push(_config.routes.pathConfig.dashboard);\n        };\n\n        _this._actionSelected = function (event, value) {\n            _this.setState({\n                selectedRecordAction: value\n            });\n        };\n\n        _this._handleKeyboardFormSubmit = function (event) {\n            if (event.key === 'Enter' && !event.shiftKey) {\n                event.preventDefault();\n                _this.props.handleSubmit();\n            }\n        };\n\n        _this.getAlert = function (_ref) {\n            var _ref$submitFailed = _ref.submitFailed,\n                submitFailed = _ref$submitFailed === undefined ? false : _ref$submitFailed,\n                _ref$dirty = _ref.dirty,\n                dirty = _ref$dirty === undefined ? false : _ref$dirty,\n                _ref$invalid = _ref.invalid,\n                invalid = _ref$invalid === undefined ? false : _ref$invalid,\n                _ref$submitting = _ref.submitting,\n                submitting = _ref$submitting === undefined ? false : _ref$submitting,\n                error = _ref.error,\n                _ref$submitSucceeded = _ref.submitSucceeded,\n                submitSucceeded = _ref$submitSucceeded === undefined ? false : _ref$submitSucceeded,\n                _ref$alertLocale = _ref.alertLocale,\n                alertLocale = _ref$alertLocale === undefined ? {} : _ref$alertLocale;\n\n            var alertProps = null;\n            if (submitFailed && error) {\n                alertProps = _extends({}, alertLocale.errorAlert, { message: alertLocale.errorAlert.message ? alertLocale.errorAlert.message(error) : error });\n            } else if (!submitFailed && dirty && invalid) {\n                alertProps = _extends({}, alertLocale.validationAlert);\n            } else if (submitting) {\n                alertProps = _extends({}, alertLocale.progressAlert);\n            } else if (submitSucceeded) {\n                alertProps = _extends({}, alertLocale.successAlert);\n            }\n            return alertProps ? _react2.default.createElement(_uqlibraryReactToolbox.Alert, alertProps) : null;\n        };\n\n        _this._setSuccessConfirmation = function (ref) {\n            _this.successConfirmationBox = ref;\n        };\n\n        _this.state = {\n            selectedRecordAction: ''\n        };\n        return _this;\n    }\n\n    _createClass(FixRecord, [{\n        key: 'componentWillMount',\n        value: function componentWillMount() {\n            var _props = this.props,\n                recordToFix = _props.recordToFix,\n                author = _props.author;\n\n\n            var isAuthorLinked = author && recordToFix && this.isLoggedInUserLinked(author, recordToFix, 'fez_record_search_key_author_id', 'rek_author_id');\n            var isContributorLinked = author && recordToFix && this.isLoggedInUserLinked(author, recordToFix, 'fez_record_search_key_contributor_id', 'rek_contributor_id');\n\n            if (!(this.props.authorLoading || this.props.recordToFixLoading) && !isAuthorLinked && !isContributorLinked) {\n                // if either author or publication data is missing, abandon form\n                this.props.history.go(-1);\n            }\n        }\n    }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            if (!this.props.recordToFixLoading && !this.props.recordToFix) {\n                this.props.actions.loadRecordToFix(this.props.match.params.pid);\n            }\n            if (!this.props.authorLoading && !this.props.author) {\n                this.props.actions.loadCurrentAccount();\n            }\n        }\n    }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n            if (nextProps.submitSucceeded !== this.props.submitSucceeded) {\n                this.successConfirmationBox.showConfirmation();\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            // clear previously selected recordToFix for a fix\n            this.props.actions.clearFixRecord();\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var txt = _config.locale.pages.fixRecord;\n            var txtFixForm = _config.locale.forms.fixPublicationForm;\n            var txtUnclaimForm = _config.locale.forms.unclaimPublicationForm;\n\n            if (this.props.authorLoading || this.props.recordToFixLoading) {\n                return _react2.default.createElement(\n                    'div',\n                    { className: 'is-centered' },\n                    _react2.default.createElement(_uqlibraryReactToolbox.InlineLoader, { message: txt.loadingMessage })\n                );\n            }\n\n            var _props2 = this.props,\n                recordToFix = _props2.recordToFix,\n                author = _props2.author;\n\n            if (!recordToFix || !author) return _react2.default.createElement('div', null);\n\n            var fixOptions = txt.actionsOptions.map(function (item, index) {\n                return _react2.default.createElement(_MenuItem2.default, {\n                    value: item.action,\n                    primaryText: item.title,\n                    key: 'fix_record_action_' + index });\n            });\n\n            // set confirmation message depending on file upload status\n            var saveConfirmationLocale = _extends({}, txtFixForm.successWorkflowConfirmation);\n            if (this.props.publicationToFixFileUploadingError) {\n                saveConfirmationLocale.confirmationMessage = saveConfirmationLocale.fileFailConfirmationMessage;\n            }\n\n            return _react2.default.createElement(\n                _uqlibraryReactToolbox.StandardPage,\n                { title: txt.title },\n                _react2.default.createElement(\n                    'form',\n                    { onKeyDown: this._handleKeyboardFormSubmit },\n                    _react2.default.createElement(\n                        _uqlibraryReactToolbox.StandardCard,\n                        { title: txt.subTitle, help: txt.help },\n                        _react2.default.createElement(_PublicationsList.PublicationCitation, { publication: recordToFix }),\n                        _react2.default.createElement(\n                            _immutable.Field,\n                            _extends({\n                                component: _uqlibraryReactToolbox.SelectField,\n                                disabled: this.props.submitting,\n                                name: 'fixAction'\n                            }, this.context.selectFieldMobileOverrides, {\n                                floatingLabelText: txt.fieldLabels.action,\n                                validate: [_config.validation.required],\n                                onChange: this._actionSelected,\n                                className: 'requiredField' }),\n                            fixOptions\n                        )\n                    ),\n                    this.state.selectedRecordAction === 'fix' && _react2.default.createElement(\n                        'div',\n                        null,\n                        _react2.default.createElement(_uqlibraryReactToolbox.NavigationDialogBox, { when: this.props.dirty && !this.props.submitSucceeded, txt: txtFixForm.cancelWorkflowConfirmation }),\n                        _react2.default.createElement(_uqlibraryReactToolbox.ConfirmDialogBox, {\n                            onRef: this._setSuccessConfirmation,\n                            onAction: this._navigateToMyResearch,\n                            onCancelAction: this._navigateToDashboard,\n                            locale: saveConfirmationLocale }),\n                        _react2.default.createElement(\n                            _uqlibraryReactToolbox.StandardCard,\n                            { title: txtFixForm.comments.title, help: txtFixForm.comments.help },\n                            _react2.default.createElement(_immutable.Field, {\n                                component: _uqlibraryReactToolbox.TextField,\n                                className: 'requiredField',\n                                disabled: this.props.submitting,\n                                name: 'comments',\n                                type: 'text',\n                                fullWidth: true,\n                                multiLine: true,\n                                rows: 1,\n                                floatingLabelText: txtFixForm.comments.fieldLabels.comments,\n                                validate: [_config.validation.required] }),\n                            _react2.default.createElement(_immutable.Field, {\n                                component: _uqlibraryReactToolbox.TextField,\n                                disabled: this.props.submitting,\n                                name: 'rek_link',\n                                type: 'text',\n                                fullWidth: true,\n                                floatingLabelText: txtFixForm.comments.fieldLabels.url,\n                                validate: [_config.validation.url] })\n                        ),\n                        _react2.default.createElement(\n                            _uqlibraryReactToolbox.StandardCard,\n                            { title: txtFixForm.fileUpload.title, help: txtFixForm.fileUpload.help },\n                            txtFixForm.fileUpload.description,\n                            _react2.default.createElement(_immutable.Field, {\n                                name: 'files',\n                                component: _uqlibraryReactToolbox.FileUploadField,\n                                disabled: this.props.submitting,\n                                requireFileAccess: true,\n                                validate: [_config.validation.validFileUpload]\n                            })\n                        )\n                    ),\n                    this.state.selectedRecordAction === 'unclaim' && _react2.default.createElement(\n                        _uqlibraryReactToolbox.StandardCard,\n                        { title: txtUnclaimForm.title, help: txtUnclaimForm.help },\n                        _react2.default.createElement(_uqlibraryReactToolbox.Alert, txtUnclaimForm.alert),\n                        txtUnclaimForm.description,\n                        _react2.default.createElement(_uqlibraryReactToolbox.ConfirmDialogBox, {\n                            onRef: this._setSuccessConfirmation,\n                            onAction: this._navigateToMyResearch,\n                            onCancelAction: this._navigateToDashboard,\n                            locale: txtUnclaimForm.successWorkflowConfirmation })\n                    ),\n                    this.getAlert(_extends({}, this.props, { alertLocale: txtFixForm })),\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'columns action-buttons' },\n                        _react2.default.createElement('div', { className: 'column is-hidden-mobile' }),\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'column is-narrow-desktop' },\n                            _react2.default.createElement(_RaisedButton2.default, {\n                                fullWidth: true,\n                                label: txt.cancel,\n                                disabled: this.props.submitting,\n                                onTouchTap: this._navigateToMyResearch })\n                        ),\n                        this.state.selectedRecordAction && _react2.default.createElement(\n                            'div',\n                            { className: 'column is-narrow-desktop' },\n                            _react2.default.createElement(_RaisedButton2.default, {\n                                secondary: true,\n                                fullWidth: true,\n                                label: txt.submit,\n                                onTouchTap: this.props.handleSubmit,\n                                disabled: this.props.submitting || this.props.invalid })\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n\n    return FixRecord;\n}(_react.Component);\n\nFixRecord.propTypes = _extends({}, _immutable.propTypes, { // all redux-form props\n\n    recordToFix: _propTypes2.default.object,\n    recordToFixLoading: _propTypes2.default.bool,\n\n    author: _propTypes2.default.object,\n    authorLoading: _propTypes2.default.bool,\n\n    history: _propTypes2.default.object.isRequired,\n    match: _propTypes2.default.object.isRequired,\n    actions: _propTypes2.default.object.isRequired\n});\nFixRecord.contextTypes = {\n    selectFieldMobileOverrides: _propTypes2.default.object\n};\nexports.default = FixRecord;\n\n/***/ }),\n\n/***/ 1411:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _FixRecord = __webpack_require__(1412);\n\nObject.defineProperty(exports, 'FixRecord', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_FixRecord).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n\n/***/ 1412:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _reactRedux = __webpack_require__(18);\n\nvar _redux = __webpack_require__(46);\n\nvar _immutable = __webpack_require__(25);\n\nvar _immutable2 = __webpack_require__(41);\n\nvar _immutable3 = _interopRequireDefault(_immutable2);\n\nvar _FixRecord = __webpack_require__(1410);\n\nvar _FixRecord2 = _interopRequireDefault(_FixRecord);\n\nvar _reactRouterDom = __webpack_require__(61);\n\nvar _actions = __webpack_require__(42);\n\nvar actions = _interopRequireWildcard(_actions);\n\nvar _ConfirmDiscardFormChanges = __webpack_require__(424);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FORM_NAME = 'FixRecord';\n\nvar onSubmit = function onSubmit(values, dispatch, props) {\n    var data = _extends({}, values.toJS(), {\n        publication: _extends({}, props.recordToFix),\n        author: _extends({}, props.author)\n    });\n    return dispatch(data.fixAction === 'unclaim' ? actions.unclaimRecord(data) : actions.fixRecord(data)).then(function () {\n        // once this promise is resolved form is submitted successfully and will call parent container\n        // reported bug to redux-form:\n        // reset form after success action was dispatched:\n        // componentWillUnmount cleans up form, but then onSubmit success sets it back to active\n        // setTimeout(()=>{\n        //     dispatch(reset(FORM_NAME));\n        // }, 100);\n    }).catch(function (error) {\n        throw new _immutable.SubmissionError({ _error: error.message });\n    });\n};\n\nvar validate = function validate() {\n    // reset global errors, eg form submit failure\n    (0, _immutable.stopSubmit)(FORM_NAME, null);\n};\n\nvar FixRecordContainer = (0, _immutable.reduxForm)({\n    form: FORM_NAME,\n    validate: validate,\n    onSubmit: onSubmit\n})((0, _ConfirmDiscardFormChanges.confirmDiscardFormChanges)(_FixRecord2.default, FORM_NAME));\n\nvar mapStateToProps = function mapStateToProps(state) {\n    return _extends({}, state.get('fixRecordReducer'), state.get('accountReducer'), {\n        formValues: (0, _immutable.getFormValues)(FORM_NAME)(state) || _immutable3.default.Map({})\n    });\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: (0, _redux.bindActionCreators)(actions, dispatch)\n    };\n}\n\nFixRecordContainer = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(FixRecordContainer);\nFixRecordContainer = (0, _reactRouterDom.withRouter)(FixRecordContainer);\n\nexports.default = FixRecordContainer;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 0-f557fa43da2047c0ed50.min.js","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {propTypes} from 'redux-form/immutable';\nimport {Field} from 'redux-form/immutable';\n\nimport RaisedButton from 'material-ui/RaisedButton';\nimport MenuItem from 'material-ui/MenuItem';\n\nimport {SelectField, TextField, StandardPage, StandardCard, Alert, ConfirmDialogBox, NavigationDialogBox,\n    FileUploadField, InlineLoader} from 'uqlibrary-react-toolbox';\nimport {PublicationCitation} from 'modules/SharedComponents/PublicationsList';\nimport {validation, locale, routes} from 'config';\n\nexport default class FixRecord extends Component {\n    static propTypes = {\n        ...propTypes, // all redux-form props\n\n        recordToFix: PropTypes.object,\n        recordToFixLoading: PropTypes.bool,\n\n        author: PropTypes.object,\n        authorLoading: PropTypes.bool,\n\n        history: PropTypes.object.isRequired,\n        match: PropTypes.object.isRequired,\n        actions: PropTypes.object.isRequired\n    };\n\n    static contextTypes = {\n        selectFieldMobileOverrides: PropTypes.object\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedRecordAction: ''\n        };\n    }\n\n    componentWillMount() {\n        const {recordToFix, author} = this.props;\n\n        const isAuthorLinked = author && recordToFix && this.isLoggedInUserLinked(author, recordToFix, 'fez_record_search_key_author_id', 'rek_author_id');\n        const isContributorLinked = author && recordToFix && this.isLoggedInUserLinked(author, recordToFix, 'fez_record_search_key_contributor_id', 'rek_contributor_id');\n\n        if (!(this.props.authorLoading || this.props.recordToFixLoading) && !isAuthorLinked && !isContributorLinked) {\n            // if either author or publication data is missing, abandon form\n            this.props.history.go(-1);\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.recordToFixLoading && !this.props.recordToFix) {\n            this.props.actions.loadRecordToFix(this.props.match.params.pid);\n        }\n        if (!this.props.authorLoading && !this.props.author) {\n            this.props.actions.loadCurrentAccount();\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.submitSucceeded !== this.props.submitSucceeded) {\n            this.successConfirmationBox.showConfirmation();\n        }\n    }\n\n    componentWillUnmount() {\n        // clear previously selected recordToFix for a fix\n        this.props.actions.clearFixRecord();\n    }\n\n    isLoggedInUserLinked = (author, recordToFix, searchKey, subkey) => {\n        return recordToFix[searchKey] && recordToFix[searchKey].length > 0 && recordToFix[searchKey].filter(authorId => authorId[subkey] === author.aut_id).length > 0;\n    };\n\n    _navigateToMyResearch = () => {\n        this.props.history.push(routes.pathConfig.records.mine);\n    }\n\n    _navigateToDashboard = () => {\n        this.props.history.push(routes.pathConfig.dashboard);\n    };\n\n    _actionSelected = (event, value) => {\n        this.setState({\n            selectedRecordAction: value\n        });\n    };\n\n    _handleKeyboardFormSubmit = (event) => {\n        if (event.key === 'Enter' && !event.shiftKey) {\n            event.preventDefault();\n            this.props.handleSubmit();\n        }\n    };\n\n    getAlert = ({submitFailed = false, dirty = false, invalid = false, submitting = false, error,\n        submitSucceeded = false, alertLocale = {}}) => {\n        let alertProps = null;\n        if (submitFailed && error) {\n            alertProps = {...alertLocale.errorAlert, message: alertLocale.errorAlert.message ? alertLocale.errorAlert.message(error) : error};\n        } else if (!submitFailed && dirty && invalid) {\n            alertProps = {...alertLocale.validationAlert};\n        } else if (submitting) {\n            alertProps = {...alertLocale.progressAlert};\n        } else if (submitSucceeded) {\n            alertProps = {...alertLocale.successAlert};\n        }\n        return alertProps ? (<Alert {...alertProps} />) : null;\n    };\n\n    _setSuccessConfirmation = (ref) => {\n        this.successConfirmationBox = ref;\n    };\n\n    render() {\n        const txt = locale.pages.fixRecord;\n        const txtFixForm = locale.forms.fixPublicationForm;\n        const txtUnclaimForm = locale.forms.unclaimPublicationForm;\n\n        if(this.props.authorLoading || this.props.recordToFixLoading) {\n            return (\n                <div className=\"is-centered\">\n                    <InlineLoader message={txt.loadingMessage}/>\n                </div>\n            );\n        }\n\n        const {recordToFix, author} = this.props;\n        if (!recordToFix || !author) return (<div />);\n\n        const fixOptions = txt.actionsOptions.map((item, index) => (\n            <MenuItem\n                value={item.action}\n                primaryText={item.title}\n                key={`fix_record_action_${index}`} />\n        ));\n\n        // set confirmation message depending on file upload status\n        const saveConfirmationLocale = {...txtFixForm.successWorkflowConfirmation};\n        if (this.props.publicationToFixFileUploadingError) {\n            saveConfirmationLocale.confirmationMessage = saveConfirmationLocale.fileFailConfirmationMessage;\n        }\n\n        return (\n            <StandardPage title={txt.title}>\n                <form onKeyDown={this._handleKeyboardFormSubmit}>\n                    <StandardCard title={txt.subTitle} help={txt.help}>\n                        <PublicationCitation publication={recordToFix}/>\n\n                        <Field\n                            component={SelectField}\n                            disabled={this.props.submitting}\n                            name=\"fixAction\"\n                            {...this.context.selectFieldMobileOverrides}\n                            floatingLabelText={txt.fieldLabels.action}\n                            validate={[validation.required]}\n                            onChange={this._actionSelected}\n                            className=\"requiredField\">\n                            {fixOptions}\n                        </Field>\n                    </StandardCard>\n                    {\n                        this.state.selectedRecordAction === 'fix' &&\n                        <div>\n                            <NavigationDialogBox when={this.props.dirty && !this.props.submitSucceeded} txt={txtFixForm.cancelWorkflowConfirmation} />\n                            <ConfirmDialogBox\n                                onRef={this._setSuccessConfirmation}\n                                onAction={this._navigateToMyResearch}\n                                onCancelAction={this._navigateToDashboard}\n                                locale={saveConfirmationLocale}/>\n                            <StandardCard title={txtFixForm.comments.title} help={txtFixForm.comments.help}>\n                                <Field\n                                    component={TextField}\n                                    className=\"requiredField\"\n                                    disabled={this.props.submitting}\n                                    name=\"comments\"\n                                    type=\"text\"\n                                    fullWidth\n                                    multiLine\n                                    rows={1}\n                                    floatingLabelText={txtFixForm.comments.fieldLabels.comments}\n                                    validate={[validation.required]}/>\n                                <Field\n                                    component={TextField}\n                                    disabled={this.props.submitting}\n                                    name=\"rek_link\"\n                                    type=\"text\"\n                                    fullWidth\n                                    floatingLabelText={txtFixForm.comments.fieldLabels.url}\n                                    validate={[validation.url]}/>\n                            </StandardCard>\n                            <StandardCard title={txtFixForm.fileUpload.title} help={txtFixForm.fileUpload.help}>\n                                {txtFixForm.fileUpload.description}\n                                <Field\n                                    name=\"files\"\n                                    component={FileUploadField}\n                                    disabled={this.props.submitting}\n                                    requireFileAccess\n                                    validate={[validation.validFileUpload]}\n                                />\n                            </StandardCard>\n                        </div>\n                    }\n\n                    {\n                        this.state.selectedRecordAction === 'unclaim' &&\n                        <StandardCard title={txtUnclaimForm.title} help={txtUnclaimForm.help}>\n                            <Alert {...txtUnclaimForm.alert}/>\n                            {txtUnclaimForm.description}\n                            <ConfirmDialogBox\n                                onRef={this._setSuccessConfirmation}\n                                onAction={this._navigateToMyResearch}\n                                onCancelAction={this._navigateToDashboard}\n                                locale={txtUnclaimForm.successWorkflowConfirmation}/>\n                        </StandardCard>\n                    }\n\n                    {\n                        this.getAlert({...this.props, alertLocale: txtFixForm})\n                    }\n\n                    <div className=\"columns action-buttons\">\n                        <div className=\"column is-hidden-mobile\"/>\n                        <div className=\"column is-narrow-desktop\">\n                            <RaisedButton\n                                fullWidth\n                                label={txt.cancel}\n                                disabled={this.props.submitting}\n                                onTouchTap={this._navigateToMyResearch}/>\n                        </div>\n                        {\n                            this.state.selectedRecordAction &&\n                            <div className=\"column is-narrow-desktop\">\n                                <RaisedButton\n                                    secondary\n                                    fullWidth\n                                    label={txt.submit}\n                                    onTouchTap={this.props.handleSubmit}\n                                    disabled={this.props.submitting || this.props.invalid}/>\n                            </div>\n                        }\n                    </div>\n                </form>\n            </StandardPage>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/FixRecord/components/FixRecord.js","export {default as FixRecord} from './containers/FixRecord';\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/FixRecord/index.js","import {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {reduxForm, getFormValues, stopSubmit, SubmissionError} from 'redux-form/immutable';\nimport Immutable from 'immutable';\nimport FixRecord from '../components/FixRecord';\nimport {withRouter} from 'react-router-dom';\nimport * as actions from 'actions';\nimport {confirmDiscardFormChanges} from 'modules/SharedComponents/ConfirmDiscardFormChanges';\n\nconst FORM_NAME = 'FixRecord';\n\nconst onSubmit = (values, dispatch, props) => {\n    const data = {\n        ...values.toJS(),\n        publication: {...props.recordToFix},\n        author: {...props.author}\n    };\n    return dispatch(data.fixAction === 'unclaim'\n        ? actions.unclaimRecord(data)\n        : actions.fixRecord(data))\n        .then(() => {\n            // once this promise is resolved form is submitted successfully and will call parent container\n            // reported bug to redux-form:\n            // reset form after success action was dispatched:\n            // componentWillUnmount cleans up form, but then onSubmit success sets it back to active\n            // setTimeout(()=>{\n            //     dispatch(reset(FORM_NAME));\n            // }, 100);\n        }).catch(error => {\n            throw new SubmissionError({_error: error.message});\n        });\n};\n\nconst validate = () => {\n    // reset global errors, eg form submit failure\n    stopSubmit(FORM_NAME, null);\n};\n\nlet FixRecordContainer = reduxForm({\n    form: FORM_NAME,\n    validate,\n    onSubmit\n})(confirmDiscardFormChanges(FixRecord, FORM_NAME));\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state.get('fixRecordReducer'),\n        ...state.get('accountReducer'),\n        formValues: getFormValues(FORM_NAME)(state) || Immutable.Map({})\n    };\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators(actions, dispatch)\n    };\n}\n\nFixRecordContainer = connect(mapStateToProps, mapDispatchToProps)(FixRecordContainer);\nFixRecordContainer = withRouter(FixRecordContainer);\n\nexport default FixRecordContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/FixRecord/containers/FixRecord.js"],"sourceRoot":""}