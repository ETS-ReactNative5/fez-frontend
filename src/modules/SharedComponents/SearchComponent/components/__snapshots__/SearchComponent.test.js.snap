// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchComponent should add one row for advanced search 1`] = `
<React.Fragment>
  <WithStyles(AdvancedSearchComponent)
    docTypes={Array []}
    fieldRows={
      Array [
        Object {
          "label": "",
          "searchField": "all",
          "value": "i feel lucky",
        },
      ]
    }
    isMinimised={false}
    isOpenAccess={false}
    onAdvancedSearchReset={[Function]}
    onAdvancedSearchRowAdd={[Function]}
    onAdvancedSearchRowChange={[Function]}
    onAdvancedSearchRowRemove={[Function]}
    onSearch={[Function]}
    onToggleMinimise={[Function]}
    onToggleOpenAccess={[Function]}
    onToggleSearchMode={[Function]}
    updateDocTypeValues={[Function]}
    updateYearRangeFilter={[Function]}
    yearFilter={Object {}}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should add one row for advanced search 2`] = `
<React.Fragment>
  <WithStyles(AdvancedSearchComponent)
    docTypes={Array []}
    fieldRows={
      Array [
        Object {
          "label": "",
          "searchField": "all",
          "value": "i feel lucky",
        },
        Object {
          "searchField": "0",
          "value": "",
        },
      ]
    }
    isMinimised={false}
    isOpenAccess={false}
    onAdvancedSearchReset={[Function]}
    onAdvancedSearchRowAdd={[Function]}
    onAdvancedSearchRowChange={[Function]}
    onAdvancedSearchRowRemove={[Function]}
    onSearch={[Function]}
    onToggleMinimise={[Function]}
    onToggleOpenAccess={[Function]}
    onToggleSearchMode={[Function]}
    updateDocTypeValues={[Function]}
    updateYearRangeFilter={[Function]}
    yearFilter={Object {}}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should display simple search with query string 1`] = `
<React.Fragment>
  <WithStyles(SimpleSearchComponent)
    isInHeader={false}
    onInvalidSearch={[Function]}
    onSearch={[Function]}
    onSearchTextChange={[Function]}
    onToggleSearchMode={[Function]}
    searchText=""
    showAdvancedSearchButton={false}
    showMobileSearchButton={false}
    showPrefixIcon={false}
    showSearchButton={false}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should display simple search with query string 2`] = `
<React.Fragment>
  <WithStyles(SimpleSearchComponent)
    isInHeader={false}
    onInvalidSearch={[Function]}
    onSearch={[Function]}
    onSearchTextChange={[Function]}
    onToggleSearchMode={[Function]}
    searchText="i feel very lucky"
    showAdvancedSearchButton={false}
    showMobileSearchButton={false}
    showPrefixIcon={false}
    showSearchButton={false}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should handle simple search text change 1`] = `
<React.Fragment>
  <WithStyles(SimpleSearchComponent)
    isInHeader={false}
    onInvalidSearch={[Function]}
    onSearch={[Function]}
    onSearchTextChange={[Function]}
    onToggleSearchMode={[Function]}
    searchText=""
    showAdvancedSearchButton={false}
    showMobileSearchButton={false}
    showPrefixIcon={false}
    showSearchButton={false}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should remove one row from advanced search 1`] = `
<React.Fragment>
  <WithStyles(AdvancedSearchComponent)
    docTypes={Array []}
    fieldRows={
      Array [
        Object {
          "label": "",
          "searchField": "all",
          "value": "i feel lucky",
        },
        Object {
          "label": "",
          "searchField": "rek_title",
          "value": "remove rek title field",
        },
        Object {
          "label": "",
          "searchField": "docTypes",
          "value": Array [],
        },
      ]
    }
    isMinimised={false}
    isOpenAccess={false}
    onAdvancedSearchReset={[Function]}
    onAdvancedSearchRowAdd={[Function]}
    onAdvancedSearchRowChange={[Function]}
    onAdvancedSearchRowRemove={[Function]}
    onSearch={[Function]}
    onToggleMinimise={[Function]}
    onToggleOpenAccess={[Function]}
    onToggleSearchMode={[Function]}
    updateDocTypeValues={[Function]}
    updateYearRangeFilter={[Function]}
    yearFilter={Object {}}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should remove one row from advanced search 2`] = `
<React.Fragment>
  <WithStyles(AdvancedSearchComponent)
    docTypes={Array []}
    fieldRows={
      Array [
        Object {
          "label": "",
          "searchField": "all",
          "value": "i feel lucky",
        },
        Object {
          "label": "",
          "searchField": "docTypes",
          "value": Array [],
        },
      ]
    }
    isMinimised={false}
    isOpenAccess={false}
    onAdvancedSearchReset={[Function]}
    onAdvancedSearchRowAdd={[Function]}
    onAdvancedSearchRowChange={[Function]}
    onAdvancedSearchRowRemove={[Function]}
    onSearch={[Function]}
    onToggleMinimise={[Function]}
    onToggleOpenAccess={[Function]}
    onToggleSearchMode={[Function]}
    updateDocTypeValues={[Function]}
    updateYearRangeFilter={[Function]}
    yearFilter={Object {}}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should render default view 1`] = `
<React.Fragment>
  <WithStyles(SimpleSearchComponent)
    isInHeader={false}
    onInvalidSearch={[Function]}
    onSearch={[Function]}
    onSearchTextChange={[Function]}
    onToggleSearchMode={[Function]}
    searchText=""
    showAdvancedSearchButton={false}
    showMobileSearchButton={false}
    showPrefixIcon={false}
    showSearchButton={false}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should render default view with advanced search 1`] = `
<React.Fragment>
  <WithStyles(AdvancedSearchComponent)
    docTypes={Array []}
    fieldRows={
      Array [
        Object {
          "label": "",
          "searchField": "0",
          "value": "",
        },
      ]
    }
    isMinimised={false}
    isOpenAccess={false}
    onAdvancedSearchReset={[Function]}
    onAdvancedSearchRowAdd={[Function]}
    onAdvancedSearchRowChange={[Function]}
    onAdvancedSearchRowRemove={[Function]}
    onSearch={[Function]}
    onToggleMinimise={[Function]}
    onToggleOpenAccess={[Function]}
    onToggleSearchMode={[Function]}
    updateDocTypeValues={[Function]}
    updateYearRangeFilter={[Function]}
    yearFilter={Object {}}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should render simple search even if it says is advanced, if in header 1`] = `
<React.Fragment>
  <WithStyles(SimpleSearchComponent)
    isInHeader={true}
    onInvalidSearch={[Function]}
    onSearch={[Function]}
    onSearchTextChange={[Function]}
    onToggleSearchMode={[Function]}
    searchText=""
    showAdvancedSearchButton={false}
    showMobileSearchButton={false}
    showPrefixIcon={false}
    showSearchButton={false}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should render with a class "header" for use in AppBar 1`] = `
<React.Fragment>
  <WithStyles(SimpleSearchComponent)
    isInHeader={true}
    onInvalidSearch={[Function]}
    onSearch={[Function]}
    onSearchTextChange={[Function]}
    onToggleSearchMode={[Function]}
    searchText=""
    showAdvancedSearchButton={false}
    showMobileSearchButton={false}
    showPrefixIcon={false}
    showSearchButton={false}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should reset advanced search 1`] = `
<React.Fragment>
  <WithStyles(AdvancedSearchComponent)
    docTypes={Array []}
    fieldRows={
      Array [
        Object {
          "label": "",
          "searchField": "all",
          "value": "i feel lucky",
        },
        Object {
          "label": "",
          "searchField": "rek_title",
          "value": "global warming",
        },
      ]
    }
    isMinimised={false}
    isOpenAccess={true}
    onAdvancedSearchReset={[Function]}
    onAdvancedSearchRowAdd={[Function]}
    onAdvancedSearchRowChange={[Function]}
    onAdvancedSearchRowRemove={[Function]}
    onSearch={[Function]}
    onToggleMinimise={[Function]}
    onToggleOpenAccess={[Function]}
    onToggleSearchMode={[Function]}
    updateDocTypeValues={[Function]}
    updateYearRangeFilter={[Function]}
    yearFilter={Object {}}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should reset advanced search 2`] = `
<React.Fragment>
  <WithStyles(AdvancedSearchComponent)
    docTypes={Array []}
    fieldRows={
      Array [
        Object {
          "searchField": "0",
          "value": "",
        },
      ]
    }
    isOpenAccess={false}
    onAdvancedSearchReset={[Function]}
    onAdvancedSearchRowAdd={[Function]}
    onAdvancedSearchRowChange={[Function]}
    onAdvancedSearchRowRemove={[Function]}
    onSearch={[Function]}
    onToggleMinimise={[Function]}
    onToggleOpenAccess={[Function]}
    onToggleSearchMode={[Function]}
    updateDocTypeValues={[Function]}
    updateYearRangeFilter={[Function]}
    yearFilter={
      Object {
        "from": 0,
        "to": 0,
      }
    }
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should toggle advanced search to minimised view 1`] = `
<React.Fragment>
  <WithStyles(AdvancedSearchComponent)
    docTypes={Array []}
    fieldRows={
      Array [
        Object {
          "label": "",
          "searchField": "0",
          "value": "",
        },
      ]
    }
    isMinimised={false}
    isOpenAccess={false}
    onAdvancedSearchReset={[Function]}
    onAdvancedSearchRowAdd={[Function]}
    onAdvancedSearchRowChange={[Function]}
    onAdvancedSearchRowRemove={[Function]}
    onSearch={[Function]}
    onToggleMinimise={[Function]}
    onToggleOpenAccess={[Function]}
    onToggleSearchMode={[Function]}
    updateDocTypeValues={[Function]}
    updateYearRangeFilter={[Function]}
    yearFilter={Object {}}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should toggle advanced search to minimised view 2`] = `
<React.Fragment>
  <WithStyles(AdvancedSearchComponent)
    docTypes={Array []}
    fieldRows={
      Array [
        Object {
          "label": "",
          "searchField": "0",
          "value": "",
        },
      ]
    }
    isMinimised={true}
    isOpenAccess={false}
    onAdvancedSearchReset={[Function]}
    onAdvancedSearchRowAdd={[Function]}
    onAdvancedSearchRowChange={[Function]}
    onAdvancedSearchRowRemove={[Function]}
    onSearch={[Function]}
    onToggleMinimise={[Function]}
    onToggleOpenAccess={[Function]}
    onToggleSearchMode={[Function]}
    updateDocTypeValues={[Function]}
    updateYearRangeFilter={[Function]}
    yearFilter={Object {}}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should toggle open access for advanced search 1`] = `
<React.Fragment>
  <WithStyles(AdvancedSearchComponent)
    docTypes={Array []}
    fieldRows={
      Array [
        Object {
          "label": "",
          "searchField": "0",
          "value": "",
        },
      ]
    }
    isMinimised={false}
    isOpenAccess={false}
    onAdvancedSearchReset={[Function]}
    onAdvancedSearchRowAdd={[Function]}
    onAdvancedSearchRowChange={[Function]}
    onAdvancedSearchRowRemove={[Function]}
    onSearch={[Function]}
    onToggleMinimise={[Function]}
    onToggleOpenAccess={[Function]}
    onToggleSearchMode={[Function]}
    updateDocTypeValues={[Function]}
    updateYearRangeFilter={[Function]}
    yearFilter={Object {}}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should toggle open access for advanced search 2`] = `
<React.Fragment>
  <WithStyles(AdvancedSearchComponent)
    docTypes={Array []}
    fieldRows={
      Array [
        Object {
          "label": "",
          "searchField": "0",
          "value": "",
        },
      ]
    }
    isMinimised={false}
    isOpenAccess={true}
    onAdvancedSearchReset={[Function]}
    onAdvancedSearchRowAdd={[Function]}
    onAdvancedSearchRowChange={[Function]}
    onAdvancedSearchRowRemove={[Function]}
    onSearch={[Function]}
    onToggleMinimise={[Function]}
    onToggleOpenAccess={[Function]}
    onToggleSearchMode={[Function]}
    updateDocTypeValues={[Function]}
    updateYearRangeFilter={[Function]}
    yearFilter={Object {}}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should toggle search to minimised view of advanced search 1`] = `
<React.Fragment>
  <WithStyles(SimpleSearchComponent)
    isInHeader={false}
    onInvalidSearch={[Function]}
    onSearch={[Function]}
    onSearchTextChange={[Function]}
    onToggleSearchMode={[Function]}
    searchText=""
    showAdvancedSearchButton={false}
    showMobileSearchButton={false}
    showPrefixIcon={false}
    showSearchButton={false}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should toggle search to minimised view of advanced search 2`] = `
<React.Fragment>
  <WithStyles(AdvancedSearchComponent)
    docTypes={Array []}
    fieldRows={
      Array [
        Object {
          "label": "",
          "searchField": "all",
          "value": "i feel very lucky",
        },
      ]
    }
    isMinimised={false}
    isOpenAccess={false}
    onAdvancedSearchReset={[Function]}
    onAdvancedSearchRowAdd={[Function]}
    onAdvancedSearchRowChange={[Function]}
    onAdvancedSearchRowRemove={[Function]}
    onSearch={[Function]}
    onToggleMinimise={[Function]}
    onToggleOpenAccess={[Function]}
    onToggleSearchMode={[Function]}
    updateDocTypeValues={[Function]}
    updateYearRangeFilter={[Function]}
    yearFilter={
      Object {
        "from": undefined,
        "to": undefined,
      }
    }
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should update advanced search row on search text changed 1`] = `
<React.Fragment>
  <WithStyles(AdvancedSearchComponent)
    docTypes={Array []}
    fieldRows={
      Array [
        Object {
          "label": "",
          "searchField": "all",
          "value": "i feel lucky",
        },
      ]
    }
    isMinimised={false}
    isOpenAccess={false}
    onAdvancedSearchReset={[Function]}
    onAdvancedSearchRowAdd={[Function]}
    onAdvancedSearchRowChange={[Function]}
    onAdvancedSearchRowRemove={[Function]}
    onSearch={[Function]}
    onToggleMinimise={[Function]}
    onToggleOpenAccess={[Function]}
    onToggleSearchMode={[Function]}
    updateDocTypeValues={[Function]}
    updateYearRangeFilter={[Function]}
    yearFilter={Object {}}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;

exports[`SearchComponent should update advanced search row on search text changed 2`] = `
<React.Fragment>
  <WithStyles(AdvancedSearchComponent)
    docTypes={Array []}
    fieldRows={
      Array [
        Object {
          "label": "",
          "searchField": "all",
          "value": "i feel more lucky",
        },
      ]
    }
    isMinimised={false}
    isOpenAccess={false}
    onAdvancedSearchReset={[Function]}
    onAdvancedSearchRowAdd={[Function]}
    onAdvancedSearchRowChange={[Function]}
    onAdvancedSearchRowRemove={[Function]}
    onSearch={[Function]}
    onToggleMinimise={[Function]}
    onToggleOpenAccess={[Function]}
    onToggleSearchMode={[Function]}
    updateDocTypeValues={[Function]}
    updateYearRangeFilter={[Function]}
    yearFilter={Object {}}
  />
  <WithStyles(Snackbar)
    anchorOrigin={
      Object {
        "horizontal": "left",
        "vertical": "bottom",
      }
    }
    autoHideDuration={5000}
    message=""
    open={false}
  />
</React.Fragment>
`;
