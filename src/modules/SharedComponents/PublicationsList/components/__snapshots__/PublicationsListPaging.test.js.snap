// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PublicationsListPaging renders  component renders as empty due to currentpage set outside range 1`] = `
<span
  className="publicationsListControls empty"
/>
`;

exports[`PublicationsListPaging renders  component with ellipsis paging results 1`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={0}
  >
    <WithStyles(Grid)
      item={true}
    >
      <WithStyles(Button)
        disabled={false}
        id="pagingPrevious"
        onClick={[Function]}
        style={
          Object {
            "paddingLeft": 4,
          }
        }
        variant="text"
      >
        <pure(ChevronLeftIcon) />
        Previous
      </WithStyles(Button)>
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "flexGrow": 1,
        }
      }
    />
    <Hidden
      implementation="js"
      lgDown={false}
      lgUp={false}
      mdDown={false}
      mdUp={false}
      smDown={false}
      smUp={false}
      xlDown={false}
      xlUp={false}
      xsDown={true}
      xsUp={false}
    >
      <WithStyles(Grid)
        item={true}
      >
        <WithStyles(Button)
          aria-label="Click to select page 1 of 50 result pages"
          className=""
          color="default"
          disabled={false}
          id="pageButton"
          key="1"
          onClick={[Function]}
          size="small"
          variant="text"
        >
          1
        </WithStyles(Button)>
        ...
        <WithStyles(Button)
          aria-label="Click to select page 7 of 50 result pages"
          className=""
          color="default"
          disabled={false}
          id="pageButton"
          key="7"
          onClick={[Function]}
          size="small"
          variant="text"
        >
          7
        </WithStyles(Button)>
        <WithStyles(Button)
          aria-label="Click to select page 8 of 50 result pages"
          className=""
          color="default"
          disabled={false}
          id="pageButton"
          key="8"
          onClick={[Function]}
          size="small"
          variant="text"
        >
          8
        </WithStyles(Button)>
        <WithStyles(Button)
          aria-label="Click to select page 9 of 50 result pages"
          className=""
          color="default"
          disabled={false}
          id="pageButton"
          key="9"
          onClick={[Function]}
          size="small"
          variant="text"
        >
          9
        </WithStyles(Button)>
        <WithStyles(Button)
          aria-label="Click to select page 10 of 50 result pages"
          className=""
          color="primary"
          disabled={true}
          id="pageButton"
          key="10"
          onClick={[Function]}
          size="small"
          variant="text"
        >
          10
        </WithStyles(Button)>
        <WithStyles(Button)
          aria-label="Click to select page 11 of 50 result pages"
          className=""
          color="default"
          disabled={false}
          id="pageButton"
          key="11"
          onClick={[Function]}
          size="small"
          variant="text"
        >
          11
        </WithStyles(Button)>
        <WithStyles(Button)
          aria-label="Click to select page 12 of 50 result pages"
          className=""
          color="default"
          disabled={false}
          id="pageButton"
          key="12"
          onClick={[Function]}
          size="small"
          variant="text"
        >
          12
        </WithStyles(Button)>
        <WithStyles(Button)
          aria-label="Click to select page 13 of 50 result pages"
          className=""
          color="default"
          disabled={false}
          id="pageButton"
          key="13"
          onClick={[Function]}
          size="small"
          variant="text"
        >
          13
        </WithStyles(Button)>
        ...
        <WithStyles(Button)
          aria-label="Click to select page 50 of 50 result pages"
          className=""
          color="default"
          disabled={false}
          id="pageButton"
          key="50"
          onClick={[Function]}
          size="small"
          variant="text"
        >
          50
        </WithStyles(Button)>
      </WithStyles(Grid)>
    </Hidden>
    <Hidden
      implementation="js"
      lgDown={false}
      lgUp={false}
      mdDown={false}
      mdUp={false}
      smDown={false}
      smUp={true}
      xlDown={false}
      xlUp={false}
      xsDown={false}
      xsUp={false}
    >
      <WithStyles(Grid)
        item={true}
        style={
          Object {
            "flexGrow": 1,
          }
        }
      >
        <WithStyles(Button)
          style={
            Object {
              "margin": "0 auto",
            }
          }
          variant="text"
        >
          Page 10 of 50
        </WithStyles(Button)>
      </WithStyles(Grid)>
    </Hidden>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "flexGrow": 1,
        }
      }
    />
    <WithStyles(Grid)
      item={true}
    >
      <WithStyles(Button)
        disabled={false}
        id="pagingNext"
        onClick={[Function]}
        size="small"
        variant="text"
      >
        Next
        <pure(ChevronRightIcon) />
      </WithStyles(Button)>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</div>
`;

exports[`PublicationsListPaging renders  component with empty paging data 1`] = `
<span
  className="publicationsListControls empty"
/>
`;

exports[`PublicationsListPaging renders  component with non-empty paging data, first page 1`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={0}
  >
    <WithStyles(Grid)
      item={true}
    >
      <WithStyles(Button)
        disabled={true}
        id="pagingPrevious"
        onClick={[Function]}
        style={
          Object {
            "paddingLeft": 4,
          }
        }
        variant="text"
      >
        <pure(ChevronLeftIcon) />
        Previous
      </WithStyles(Button)>
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "flexGrow": 1,
        }
      }
    />
    <Hidden
      implementation="js"
      lgDown={false}
      lgUp={false}
      mdDown={false}
      mdUp={false}
      smDown={false}
      smUp={false}
      xlDown={false}
      xlUp={false}
      xsDown={true}
      xsUp={false}
    >
      <WithStyles(Grid)
        item={true}
      >
        <WithStyles(Button)
          aria-label="Click to select page 1 of 3 result pages"
          className=""
          color="primary"
          disabled={true}
          id="pageButton"
          key="1"
          onClick={[Function]}
          size="small"
          variant="text"
        >
          1
        </WithStyles(Button)>
        <WithStyles(Button)
          aria-label="Click to select page 2 of 3 result pages"
          className=""
          color="default"
          disabled={false}
          id="pageButton"
          key="2"
          onClick={[Function]}
          size="small"
          variant="text"
        >
          2
        </WithStyles(Button)>
        <WithStyles(Button)
          aria-label="Click to select page 3 of 3 result pages"
          className=""
          color="default"
          disabled={false}
          id="pageButton"
          key="3"
          onClick={[Function]}
          size="small"
          variant="text"
        >
          3
        </WithStyles(Button)>
      </WithStyles(Grid)>
    </Hidden>
    <Hidden
      implementation="js"
      lgDown={false}
      lgUp={false}
      mdDown={false}
      mdUp={false}
      smDown={false}
      smUp={true}
      xlDown={false}
      xlUp={false}
      xsDown={false}
      xsUp={false}
    >
      <WithStyles(Grid)
        item={true}
        style={
          Object {
            "flexGrow": 1,
          }
        }
      >
        <WithStyles(Button)
          style={
            Object {
              "margin": "0 auto",
            }
          }
          variant="text"
        >
          Page 1 of 3
        </WithStyles(Button)>
      </WithStyles(Grid)>
    </Hidden>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "flexGrow": 1,
        }
      }
    />
    <WithStyles(Grid)
      item={true}
    >
      <WithStyles(Button)
        disabled={false}
        id="pagingNext"
        onClick={[Function]}
        size="small"
        variant="text"
      >
        Next
        <pure(ChevronRightIcon) />
      </WithStyles(Button)>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</div>
`;

exports[`PublicationsListPaging renders  component with non-empty paging data, last page 1`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={0}
  >
    <WithStyles(Grid)
      item={true}
    >
      <WithStyles(Button)
        disabled={false}
        id="pagingPrevious"
        onClick={[Function]}
        style={
          Object {
            "paddingLeft": 4,
          }
        }
        variant="text"
      >
        <pure(ChevronLeftIcon) />
        Previous
      </WithStyles(Button)>
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "flexGrow": 1,
        }
      }
    />
    <Hidden
      implementation="js"
      lgDown={false}
      lgUp={false}
      mdDown={false}
      mdUp={false}
      smDown={false}
      smUp={false}
      xlDown={false}
      xlUp={false}
      xsDown={true}
      xsUp={false}
    >
      <WithStyles(Grid)
        item={true}
      >
        <WithStyles(Button)
          aria-label="Click to select page 1 of 3 result pages"
          className=""
          color="default"
          disabled={false}
          id="pageButton"
          key="1"
          onClick={[Function]}
          size="small"
          variant="text"
        >
          1
        </WithStyles(Button)>
        <WithStyles(Button)
          aria-label="Click to select page 2 of 3 result pages"
          className=""
          color="default"
          disabled={false}
          id="pageButton"
          key="2"
          onClick={[Function]}
          size="small"
          variant="text"
        >
          2
        </WithStyles(Button)>
        <WithStyles(Button)
          aria-label="Click to select page 3 of 3 result pages"
          className=""
          color="primary"
          disabled={true}
          id="pageButton"
          key="3"
          onClick={[Function]}
          size="small"
          variant="text"
        >
          3
        </WithStyles(Button)>
      </WithStyles(Grid)>
    </Hidden>
    <Hidden
      implementation="js"
      lgDown={false}
      lgUp={false}
      mdDown={false}
      mdUp={false}
      smDown={false}
      smUp={true}
      xlDown={false}
      xlUp={false}
      xsDown={false}
      xsUp={false}
    >
      <WithStyles(Grid)
        item={true}
        style={
          Object {
            "flexGrow": 1,
          }
        }
      >
        <WithStyles(Button)
          style={
            Object {
              "margin": "0 auto",
            }
          }
          variant="text"
        >
          Page 3 of 3
        </WithStyles(Button)>
      </WithStyles(Grid)>
    </Hidden>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "flexGrow": 1,
        }
      }
    />
    <WithStyles(Grid)
      item={true}
    >
      <WithStyles(Button)
        disabled={true}
        id="pagingNext"
        onClick={[Function]}
        size="small"
        variant="text"
      >
        Next
        <pure(ChevronRightIcon) />
      </WithStyles(Button)>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</div>
`;

exports[`PublicationsListPaging renders  component with non-empty paging data, second page 1`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={0}
  >
    <WithStyles(Grid)
      item={true}
    >
      <WithStyles(Button)
        disabled={false}
        id="pagingPrevious"
        onClick={[Function]}
        style={
          Object {
            "paddingLeft": 4,
          }
        }
        variant="text"
      >
        <pure(ChevronLeftIcon) />
        Previous
      </WithStyles(Button)>
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "flexGrow": 1,
        }
      }
    />
    <Hidden
      implementation="js"
      lgDown={false}
      lgUp={false}
      mdDown={false}
      mdUp={false}
      smDown={false}
      smUp={false}
      xlDown={false}
      xlUp={false}
      xsDown={true}
      xsUp={false}
    >
      <WithStyles(Grid)
        item={true}
      >
        <WithStyles(Button)
          aria-label="Click to select page 1 of 3 result pages"
          className=""
          color="default"
          disabled={false}
          id="pageButton"
          key="1"
          onClick={[Function]}
          size="small"
          variant="text"
        >
          1
        </WithStyles(Button)>
        <WithStyles(Button)
          aria-label="Click to select page 2 of 3 result pages"
          className=""
          color="primary"
          disabled={true}
          id="pageButton"
          key="2"
          onClick={[Function]}
          size="small"
          variant="text"
        >
          2
        </WithStyles(Button)>
        <WithStyles(Button)
          aria-label="Click to select page 3 of 3 result pages"
          className=""
          color="default"
          disabled={false}
          id="pageButton"
          key="3"
          onClick={[Function]}
          size="small"
          variant="text"
        >
          3
        </WithStyles(Button)>
      </WithStyles(Grid)>
    </Hidden>
    <Hidden
      implementation="js"
      lgDown={false}
      lgUp={false}
      mdDown={false}
      mdUp={false}
      smDown={false}
      smUp={true}
      xlDown={false}
      xlUp={false}
      xsDown={false}
      xsUp={false}
    >
      <WithStyles(Grid)
        item={true}
        style={
          Object {
            "flexGrow": 1,
          }
        }
      >
        <WithStyles(Button)
          style={
            Object {
              "margin": "0 auto",
            }
          }
          variant="text"
        >
          Page 2 of 3
        </WithStyles(Button)>
      </WithStyles(Grid)>
    </Hidden>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "flexGrow": 1,
        }
      }
    />
    <WithStyles(Grid)
      item={true}
    >
      <WithStyles(Button)
        disabled={false}
        id="pagingNext"
        onClick={[Function]}
        size="small"
        variant="text"
      >
        Next
        <pure(ChevronRightIcon) />
      </WithStyles(Button)>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</div>
`;

exports[`PublicationsListPaging renders  component with styles 1`] = `
<PublicationsListPaging
  classes={
    Object {
      "fakeDisabled": "PublicationsListPaging-fakeDisabled-4",
      "nextPrevButtons": "PublicationsListPaging-nextPrevButtons-2",
      "nextPrevIcons": "PublicationsListPaging-nextPrevIcons-3",
      "pageButton": "PublicationsListPaging-pageButton-1",
    }
  }
  disabled={false}
  onPageChanged={[MockFunction]}
  pagingData={
    Object {
      "current_page": 1,
      "from": 0,
      "per_page": 20,
      "to": 0,
      "total": 0,
    }
  }
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "overrides": Object {},
      "palette": Object {
        "action": Object {
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "hover": "rgba(0, 0, 0, 0.08)",
          "hoverOpacity": 0.08,
          "selected": "rgba(0, 0, 0, 0.14)",
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#fafafa",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "primary": Object {
          "contrastText": "#fff",
          "dark": "#303f9f",
          "light": "#7986cb",
          "main": "#3f51b5",
        },
        "secondary": Object {
          "contrastText": "#fff",
          "dark": "#c51162",
          "light": "#ff4081",
          "main": "#f50057",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "rgba(0, 0, 0, 0.87)",
          "secondary": "rgba(0, 0, 0, 0.54)",
        },
        "tonalOffset": 0.2,
        "type": "light",
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": Object {
        "unit": 8,
      },
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "lineHeight": "1.46429em",
        },
        "body1Next": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "lineHeight": "1.71429em",
        },
        "body2Next": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.5,
        },
        "button": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "textTransform": "uppercase",
        },
        "buttonNext": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "color": "rgba(0, 0, 0, 0.54)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "lineHeight": "1.375em",
        },
        "captionNext": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "display1": Object {
          "color": "rgba(0, 0, 0, 0.54)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "lineHeight": "1.20588em",
        },
        "display2": Object {
          "color": "rgba(0, 0, 0, 0.54)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.8125rem",
          "fontWeight": 400,
          "lineHeight": "1.13333em",
          "marginLeft": "-.02em",
        },
        "display3": Object {
          "color": "rgba(0, 0, 0, 0.54)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.5rem",
          "fontWeight": 400,
          "letterSpacing": "-.02em",
          "lineHeight": "1.30357em",
          "marginLeft": "-.02em",
        },
        "display4": Object {
          "color": "rgba(0, 0, 0, 0.54)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "7rem",
          "fontWeight": 300,
          "letterSpacing": "-.04em",
          "lineHeight": "1.14286em",
          "marginLeft": "-.04em",
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "6rem",
          "fontWeight": 300,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1,
        },
        "h2": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1,
        },
        "h3": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.04,
        },
        "h4": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.17,
        },
        "h5": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.5rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.33,
        },
        "h6": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "letterSpacing": "0.0075em",
          "lineHeight": 1.6,
        },
        "headline": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.5rem",
          "fontWeight": 400,
          "lineHeight": "1.35417em",
        },
        "overline": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subheading": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "lineHeight": "1.5em",
        },
        "subtitle1": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
        "title": Object {
          "color": "rgba(0, 0, 0, 0.87)",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.3125rem",
          "fontWeight": 500,
          "lineHeight": "1.16667em",
        },
        "useNextVariants": false,
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "tooltip": 1500,
      },
    }
  }
/>
`;

exports[`PublicationsListPaging renders  should render buttons with zero total pages 1`] = `
<WithStyles(Button)
  aria-label="Click to select page test of 0 result pages"
  className=""
  color="default"
  disabled={false}
  id="pageButton"
  onClick={[Function]}
  size="small"
  variant="text"
>
  test
</WithStyles(Button)>
`;
