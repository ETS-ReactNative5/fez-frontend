// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FacetsFilter  components for mock data 1`] = `
<div
  className="facetsFilter"
>
  <WithStyles(List)
    component="nav"
    dense={true}
  >
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Display type"
      id="facet-category-Display-type"
      key="0"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Journal Article (2)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Keywords"
      id="facet-category-Keywords"
      key="1"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Applied Microbiology and Biotechnology (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={1}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Biochemistry (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={2}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Bioengineering (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={3}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Biomaterials (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={4}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Biomedical Engineering (1)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Year published"
      id="facet-category-Year-published"
      key="2"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="2017 (2)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Journal name"
      id="facet-category-Journal-name"
      key="3"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Metallomics (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={1}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Nature biotechnology (1)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Collection"
      id="facet-category-Collection"
      key="4"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Crossref Import (2)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Author"
      id="facet-category-Author"
      key="5"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Schenk, Gerhard (Gary) (1)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <DateRange
      defaultValue={
        Object {
          "from": 2007,
          "to": 2022,
        }
      }
      locale={
        Object {
          "displayTitle": "Published year range",
          "fromFieldLabel": "From",
          "rangeSubmitButtonLabel": "Go",
          "toFieldLabel": "To",
        }
      }
      onChange={[Function]}
      onToggle={[Function]}
      value={Object {}}
    />
  </WithStyles(List)>
</div>
`;

exports[`FacetsFilter  components for mock data 2`] = `
<div
  className="facetsFilter"
>
  <WithStyles(List)
    component="nav"
    dense={true}
  >
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Display type"
      id="facet-category-Display-type"
      key="0"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Journal Article (2)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={1}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Book (4)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Keywords"
      id="facet-category-Keywords"
      key="1"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Applied Microbiology and Biotechnology (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={1}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Biochemistry (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={2}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Bioengineering (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={3}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Biomaterials (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={4}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Biomedical Engineering (1)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Year published"
      id="facet-category-Year-published"
      key="2"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="2017 (2)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Journal name"
      id="facet-category-Journal-name"
      key="3"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Metallomics (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={1}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Nature biotechnology (1)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Collection"
      id="facet-category-Collection"
      key="4"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Crossref Import (2)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Author"
      id="facet-category-Author"
      key="5"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Schenk, Gerhard (Gary) (1)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <DateRange
      defaultValue={
        Object {
          "from": 2007,
          "to": 2022,
        }
      }
      locale={
        Object {
          "displayTitle": "Published year range",
          "fromFieldLabel": "From",
          "rangeSubmitButtonLabel": "Go",
          "toFieldLabel": "To",
        }
      }
      onChange={[Function]}
      onToggle={[Function]}
      value={Object {}}
    />
  </WithStyles(List)>
</div>
`;

exports[`FacetsFilter  components for mock data activating a facet selection 1`] = `
<div
  className="facetsFilter"
>
  <WithStyles(List)
    component="nav"
    dense={true}
  >
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Display type"
      id="facet-category-Display-type"
      key="0"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter active"
            disabled={undefined}
            index={0}
            isActive={true}
            onFacetClick={[Function]}
            primaryText="Journal Article (2)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Keywords"
      id="facet-category-Keywords"
      key="1"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Applied Microbiology and Biotechnology (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter active"
            disabled={undefined}
            index={1}
            isActive={true}
            onFacetClick={[Function]}
            primaryText="Biochemistry (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={2}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Bioengineering (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={3}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Biomaterials (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={4}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Biomedical Engineering (1)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Year published"
      id="facet-category-Year-published"
      key="2"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="2017 (2)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Journal name"
      id="facet-category-Journal-name"
      key="3"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Metallomics (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={1}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Nature biotechnology (1)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Collection"
      id="facet-category-Collection"
      key="4"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Crossref Import (2)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Author"
      id="facet-category-Author"
      key="5"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Schenk, Gerhard (Gary) (1)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <DateRange
      defaultValue={
        Object {
          "from": 2007,
          "to": 2022,
        }
      }
      locale={
        Object {
          "displayTitle": "Published year range",
          "fromFieldLabel": "From",
          "rangeSubmitButtonLabel": "Go",
          "toFieldLabel": "To",
        }
      }
      onChange={[Function]}
      onToggle={[Function]}
      value={Object {}}
    />
  </WithStyles(List)>
  <div
    className="columns"
  >
    <div
      className="column is-hidden-mobile"
    />
    <div
      className="column is-narrow-tablet"
    >
      <RaisedButton
        disabled={false}
        fullWidth={true}
        label="Reset"
        labelPosition="after"
        onClick={[Function]}
        primary={false}
        secondary={false}
      />
    </div>
  </div>
</div>
`;

exports[`FacetsFilter  components for mock data with active facets set 1`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction],
      "subscribe": [MockFunction],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <FacetsFilter
        activeFacets={
          Object {
            "filters": Object {
              "Display type": 179,
            },
            "ranges": Object {},
          }
        }
        excludeFacetsList={Array []}
        facetsData={
          Object {
            "Author": Object {
              "buckets": Array [
                Object {
                  "doc_count": 1,
                  "key": 683,
                },
              ],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Author (lookup)": Object {
              "buckets": Array [
                Object {
                  "doc_count": 1,
                  "key": "Schenk, Gerhard (Gary)",
                },
              ],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Collection": Object {
              "buckets": Array [
                Object {
                  "doc_count": 2,
                  "key": "UQ:639325",
                },
              ],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Collection (lookup)": Object {
              "buckets": Array [
                Object {
                  "doc_count": 2,
                  "key": "Crossref Import",
                },
              ],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Display type": Object {
              "buckets": Array [
                Object {
                  "doc_count": 2,
                  "key": 179,
                },
              ],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Display type (lookup)": Object {
              "buckets": Array [
                Object {
                  "doc_count": 2,
                  "key": "Journal Article",
                },
              ],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Genre": Object {
              "buckets": Array [],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Journal name": Object {
              "buckets": Array [
                Object {
                  "doc_count": 1,
                  "key": "Metallomics",
                },
                Object {
                  "doc_count": 1,
                  "key": "Nature biotechnology",
                },
              ],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Keywords": Object {
              "buckets": Array [
                Object {
                  "doc_count": 1,
                  "key": "Applied Microbiology and Biotechnology",
                },
                Object {
                  "doc_count": 1,
                  "key": "Biochemistry",
                },
                Object {
                  "doc_count": 1,
                  "key": "Bioengineering",
                },
                Object {
                  "doc_count": 1,
                  "key": "Biomaterials",
                },
                Object {
                  "doc_count": 1,
                  "key": "Biomedical Engineering",
                },
              ],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 5,
            },
            "Scopus document type": Object {
              "buckets": Array [],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Scopus document type (lookup)": Object {
              "buckets": Array [],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Subject": Object {
              "buckets": Array [],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Subject (lookup)": Object {
              "buckets": Array [],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Subtype": Object {
              "buckets": Array [],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Year published": Object {
              "buckets": Array [
                Object {
                  "doc_count": 2,
                  "key": "2017",
                },
              ],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
          }
        }
        lookupFacetsList={Object {}}
        onFacetsChanged={[MockFunction]}
        renameFacetsList={Object {}}
        showOpenAccessFilter={false}
      >
        <div
          className="facetsFilter"
        >
          <WithStyles(List)
            component="nav"
            dense={true}
          >
            <List
              classes={
                Object {
                  "dense": "MuiList-dense-03",
                  "padding": "MuiList-padding-02",
                  "root": "MuiList-root-01",
                  "subheader": "MuiList-subheader-04",
                }
              }
              component="nav"
              dense={true}
              disablePadding={false}
            >
              <nav
                className="MuiList-root-01 MuiList-dense-03 MuiList-padding-02"
              >
                <WithStyles(FacetsFilterListItem)
                  className="facetsCategory"
                  facetTitle="Display type"
                  id="facet-category-Display-type"
                  key="0"
                  nestedItems={
                    Array [
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter active"
                        disabled={undefined}
                        index={0}
                        isActive={true}
                        onFacetClick={[Function]}
                        primaryText="Journal Article (2)"
                      />,
                    ]
                  }
                  onToggle={[Function]}
                >
                  <FacetsFilterListItem
                    className="facetsCategory"
                    classes={
                      Object {
                        "listItemGutters": "FacetsFilterListItem-listItemGutters-05",
                      }
                    }
                    facetTitle="Display type"
                    id="facet-category-Display-type"
                    nestedItems={
                      Array [
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter active"
                          disabled={undefined}
                          index={0}
                          isActive={true}
                          onFacetClick={[Function]}
                          primaryText="Journal Article (2)"
                        />,
                      ]
                    }
                    onToggle={[Function]}
                  >
                    <WithStyles(ListItem)
                      button={true}
                      classes={
                        Object {
                          "gutters": "FacetsFilterListItem-listItemGutters-05",
                        }
                      }
                      key="facet_filter_undefined"
                      onClick={[Function]}
                    >
                      <ListItem
                        ContainerComponent="li"
                        button={true}
                        classes={
                          Object {
                            "button": "MuiListItem-button-014",
                            "container": "MuiListItem-container-07",
                            "default": "MuiListItem-default-09",
                            "dense": "MuiListItem-dense-010",
                            "disabled": "MuiListItem-disabled-011",
                            "divider": "MuiListItem-divider-012",
                            "focusVisible": "MuiListItem-focusVisible-08",
                            "gutters": "MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05",
                            "root": "MuiListItem-root-06",
                            "secondaryAction": "MuiListItem-secondaryAction-015",
                            "selected": "MuiListItem-selected-016",
                          }
                        }
                        dense={false}
                        disableGutters={false}
                        disabled={false}
                        divider={false}
                        onClick={[Function]}
                        selected={false}
                      >
                        <WithStyles(ButtonBase)
                          className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                          component="div"
                          disabled={false}
                          focusVisibleClassName="MuiListItem-focusVisible-08"
                          onClick={[Function]}
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-018",
                                "focusVisible": "MuiButtonBase-focusVisible-019",
                                "root": "MuiButtonBase-root-017",
                              }
                            }
                            component="div"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="MuiListItem-focusVisible-08"
                            onClick={[Function]}
                            tabIndex="0"
                            type="button"
                          >
                            <div
                              className="MuiButtonBase-root-017 MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex="0"
                            >
                              <WithStyles(ListItemText)
                                key=".0"
                                primary="Display type"
                                primaryTypographyProps={
                                  Object {
                                    "variant": "body2",
                                  }
                                }
                              >
                                <ListItemText
                                  classes={
                                    Object {
                                      "dense": "MuiListItemText-dense-022",
                                      "inset": "MuiListItemText-inset-021",
                                      "primary": "MuiListItemText-primary-023",
                                      "root": "MuiListItemText-root-020",
                                      "secondary": "MuiListItemText-secondary-024",
                                      "textDense": "MuiListItemText-textDense-025",
                                    }
                                  }
                                  disableTypography={false}
                                  inset={false}
                                  primary="Display type"
                                  primaryTypographyProps={
                                    Object {
                                      "variant": "body2",
                                    }
                                  }
                                >
                                  <div
                                    className="MuiListItemText-root-020 MuiListItemText-dense-022"
                                  >
                                    <WithStyles(Typography)
                                      className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                      component="span"
                                      variant="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-039",
                                            "alignJustify": "MuiTypography-alignJustify-041",
                                            "alignLeft": "MuiTypography-alignLeft-038",
                                            "alignRight": "MuiTypography-alignRight-040",
                                            "body1": "MuiTypography-body1-035",
                                            "body2": "MuiTypography-body2-034",
                                            "button": "MuiTypography-button-037",
                                            "caption": "MuiTypography-caption-036",
                                            "colorError": "MuiTypography-colorError-050",
                                            "colorInherit": "MuiTypography-colorInherit-045",
                                            "colorPrimary": "MuiTypography-colorPrimary-046",
                                            "colorSecondary": "MuiTypography-colorSecondary-047",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary-048",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary-049",
                                            "display1": "MuiTypography-display1-030",
                                            "display2": "MuiTypography-display2-029",
                                            "display3": "MuiTypography-display3-028",
                                            "display4": "MuiTypography-display4-027",
                                            "gutterBottom": "MuiTypography-gutterBottom-043",
                                            "headline": "MuiTypography-headline-031",
                                            "noWrap": "MuiTypography-noWrap-042",
                                            "paragraph": "MuiTypography-paragraph-044",
                                            "root": "MuiTypography-root-026",
                                            "subheading": "MuiTypography-subheading-033",
                                            "title": "MuiTypography-title-032",
                                          }
                                        }
                                        color="default"
                                        component="span"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        variant="body2"
                                      >
                                        <span
                                          className="MuiTypography-root-026 MuiTypography-body2-034 MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        >
                                          Display type
                                        </span>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </div>
                                </ListItemText>
                              </WithStyles(ListItemText)>
                              <pure(ExpandMoreIcon)
                                key=".1"
                              >
                                <ExpandMoreIcon>
                                  <WithStyles(SvgIcon)>
                                    <SvgIcon
                                      classes={
                                        Object {
                                          "colorAction": "MuiSvgIcon-colorAction-054",
                                          "colorDisabled": "MuiSvgIcon-colorDisabled-056",
                                          "colorError": "MuiSvgIcon-colorError-055",
                                          "colorPrimary": "MuiSvgIcon-colorPrimary-052",
                                          "colorSecondary": "MuiSvgIcon-colorSecondary-053",
                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-057",
                                          "root": "MuiSvgIcon-root-051",
                                        }
                                      }
                                      color="inherit"
                                      component="svg"
                                      fontSize="default"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="MuiSvgIcon-root-051"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                        />
                                        <path
                                          d="M0 0h24v24H0z"
                                          fill="none"
                                        />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ExpandMoreIcon>
                              </pure(ExpandMoreIcon)>
                              <WithStyles(TouchRipple)
                                center={false}
                                innerRef={[Function]}
                              >
                                <TouchRipple
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child-062",
                                      "childLeaving": "MuiTouchRipple-childLeaving-063",
                                      "childPulsate": "MuiTouchRipple-childPulsate-064",
                                      "ripple": "MuiTouchRipple-ripple-059",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-061",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible-060",
                                      "root": "MuiTouchRipple-root-058",
                                    }
                                  }
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    className="MuiTouchRipple-root-058"
                                    component="span"
                                    enter={true}
                                    exit={true}
                                  >
                                    <span
                                      className="MuiTouchRipple-root-058"
                                    />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </div>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </ListItem>
                    </WithStyles(ListItem)>
                    <WithStyles(Collapse)
                      timeout="auto"
                      unmountOnExit={true}
                    >
                      <Collapse
                        classes={
                          Object {
                            "container": "MuiCollapse-container-065",
                            "entered": "MuiCollapse-entered-066",
                            "wrapper": "MuiCollapse-wrapper-067",
                            "wrapperInner": "MuiCollapse-wrapperInner-068",
                          }
                        }
                        collapsedHeight="0px"
                        component="div"
                        theme={
                          Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "hover": "rgba(0, 0, 0, 0.08)",
                                "hoverOpacity": 0.08,
                                "selected": "rgba(0, 0, 0, 0.14)",
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                              "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                              "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                              "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                              "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                              "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                              "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                              "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                              "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                              "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                              "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                              "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                              "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                              "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": Object {
                              "unit": 8,
                            },
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "lineHeight": "1.46429em",
                              },
                              "body2": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "lineHeight": "1.71429em",
                              },
                              "button": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "lineHeight": "1.375em",
                              },
                              "display1": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.20588em",
                              },
                              "display2": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.8125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.13333em",
                                "marginLeft": "-.02em",
                              },
                              "display3": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "-.02em",
                                "lineHeight": "1.30357em",
                                "marginLeft": "-.02em",
                              },
                              "display4": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "7rem",
                                "fontWeight": 300,
                                "letterSpacing": "-.04em",
                                "lineHeight": "1.14286em",
                                "marginLeft": "-.04em",
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "headline": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "lineHeight": "1.35417em",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subheading": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "lineHeight": "1.5em",
                              },
                              "title": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.3125rem",
                                "fontWeight": 500,
                                "lineHeight": "1.16667em",
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "tooltip": 1500,
                            },
                          }
                        }
                        timeout="auto"
                        unmountOnExit={true}
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={true}
                        />
                      </Collapse>
                    </WithStyles(Collapse)>
                  </FacetsFilterListItem>
                </WithStyles(FacetsFilterListItem)>
                <WithStyles(FacetsFilterListItem)
                  className="facetsCategory"
                  facetTitle="Keywords"
                  id="facet-category-Keywords"
                  key="1"
                  nestedItems={
                    Array [
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={0}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="Applied Microbiology and Biotechnology (1)"
                      />,
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={1}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="Biochemistry (1)"
                      />,
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={2}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="Bioengineering (1)"
                      />,
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={3}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="Biomaterials (1)"
                      />,
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={4}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="Biomedical Engineering (1)"
                      />,
                    ]
                  }
                  onToggle={[Function]}
                >
                  <FacetsFilterListItem
                    className="facetsCategory"
                    classes={
                      Object {
                        "listItemGutters": "FacetsFilterListItem-listItemGutters-05",
                      }
                    }
                    facetTitle="Keywords"
                    id="facet-category-Keywords"
                    nestedItems={
                      Array [
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={0}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="Applied Microbiology and Biotechnology (1)"
                        />,
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={1}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="Biochemistry (1)"
                        />,
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={2}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="Bioengineering (1)"
                        />,
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={3}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="Biomaterials (1)"
                        />,
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={4}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="Biomedical Engineering (1)"
                        />,
                      ]
                    }
                    onToggle={[Function]}
                  >
                    <WithStyles(ListItem)
                      button={true}
                      classes={
                        Object {
                          "gutters": "FacetsFilterListItem-listItemGutters-05",
                        }
                      }
                      key="facet_filter_undefined"
                      onClick={[Function]}
                    >
                      <ListItem
                        ContainerComponent="li"
                        button={true}
                        classes={
                          Object {
                            "button": "MuiListItem-button-014",
                            "container": "MuiListItem-container-07",
                            "default": "MuiListItem-default-09",
                            "dense": "MuiListItem-dense-010",
                            "disabled": "MuiListItem-disabled-011",
                            "divider": "MuiListItem-divider-012",
                            "focusVisible": "MuiListItem-focusVisible-08",
                            "gutters": "MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05",
                            "root": "MuiListItem-root-06",
                            "secondaryAction": "MuiListItem-secondaryAction-015",
                            "selected": "MuiListItem-selected-016",
                          }
                        }
                        dense={false}
                        disableGutters={false}
                        disabled={false}
                        divider={false}
                        onClick={[Function]}
                        selected={false}
                      >
                        <WithStyles(ButtonBase)
                          className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                          component="div"
                          disabled={false}
                          focusVisibleClassName="MuiListItem-focusVisible-08"
                          onClick={[Function]}
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-018",
                                "focusVisible": "MuiButtonBase-focusVisible-019",
                                "root": "MuiButtonBase-root-017",
                              }
                            }
                            component="div"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="MuiListItem-focusVisible-08"
                            onClick={[Function]}
                            tabIndex="0"
                            type="button"
                          >
                            <div
                              className="MuiButtonBase-root-017 MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex="0"
                            >
                              <WithStyles(ListItemText)
                                key=".0"
                                primary="Keywords"
                                primaryTypographyProps={
                                  Object {
                                    "variant": "body2",
                                  }
                                }
                              >
                                <ListItemText
                                  classes={
                                    Object {
                                      "dense": "MuiListItemText-dense-022",
                                      "inset": "MuiListItemText-inset-021",
                                      "primary": "MuiListItemText-primary-023",
                                      "root": "MuiListItemText-root-020",
                                      "secondary": "MuiListItemText-secondary-024",
                                      "textDense": "MuiListItemText-textDense-025",
                                    }
                                  }
                                  disableTypography={false}
                                  inset={false}
                                  primary="Keywords"
                                  primaryTypographyProps={
                                    Object {
                                      "variant": "body2",
                                    }
                                  }
                                >
                                  <div
                                    className="MuiListItemText-root-020 MuiListItemText-dense-022"
                                  >
                                    <WithStyles(Typography)
                                      className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                      component="span"
                                      variant="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-039",
                                            "alignJustify": "MuiTypography-alignJustify-041",
                                            "alignLeft": "MuiTypography-alignLeft-038",
                                            "alignRight": "MuiTypography-alignRight-040",
                                            "body1": "MuiTypography-body1-035",
                                            "body2": "MuiTypography-body2-034",
                                            "button": "MuiTypography-button-037",
                                            "caption": "MuiTypography-caption-036",
                                            "colorError": "MuiTypography-colorError-050",
                                            "colorInherit": "MuiTypography-colorInherit-045",
                                            "colorPrimary": "MuiTypography-colorPrimary-046",
                                            "colorSecondary": "MuiTypography-colorSecondary-047",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary-048",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary-049",
                                            "display1": "MuiTypography-display1-030",
                                            "display2": "MuiTypography-display2-029",
                                            "display3": "MuiTypography-display3-028",
                                            "display4": "MuiTypography-display4-027",
                                            "gutterBottom": "MuiTypography-gutterBottom-043",
                                            "headline": "MuiTypography-headline-031",
                                            "noWrap": "MuiTypography-noWrap-042",
                                            "paragraph": "MuiTypography-paragraph-044",
                                            "root": "MuiTypography-root-026",
                                            "subheading": "MuiTypography-subheading-033",
                                            "title": "MuiTypography-title-032",
                                          }
                                        }
                                        color="default"
                                        component="span"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        variant="body2"
                                      >
                                        <span
                                          className="MuiTypography-root-026 MuiTypography-body2-034 MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        >
                                          Keywords
                                        </span>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </div>
                                </ListItemText>
                              </WithStyles(ListItemText)>
                              <pure(ExpandMoreIcon)
                                key=".1"
                              >
                                <ExpandMoreIcon>
                                  <WithStyles(SvgIcon)>
                                    <SvgIcon
                                      classes={
                                        Object {
                                          "colorAction": "MuiSvgIcon-colorAction-054",
                                          "colorDisabled": "MuiSvgIcon-colorDisabled-056",
                                          "colorError": "MuiSvgIcon-colorError-055",
                                          "colorPrimary": "MuiSvgIcon-colorPrimary-052",
                                          "colorSecondary": "MuiSvgIcon-colorSecondary-053",
                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-057",
                                          "root": "MuiSvgIcon-root-051",
                                        }
                                      }
                                      color="inherit"
                                      component="svg"
                                      fontSize="default"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="MuiSvgIcon-root-051"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                        />
                                        <path
                                          d="M0 0h24v24H0z"
                                          fill="none"
                                        />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ExpandMoreIcon>
                              </pure(ExpandMoreIcon)>
                              <WithStyles(TouchRipple)
                                center={false}
                                innerRef={[Function]}
                              >
                                <TouchRipple
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child-062",
                                      "childLeaving": "MuiTouchRipple-childLeaving-063",
                                      "childPulsate": "MuiTouchRipple-childPulsate-064",
                                      "ripple": "MuiTouchRipple-ripple-059",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-061",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible-060",
                                      "root": "MuiTouchRipple-root-058",
                                    }
                                  }
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    className="MuiTouchRipple-root-058"
                                    component="span"
                                    enter={true}
                                    exit={true}
                                  >
                                    <span
                                      className="MuiTouchRipple-root-058"
                                    />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </div>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </ListItem>
                    </WithStyles(ListItem)>
                    <WithStyles(Collapse)
                      timeout="auto"
                      unmountOnExit={true}
                    >
                      <Collapse
                        classes={
                          Object {
                            "container": "MuiCollapse-container-065",
                            "entered": "MuiCollapse-entered-066",
                            "wrapper": "MuiCollapse-wrapper-067",
                            "wrapperInner": "MuiCollapse-wrapperInner-068",
                          }
                        }
                        collapsedHeight="0px"
                        component="div"
                        theme={
                          Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "hover": "rgba(0, 0, 0, 0.08)",
                                "hoverOpacity": 0.08,
                                "selected": "rgba(0, 0, 0, 0.14)",
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                              "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                              "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                              "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                              "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                              "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                              "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                              "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                              "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                              "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                              "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                              "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                              "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                              "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": Object {
                              "unit": 8,
                            },
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "lineHeight": "1.46429em",
                              },
                              "body2": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "lineHeight": "1.71429em",
                              },
                              "button": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "lineHeight": "1.375em",
                              },
                              "display1": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.20588em",
                              },
                              "display2": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.8125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.13333em",
                                "marginLeft": "-.02em",
                              },
                              "display3": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "-.02em",
                                "lineHeight": "1.30357em",
                                "marginLeft": "-.02em",
                              },
                              "display4": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "7rem",
                                "fontWeight": 300,
                                "letterSpacing": "-.04em",
                                "lineHeight": "1.14286em",
                                "marginLeft": "-.04em",
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "headline": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "lineHeight": "1.35417em",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subheading": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "lineHeight": "1.5em",
                              },
                              "title": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.3125rem",
                                "fontWeight": 500,
                                "lineHeight": "1.16667em",
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "tooltip": 1500,
                            },
                          }
                        }
                        timeout="auto"
                        unmountOnExit={true}
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={true}
                        />
                      </Collapse>
                    </WithStyles(Collapse)>
                  </FacetsFilterListItem>
                </WithStyles(FacetsFilterListItem)>
                <WithStyles(FacetsFilterListItem)
                  className="facetsCategory"
                  facetTitle="Year published"
                  id="facet-category-Year-published"
                  key="2"
                  nestedItems={
                    Array [
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={0}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="2017 (2)"
                      />,
                    ]
                  }
                  onToggle={[Function]}
                >
                  <FacetsFilterListItem
                    className="facetsCategory"
                    classes={
                      Object {
                        "listItemGutters": "FacetsFilterListItem-listItemGutters-05",
                      }
                    }
                    facetTitle="Year published"
                    id="facet-category-Year-published"
                    nestedItems={
                      Array [
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={0}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="2017 (2)"
                        />,
                      ]
                    }
                    onToggle={[Function]}
                  >
                    <WithStyles(ListItem)
                      button={true}
                      classes={
                        Object {
                          "gutters": "FacetsFilterListItem-listItemGutters-05",
                        }
                      }
                      key="facet_filter_undefined"
                      onClick={[Function]}
                    >
                      <ListItem
                        ContainerComponent="li"
                        button={true}
                        classes={
                          Object {
                            "button": "MuiListItem-button-014",
                            "container": "MuiListItem-container-07",
                            "default": "MuiListItem-default-09",
                            "dense": "MuiListItem-dense-010",
                            "disabled": "MuiListItem-disabled-011",
                            "divider": "MuiListItem-divider-012",
                            "focusVisible": "MuiListItem-focusVisible-08",
                            "gutters": "MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05",
                            "root": "MuiListItem-root-06",
                            "secondaryAction": "MuiListItem-secondaryAction-015",
                            "selected": "MuiListItem-selected-016",
                          }
                        }
                        dense={false}
                        disableGutters={false}
                        disabled={false}
                        divider={false}
                        onClick={[Function]}
                        selected={false}
                      >
                        <WithStyles(ButtonBase)
                          className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                          component="div"
                          disabled={false}
                          focusVisibleClassName="MuiListItem-focusVisible-08"
                          onClick={[Function]}
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-018",
                                "focusVisible": "MuiButtonBase-focusVisible-019",
                                "root": "MuiButtonBase-root-017",
                              }
                            }
                            component="div"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="MuiListItem-focusVisible-08"
                            onClick={[Function]}
                            tabIndex="0"
                            type="button"
                          >
                            <div
                              className="MuiButtonBase-root-017 MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex="0"
                            >
                              <WithStyles(ListItemText)
                                key=".0"
                                primary="Year published"
                                primaryTypographyProps={
                                  Object {
                                    "variant": "body2",
                                  }
                                }
                              >
                                <ListItemText
                                  classes={
                                    Object {
                                      "dense": "MuiListItemText-dense-022",
                                      "inset": "MuiListItemText-inset-021",
                                      "primary": "MuiListItemText-primary-023",
                                      "root": "MuiListItemText-root-020",
                                      "secondary": "MuiListItemText-secondary-024",
                                      "textDense": "MuiListItemText-textDense-025",
                                    }
                                  }
                                  disableTypography={false}
                                  inset={false}
                                  primary="Year published"
                                  primaryTypographyProps={
                                    Object {
                                      "variant": "body2",
                                    }
                                  }
                                >
                                  <div
                                    className="MuiListItemText-root-020 MuiListItemText-dense-022"
                                  >
                                    <WithStyles(Typography)
                                      className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                      component="span"
                                      variant="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-039",
                                            "alignJustify": "MuiTypography-alignJustify-041",
                                            "alignLeft": "MuiTypography-alignLeft-038",
                                            "alignRight": "MuiTypography-alignRight-040",
                                            "body1": "MuiTypography-body1-035",
                                            "body2": "MuiTypography-body2-034",
                                            "button": "MuiTypography-button-037",
                                            "caption": "MuiTypography-caption-036",
                                            "colorError": "MuiTypography-colorError-050",
                                            "colorInherit": "MuiTypography-colorInherit-045",
                                            "colorPrimary": "MuiTypography-colorPrimary-046",
                                            "colorSecondary": "MuiTypography-colorSecondary-047",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary-048",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary-049",
                                            "display1": "MuiTypography-display1-030",
                                            "display2": "MuiTypography-display2-029",
                                            "display3": "MuiTypography-display3-028",
                                            "display4": "MuiTypography-display4-027",
                                            "gutterBottom": "MuiTypography-gutterBottom-043",
                                            "headline": "MuiTypography-headline-031",
                                            "noWrap": "MuiTypography-noWrap-042",
                                            "paragraph": "MuiTypography-paragraph-044",
                                            "root": "MuiTypography-root-026",
                                            "subheading": "MuiTypography-subheading-033",
                                            "title": "MuiTypography-title-032",
                                          }
                                        }
                                        color="default"
                                        component="span"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        variant="body2"
                                      >
                                        <span
                                          className="MuiTypography-root-026 MuiTypography-body2-034 MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        >
                                          Year published
                                        </span>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </div>
                                </ListItemText>
                              </WithStyles(ListItemText)>
                              <pure(ExpandMoreIcon)
                                key=".1"
                              >
                                <ExpandMoreIcon>
                                  <WithStyles(SvgIcon)>
                                    <SvgIcon
                                      classes={
                                        Object {
                                          "colorAction": "MuiSvgIcon-colorAction-054",
                                          "colorDisabled": "MuiSvgIcon-colorDisabled-056",
                                          "colorError": "MuiSvgIcon-colorError-055",
                                          "colorPrimary": "MuiSvgIcon-colorPrimary-052",
                                          "colorSecondary": "MuiSvgIcon-colorSecondary-053",
                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-057",
                                          "root": "MuiSvgIcon-root-051",
                                        }
                                      }
                                      color="inherit"
                                      component="svg"
                                      fontSize="default"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="MuiSvgIcon-root-051"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                        />
                                        <path
                                          d="M0 0h24v24H0z"
                                          fill="none"
                                        />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ExpandMoreIcon>
                              </pure(ExpandMoreIcon)>
                              <WithStyles(TouchRipple)
                                center={false}
                                innerRef={[Function]}
                              >
                                <TouchRipple
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child-062",
                                      "childLeaving": "MuiTouchRipple-childLeaving-063",
                                      "childPulsate": "MuiTouchRipple-childPulsate-064",
                                      "ripple": "MuiTouchRipple-ripple-059",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-061",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible-060",
                                      "root": "MuiTouchRipple-root-058",
                                    }
                                  }
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    className="MuiTouchRipple-root-058"
                                    component="span"
                                    enter={true}
                                    exit={true}
                                  >
                                    <span
                                      className="MuiTouchRipple-root-058"
                                    />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </div>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </ListItem>
                    </WithStyles(ListItem)>
                    <WithStyles(Collapse)
                      timeout="auto"
                      unmountOnExit={true}
                    >
                      <Collapse
                        classes={
                          Object {
                            "container": "MuiCollapse-container-065",
                            "entered": "MuiCollapse-entered-066",
                            "wrapper": "MuiCollapse-wrapper-067",
                            "wrapperInner": "MuiCollapse-wrapperInner-068",
                          }
                        }
                        collapsedHeight="0px"
                        component="div"
                        theme={
                          Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "hover": "rgba(0, 0, 0, 0.08)",
                                "hoverOpacity": 0.08,
                                "selected": "rgba(0, 0, 0, 0.14)",
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                              "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                              "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                              "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                              "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                              "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                              "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                              "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                              "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                              "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                              "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                              "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                              "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                              "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": Object {
                              "unit": 8,
                            },
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "lineHeight": "1.46429em",
                              },
                              "body2": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "lineHeight": "1.71429em",
                              },
                              "button": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "lineHeight": "1.375em",
                              },
                              "display1": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.20588em",
                              },
                              "display2": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.8125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.13333em",
                                "marginLeft": "-.02em",
                              },
                              "display3": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "-.02em",
                                "lineHeight": "1.30357em",
                                "marginLeft": "-.02em",
                              },
                              "display4": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "7rem",
                                "fontWeight": 300,
                                "letterSpacing": "-.04em",
                                "lineHeight": "1.14286em",
                                "marginLeft": "-.04em",
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "headline": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "lineHeight": "1.35417em",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subheading": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "lineHeight": "1.5em",
                              },
                              "title": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.3125rem",
                                "fontWeight": 500,
                                "lineHeight": "1.16667em",
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "tooltip": 1500,
                            },
                          }
                        }
                        timeout="auto"
                        unmountOnExit={true}
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={true}
                        />
                      </Collapse>
                    </WithStyles(Collapse)>
                  </FacetsFilterListItem>
                </WithStyles(FacetsFilterListItem)>
                <WithStyles(FacetsFilterListItem)
                  className="facetsCategory"
                  facetTitle="Journal name"
                  id="facet-category-Journal-name"
                  key="3"
                  nestedItems={
                    Array [
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={0}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="Metallomics (1)"
                      />,
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={1}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="Nature biotechnology (1)"
                      />,
                    ]
                  }
                  onToggle={[Function]}
                >
                  <FacetsFilterListItem
                    className="facetsCategory"
                    classes={
                      Object {
                        "listItemGutters": "FacetsFilterListItem-listItemGutters-05",
                      }
                    }
                    facetTitle="Journal name"
                    id="facet-category-Journal-name"
                    nestedItems={
                      Array [
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={0}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="Metallomics (1)"
                        />,
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={1}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="Nature biotechnology (1)"
                        />,
                      ]
                    }
                    onToggle={[Function]}
                  >
                    <WithStyles(ListItem)
                      button={true}
                      classes={
                        Object {
                          "gutters": "FacetsFilterListItem-listItemGutters-05",
                        }
                      }
                      key="facet_filter_undefined"
                      onClick={[Function]}
                    >
                      <ListItem
                        ContainerComponent="li"
                        button={true}
                        classes={
                          Object {
                            "button": "MuiListItem-button-014",
                            "container": "MuiListItem-container-07",
                            "default": "MuiListItem-default-09",
                            "dense": "MuiListItem-dense-010",
                            "disabled": "MuiListItem-disabled-011",
                            "divider": "MuiListItem-divider-012",
                            "focusVisible": "MuiListItem-focusVisible-08",
                            "gutters": "MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05",
                            "root": "MuiListItem-root-06",
                            "secondaryAction": "MuiListItem-secondaryAction-015",
                            "selected": "MuiListItem-selected-016",
                          }
                        }
                        dense={false}
                        disableGutters={false}
                        disabled={false}
                        divider={false}
                        onClick={[Function]}
                        selected={false}
                      >
                        <WithStyles(ButtonBase)
                          className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                          component="div"
                          disabled={false}
                          focusVisibleClassName="MuiListItem-focusVisible-08"
                          onClick={[Function]}
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-018",
                                "focusVisible": "MuiButtonBase-focusVisible-019",
                                "root": "MuiButtonBase-root-017",
                              }
                            }
                            component="div"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="MuiListItem-focusVisible-08"
                            onClick={[Function]}
                            tabIndex="0"
                            type="button"
                          >
                            <div
                              className="MuiButtonBase-root-017 MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex="0"
                            >
                              <WithStyles(ListItemText)
                                key=".0"
                                primary="Journal name"
                                primaryTypographyProps={
                                  Object {
                                    "variant": "body2",
                                  }
                                }
                              >
                                <ListItemText
                                  classes={
                                    Object {
                                      "dense": "MuiListItemText-dense-022",
                                      "inset": "MuiListItemText-inset-021",
                                      "primary": "MuiListItemText-primary-023",
                                      "root": "MuiListItemText-root-020",
                                      "secondary": "MuiListItemText-secondary-024",
                                      "textDense": "MuiListItemText-textDense-025",
                                    }
                                  }
                                  disableTypography={false}
                                  inset={false}
                                  primary="Journal name"
                                  primaryTypographyProps={
                                    Object {
                                      "variant": "body2",
                                    }
                                  }
                                >
                                  <div
                                    className="MuiListItemText-root-020 MuiListItemText-dense-022"
                                  >
                                    <WithStyles(Typography)
                                      className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                      component="span"
                                      variant="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-039",
                                            "alignJustify": "MuiTypography-alignJustify-041",
                                            "alignLeft": "MuiTypography-alignLeft-038",
                                            "alignRight": "MuiTypography-alignRight-040",
                                            "body1": "MuiTypography-body1-035",
                                            "body2": "MuiTypography-body2-034",
                                            "button": "MuiTypography-button-037",
                                            "caption": "MuiTypography-caption-036",
                                            "colorError": "MuiTypography-colorError-050",
                                            "colorInherit": "MuiTypography-colorInherit-045",
                                            "colorPrimary": "MuiTypography-colorPrimary-046",
                                            "colorSecondary": "MuiTypography-colorSecondary-047",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary-048",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary-049",
                                            "display1": "MuiTypography-display1-030",
                                            "display2": "MuiTypography-display2-029",
                                            "display3": "MuiTypography-display3-028",
                                            "display4": "MuiTypography-display4-027",
                                            "gutterBottom": "MuiTypography-gutterBottom-043",
                                            "headline": "MuiTypography-headline-031",
                                            "noWrap": "MuiTypography-noWrap-042",
                                            "paragraph": "MuiTypography-paragraph-044",
                                            "root": "MuiTypography-root-026",
                                            "subheading": "MuiTypography-subheading-033",
                                            "title": "MuiTypography-title-032",
                                          }
                                        }
                                        color="default"
                                        component="span"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        variant="body2"
                                      >
                                        <span
                                          className="MuiTypography-root-026 MuiTypography-body2-034 MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        >
                                          Journal name
                                        </span>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </div>
                                </ListItemText>
                              </WithStyles(ListItemText)>
                              <pure(ExpandMoreIcon)
                                key=".1"
                              >
                                <ExpandMoreIcon>
                                  <WithStyles(SvgIcon)>
                                    <SvgIcon
                                      classes={
                                        Object {
                                          "colorAction": "MuiSvgIcon-colorAction-054",
                                          "colorDisabled": "MuiSvgIcon-colorDisabled-056",
                                          "colorError": "MuiSvgIcon-colorError-055",
                                          "colorPrimary": "MuiSvgIcon-colorPrimary-052",
                                          "colorSecondary": "MuiSvgIcon-colorSecondary-053",
                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-057",
                                          "root": "MuiSvgIcon-root-051",
                                        }
                                      }
                                      color="inherit"
                                      component="svg"
                                      fontSize="default"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="MuiSvgIcon-root-051"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                        />
                                        <path
                                          d="M0 0h24v24H0z"
                                          fill="none"
                                        />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ExpandMoreIcon>
                              </pure(ExpandMoreIcon)>
                              <WithStyles(TouchRipple)
                                center={false}
                                innerRef={[Function]}
                              >
                                <TouchRipple
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child-062",
                                      "childLeaving": "MuiTouchRipple-childLeaving-063",
                                      "childPulsate": "MuiTouchRipple-childPulsate-064",
                                      "ripple": "MuiTouchRipple-ripple-059",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-061",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible-060",
                                      "root": "MuiTouchRipple-root-058",
                                    }
                                  }
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    className="MuiTouchRipple-root-058"
                                    component="span"
                                    enter={true}
                                    exit={true}
                                  >
                                    <span
                                      className="MuiTouchRipple-root-058"
                                    />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </div>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </ListItem>
                    </WithStyles(ListItem)>
                    <WithStyles(Collapse)
                      timeout="auto"
                      unmountOnExit={true}
                    >
                      <Collapse
                        classes={
                          Object {
                            "container": "MuiCollapse-container-065",
                            "entered": "MuiCollapse-entered-066",
                            "wrapper": "MuiCollapse-wrapper-067",
                            "wrapperInner": "MuiCollapse-wrapperInner-068",
                          }
                        }
                        collapsedHeight="0px"
                        component="div"
                        theme={
                          Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "hover": "rgba(0, 0, 0, 0.08)",
                                "hoverOpacity": 0.08,
                                "selected": "rgba(0, 0, 0, 0.14)",
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                              "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                              "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                              "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                              "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                              "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                              "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                              "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                              "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                              "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                              "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                              "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                              "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                              "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": Object {
                              "unit": 8,
                            },
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "lineHeight": "1.46429em",
                              },
                              "body2": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "lineHeight": "1.71429em",
                              },
                              "button": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "lineHeight": "1.375em",
                              },
                              "display1": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.20588em",
                              },
                              "display2": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.8125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.13333em",
                                "marginLeft": "-.02em",
                              },
                              "display3": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "-.02em",
                                "lineHeight": "1.30357em",
                                "marginLeft": "-.02em",
                              },
                              "display4": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "7rem",
                                "fontWeight": 300,
                                "letterSpacing": "-.04em",
                                "lineHeight": "1.14286em",
                                "marginLeft": "-.04em",
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "headline": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "lineHeight": "1.35417em",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subheading": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "lineHeight": "1.5em",
                              },
                              "title": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.3125rem",
                                "fontWeight": 500,
                                "lineHeight": "1.16667em",
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "tooltip": 1500,
                            },
                          }
                        }
                        timeout="auto"
                        unmountOnExit={true}
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={true}
                        />
                      </Collapse>
                    </WithStyles(Collapse)>
                  </FacetsFilterListItem>
                </WithStyles(FacetsFilterListItem)>
                <WithStyles(FacetsFilterListItem)
                  className="facetsCategory"
                  facetTitle="Collection"
                  id="facet-category-Collection"
                  key="4"
                  nestedItems={
                    Array [
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={0}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="Crossref Import (2)"
                      />,
                    ]
                  }
                  onToggle={[Function]}
                >
                  <FacetsFilterListItem
                    className="facetsCategory"
                    classes={
                      Object {
                        "listItemGutters": "FacetsFilterListItem-listItemGutters-05",
                      }
                    }
                    facetTitle="Collection"
                    id="facet-category-Collection"
                    nestedItems={
                      Array [
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={0}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="Crossref Import (2)"
                        />,
                      ]
                    }
                    onToggle={[Function]}
                  >
                    <WithStyles(ListItem)
                      button={true}
                      classes={
                        Object {
                          "gutters": "FacetsFilterListItem-listItemGutters-05",
                        }
                      }
                      key="facet_filter_undefined"
                      onClick={[Function]}
                    >
                      <ListItem
                        ContainerComponent="li"
                        button={true}
                        classes={
                          Object {
                            "button": "MuiListItem-button-014",
                            "container": "MuiListItem-container-07",
                            "default": "MuiListItem-default-09",
                            "dense": "MuiListItem-dense-010",
                            "disabled": "MuiListItem-disabled-011",
                            "divider": "MuiListItem-divider-012",
                            "focusVisible": "MuiListItem-focusVisible-08",
                            "gutters": "MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05",
                            "root": "MuiListItem-root-06",
                            "secondaryAction": "MuiListItem-secondaryAction-015",
                            "selected": "MuiListItem-selected-016",
                          }
                        }
                        dense={false}
                        disableGutters={false}
                        disabled={false}
                        divider={false}
                        onClick={[Function]}
                        selected={false}
                      >
                        <WithStyles(ButtonBase)
                          className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                          component="div"
                          disabled={false}
                          focusVisibleClassName="MuiListItem-focusVisible-08"
                          onClick={[Function]}
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-018",
                                "focusVisible": "MuiButtonBase-focusVisible-019",
                                "root": "MuiButtonBase-root-017",
                              }
                            }
                            component="div"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="MuiListItem-focusVisible-08"
                            onClick={[Function]}
                            tabIndex="0"
                            type="button"
                          >
                            <div
                              className="MuiButtonBase-root-017 MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex="0"
                            >
                              <WithStyles(ListItemText)
                                key=".0"
                                primary="Collection"
                                primaryTypographyProps={
                                  Object {
                                    "variant": "body2",
                                  }
                                }
                              >
                                <ListItemText
                                  classes={
                                    Object {
                                      "dense": "MuiListItemText-dense-022",
                                      "inset": "MuiListItemText-inset-021",
                                      "primary": "MuiListItemText-primary-023",
                                      "root": "MuiListItemText-root-020",
                                      "secondary": "MuiListItemText-secondary-024",
                                      "textDense": "MuiListItemText-textDense-025",
                                    }
                                  }
                                  disableTypography={false}
                                  inset={false}
                                  primary="Collection"
                                  primaryTypographyProps={
                                    Object {
                                      "variant": "body2",
                                    }
                                  }
                                >
                                  <div
                                    className="MuiListItemText-root-020 MuiListItemText-dense-022"
                                  >
                                    <WithStyles(Typography)
                                      className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                      component="span"
                                      variant="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-039",
                                            "alignJustify": "MuiTypography-alignJustify-041",
                                            "alignLeft": "MuiTypography-alignLeft-038",
                                            "alignRight": "MuiTypography-alignRight-040",
                                            "body1": "MuiTypography-body1-035",
                                            "body2": "MuiTypography-body2-034",
                                            "button": "MuiTypography-button-037",
                                            "caption": "MuiTypography-caption-036",
                                            "colorError": "MuiTypography-colorError-050",
                                            "colorInherit": "MuiTypography-colorInherit-045",
                                            "colorPrimary": "MuiTypography-colorPrimary-046",
                                            "colorSecondary": "MuiTypography-colorSecondary-047",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary-048",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary-049",
                                            "display1": "MuiTypography-display1-030",
                                            "display2": "MuiTypography-display2-029",
                                            "display3": "MuiTypography-display3-028",
                                            "display4": "MuiTypography-display4-027",
                                            "gutterBottom": "MuiTypography-gutterBottom-043",
                                            "headline": "MuiTypography-headline-031",
                                            "noWrap": "MuiTypography-noWrap-042",
                                            "paragraph": "MuiTypography-paragraph-044",
                                            "root": "MuiTypography-root-026",
                                            "subheading": "MuiTypography-subheading-033",
                                            "title": "MuiTypography-title-032",
                                          }
                                        }
                                        color="default"
                                        component="span"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        variant="body2"
                                      >
                                        <span
                                          className="MuiTypography-root-026 MuiTypography-body2-034 MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        >
                                          Collection
                                        </span>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </div>
                                </ListItemText>
                              </WithStyles(ListItemText)>
                              <pure(ExpandMoreIcon)
                                key=".1"
                              >
                                <ExpandMoreIcon>
                                  <WithStyles(SvgIcon)>
                                    <SvgIcon
                                      classes={
                                        Object {
                                          "colorAction": "MuiSvgIcon-colorAction-054",
                                          "colorDisabled": "MuiSvgIcon-colorDisabled-056",
                                          "colorError": "MuiSvgIcon-colorError-055",
                                          "colorPrimary": "MuiSvgIcon-colorPrimary-052",
                                          "colorSecondary": "MuiSvgIcon-colorSecondary-053",
                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-057",
                                          "root": "MuiSvgIcon-root-051",
                                        }
                                      }
                                      color="inherit"
                                      component="svg"
                                      fontSize="default"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="MuiSvgIcon-root-051"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                        />
                                        <path
                                          d="M0 0h24v24H0z"
                                          fill="none"
                                        />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ExpandMoreIcon>
                              </pure(ExpandMoreIcon)>
                              <WithStyles(TouchRipple)
                                center={false}
                                innerRef={[Function]}
                              >
                                <TouchRipple
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child-062",
                                      "childLeaving": "MuiTouchRipple-childLeaving-063",
                                      "childPulsate": "MuiTouchRipple-childPulsate-064",
                                      "ripple": "MuiTouchRipple-ripple-059",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-061",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible-060",
                                      "root": "MuiTouchRipple-root-058",
                                    }
                                  }
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    className="MuiTouchRipple-root-058"
                                    component="span"
                                    enter={true}
                                    exit={true}
                                  >
                                    <span
                                      className="MuiTouchRipple-root-058"
                                    />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </div>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </ListItem>
                    </WithStyles(ListItem)>
                    <WithStyles(Collapse)
                      timeout="auto"
                      unmountOnExit={true}
                    >
                      <Collapse
                        classes={
                          Object {
                            "container": "MuiCollapse-container-065",
                            "entered": "MuiCollapse-entered-066",
                            "wrapper": "MuiCollapse-wrapper-067",
                            "wrapperInner": "MuiCollapse-wrapperInner-068",
                          }
                        }
                        collapsedHeight="0px"
                        component="div"
                        theme={
                          Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "hover": "rgba(0, 0, 0, 0.08)",
                                "hoverOpacity": 0.08,
                                "selected": "rgba(0, 0, 0, 0.14)",
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                              "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                              "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                              "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                              "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                              "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                              "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                              "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                              "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                              "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                              "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                              "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                              "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                              "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": Object {
                              "unit": 8,
                            },
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "lineHeight": "1.46429em",
                              },
                              "body2": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "lineHeight": "1.71429em",
                              },
                              "button": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "lineHeight": "1.375em",
                              },
                              "display1": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.20588em",
                              },
                              "display2": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.8125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.13333em",
                                "marginLeft": "-.02em",
                              },
                              "display3": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "-.02em",
                                "lineHeight": "1.30357em",
                                "marginLeft": "-.02em",
                              },
                              "display4": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "7rem",
                                "fontWeight": 300,
                                "letterSpacing": "-.04em",
                                "lineHeight": "1.14286em",
                                "marginLeft": "-.04em",
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "headline": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "lineHeight": "1.35417em",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subheading": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "lineHeight": "1.5em",
                              },
                              "title": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.3125rem",
                                "fontWeight": 500,
                                "lineHeight": "1.16667em",
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "tooltip": 1500,
                            },
                          }
                        }
                        timeout="auto"
                        unmountOnExit={true}
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={true}
                        />
                      </Collapse>
                    </WithStyles(Collapse)>
                  </FacetsFilterListItem>
                </WithStyles(FacetsFilterListItem)>
                <WithStyles(FacetsFilterListItem)
                  className="facetsCategory"
                  facetTitle="Author"
                  id="facet-category-Author"
                  key="5"
                  nestedItems={
                    Array [
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={0}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="Schenk, Gerhard (Gary) (1)"
                      />,
                    ]
                  }
                  onToggle={[Function]}
                >
                  <FacetsFilterListItem
                    className="facetsCategory"
                    classes={
                      Object {
                        "listItemGutters": "FacetsFilterListItem-listItemGutters-05",
                      }
                    }
                    facetTitle="Author"
                    id="facet-category-Author"
                    nestedItems={
                      Array [
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={0}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="Schenk, Gerhard (Gary) (1)"
                        />,
                      ]
                    }
                    onToggle={[Function]}
                  >
                    <WithStyles(ListItem)
                      button={true}
                      classes={
                        Object {
                          "gutters": "FacetsFilterListItem-listItemGutters-05",
                        }
                      }
                      key="facet_filter_undefined"
                      onClick={[Function]}
                    >
                      <ListItem
                        ContainerComponent="li"
                        button={true}
                        classes={
                          Object {
                            "button": "MuiListItem-button-014",
                            "container": "MuiListItem-container-07",
                            "default": "MuiListItem-default-09",
                            "dense": "MuiListItem-dense-010",
                            "disabled": "MuiListItem-disabled-011",
                            "divider": "MuiListItem-divider-012",
                            "focusVisible": "MuiListItem-focusVisible-08",
                            "gutters": "MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05",
                            "root": "MuiListItem-root-06",
                            "secondaryAction": "MuiListItem-secondaryAction-015",
                            "selected": "MuiListItem-selected-016",
                          }
                        }
                        dense={false}
                        disableGutters={false}
                        disabled={false}
                        divider={false}
                        onClick={[Function]}
                        selected={false}
                      >
                        <WithStyles(ButtonBase)
                          className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                          component="div"
                          disabled={false}
                          focusVisibleClassName="MuiListItem-focusVisible-08"
                          onClick={[Function]}
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-018",
                                "focusVisible": "MuiButtonBase-focusVisible-019",
                                "root": "MuiButtonBase-root-017",
                              }
                            }
                            component="div"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="MuiListItem-focusVisible-08"
                            onClick={[Function]}
                            tabIndex="0"
                            type="button"
                          >
                            <div
                              className="MuiButtonBase-root-017 MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex="0"
                            >
                              <WithStyles(ListItemText)
                                key=".0"
                                primary="Author"
                                primaryTypographyProps={
                                  Object {
                                    "variant": "body2",
                                  }
                                }
                              >
                                <ListItemText
                                  classes={
                                    Object {
                                      "dense": "MuiListItemText-dense-022",
                                      "inset": "MuiListItemText-inset-021",
                                      "primary": "MuiListItemText-primary-023",
                                      "root": "MuiListItemText-root-020",
                                      "secondary": "MuiListItemText-secondary-024",
                                      "textDense": "MuiListItemText-textDense-025",
                                    }
                                  }
                                  disableTypography={false}
                                  inset={false}
                                  primary="Author"
                                  primaryTypographyProps={
                                    Object {
                                      "variant": "body2",
                                    }
                                  }
                                >
                                  <div
                                    className="MuiListItemText-root-020 MuiListItemText-dense-022"
                                  >
                                    <WithStyles(Typography)
                                      className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                      component="span"
                                      variant="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-039",
                                            "alignJustify": "MuiTypography-alignJustify-041",
                                            "alignLeft": "MuiTypography-alignLeft-038",
                                            "alignRight": "MuiTypography-alignRight-040",
                                            "body1": "MuiTypography-body1-035",
                                            "body2": "MuiTypography-body2-034",
                                            "button": "MuiTypography-button-037",
                                            "caption": "MuiTypography-caption-036",
                                            "colorError": "MuiTypography-colorError-050",
                                            "colorInherit": "MuiTypography-colorInherit-045",
                                            "colorPrimary": "MuiTypography-colorPrimary-046",
                                            "colorSecondary": "MuiTypography-colorSecondary-047",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary-048",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary-049",
                                            "display1": "MuiTypography-display1-030",
                                            "display2": "MuiTypography-display2-029",
                                            "display3": "MuiTypography-display3-028",
                                            "display4": "MuiTypography-display4-027",
                                            "gutterBottom": "MuiTypography-gutterBottom-043",
                                            "headline": "MuiTypography-headline-031",
                                            "noWrap": "MuiTypography-noWrap-042",
                                            "paragraph": "MuiTypography-paragraph-044",
                                            "root": "MuiTypography-root-026",
                                            "subheading": "MuiTypography-subheading-033",
                                            "title": "MuiTypography-title-032",
                                          }
                                        }
                                        color="default"
                                        component="span"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        variant="body2"
                                      >
                                        <span
                                          className="MuiTypography-root-026 MuiTypography-body2-034 MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        >
                                          Author
                                        </span>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </div>
                                </ListItemText>
                              </WithStyles(ListItemText)>
                              <pure(ExpandMoreIcon)
                                key=".1"
                              >
                                <ExpandMoreIcon>
                                  <WithStyles(SvgIcon)>
                                    <SvgIcon
                                      classes={
                                        Object {
                                          "colorAction": "MuiSvgIcon-colorAction-054",
                                          "colorDisabled": "MuiSvgIcon-colorDisabled-056",
                                          "colorError": "MuiSvgIcon-colorError-055",
                                          "colorPrimary": "MuiSvgIcon-colorPrimary-052",
                                          "colorSecondary": "MuiSvgIcon-colorSecondary-053",
                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-057",
                                          "root": "MuiSvgIcon-root-051",
                                        }
                                      }
                                      color="inherit"
                                      component="svg"
                                      fontSize="default"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="MuiSvgIcon-root-051"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                        />
                                        <path
                                          d="M0 0h24v24H0z"
                                          fill="none"
                                        />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ExpandMoreIcon>
                              </pure(ExpandMoreIcon)>
                              <WithStyles(TouchRipple)
                                center={false}
                                innerRef={[Function]}
                              >
                                <TouchRipple
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child-062",
                                      "childLeaving": "MuiTouchRipple-childLeaving-063",
                                      "childPulsate": "MuiTouchRipple-childPulsate-064",
                                      "ripple": "MuiTouchRipple-ripple-059",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-061",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible-060",
                                      "root": "MuiTouchRipple-root-058",
                                    }
                                  }
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    className="MuiTouchRipple-root-058"
                                    component="span"
                                    enter={true}
                                    exit={true}
                                  >
                                    <span
                                      className="MuiTouchRipple-root-058"
                                    />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </div>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </ListItem>
                    </WithStyles(ListItem)>
                    <WithStyles(Collapse)
                      timeout="auto"
                      unmountOnExit={true}
                    >
                      <Collapse
                        classes={
                          Object {
                            "container": "MuiCollapse-container-065",
                            "entered": "MuiCollapse-entered-066",
                            "wrapper": "MuiCollapse-wrapper-067",
                            "wrapperInner": "MuiCollapse-wrapperInner-068",
                          }
                        }
                        collapsedHeight="0px"
                        component="div"
                        theme={
                          Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "hover": "rgba(0, 0, 0, 0.08)",
                                "hoverOpacity": 0.08,
                                "selected": "rgba(0, 0, 0, 0.14)",
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                              "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                              "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                              "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                              "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                              "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                              "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                              "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                              "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                              "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                              "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                              "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                              "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                              "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": Object {
                              "unit": 8,
                            },
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "lineHeight": "1.46429em",
                              },
                              "body2": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "lineHeight": "1.71429em",
                              },
                              "button": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "lineHeight": "1.375em",
                              },
                              "display1": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.20588em",
                              },
                              "display2": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.8125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.13333em",
                                "marginLeft": "-.02em",
                              },
                              "display3": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "-.02em",
                                "lineHeight": "1.30357em",
                                "marginLeft": "-.02em",
                              },
                              "display4": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "7rem",
                                "fontWeight": 300,
                                "letterSpacing": "-.04em",
                                "lineHeight": "1.14286em",
                                "marginLeft": "-.04em",
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "headline": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "lineHeight": "1.35417em",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subheading": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "lineHeight": "1.5em",
                              },
                              "title": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.3125rem",
                                "fontWeight": 500,
                                "lineHeight": "1.16667em",
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "tooltip": 1500,
                            },
                          }
                        }
                        timeout="auto"
                        unmountOnExit={true}
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={true}
                        />
                      </Collapse>
                    </WithStyles(Collapse)>
                  </FacetsFilterListItem>
                </WithStyles(FacetsFilterListItem)>
                <DateRange
                  defaultValue={
                    Object {
                      "from": 2007,
                      "to": 2022,
                    }
                  }
                  locale={
                    Object {
                      "displayTitle": "Published year range",
                      "fromFieldLabel": "From",
                      "rangeSubmitButtonLabel": "Go",
                      "toFieldLabel": "To",
                    }
                  }
                  onChange={[Function]}
                  onToggle={[Function]}
                  value={Object {}}
                >
                  <WithStyles(FacetsFilterListItem)
                    facetTitle="Published year range"
                    key="date-range"
                    nestedItems={
                      <div
                        style={
                          Object {
                            "padding": 8,
                          }
                        }
                      >
                        <WithStyles(Grid)
                          alignItems="flex-end"
                          container={true}
                          spacing={16}
                          wrap="nowrap"
                        >
                          <WithStyles(Grid)
                            item={true}
                            xs={4}
                          >
                            <TextField
                              disabled={undefined}
                              fullWidth={true}
                              label="From"
                              onChange={[Function]}
                              required={false}
                              select={false}
                              type="number"
                              value={2007}
                            />
                          </WithStyles(Grid)>
                          <WithStyles(Grid)
                            item={true}
                            xs={4}
                          >
                            <TextField
                              disabled={undefined}
                              fullWidth={true}
                              label="To"
                              onChange={[Function]}
                              required={false}
                              select={false}
                              type="number"
                              value={2022}
                            />
                          </WithStyles(Grid)>
                          <WithStyles(Grid)
                            item={true}
                          >
                            <WithStyles(Button)
                              disabled={false}
                              fullWidth={true}
                              onClick={[Function]}
                              variant="flat"
                            >
                              Go
                            </WithStyles(Button)>
                          </WithStyles(Grid)>
                        </WithStyles(Grid)>
                      </div>
                    }
                    onToggle={[Function]}
                  >
                    <FacetsFilterListItem
                      classes={
                        Object {
                          "listItemGutters": "FacetsFilterListItem-listItemGutters-05",
                        }
                      }
                      facetTitle="Published year range"
                      nestedItems={
                        <div
                          style={
                            Object {
                              "padding": 8,
                            }
                          }
                        >
                          <WithStyles(Grid)
                            alignItems="flex-end"
                            container={true}
                            spacing={16}
                            wrap="nowrap"
                          >
                            <WithStyles(Grid)
                              item={true}
                              xs={4}
                            >
                              <TextField
                                disabled={undefined}
                                fullWidth={true}
                                label="From"
                                onChange={[Function]}
                                required={false}
                                select={false}
                                type="number"
                                value={2007}
                              />
                            </WithStyles(Grid)>
                            <WithStyles(Grid)
                              item={true}
                              xs={4}
                            >
                              <TextField
                                disabled={undefined}
                                fullWidth={true}
                                label="To"
                                onChange={[Function]}
                                required={false}
                                select={false}
                                type="number"
                                value={2022}
                              />
                            </WithStyles(Grid)>
                            <WithStyles(Grid)
                              item={true}
                            >
                              <WithStyles(Button)
                                disabled={false}
                                fullWidth={true}
                                onClick={[Function]}
                                variant="flat"
                              >
                                Go
                              </WithStyles(Button)>
                            </WithStyles(Grid)>
                          </WithStyles(Grid)>
                        </div>
                      }
                      onToggle={[Function]}
                    >
                      <WithStyles(ListItem)
                        button={true}
                        classes={
                          Object {
                            "gutters": "FacetsFilterListItem-listItemGutters-05",
                          }
                        }
                        key="facet_filter_undefined"
                        onClick={[Function]}
                      >
                        <ListItem
                          ContainerComponent="li"
                          button={true}
                          classes={
                            Object {
                              "button": "MuiListItem-button-014",
                              "container": "MuiListItem-container-07",
                              "default": "MuiListItem-default-09",
                              "dense": "MuiListItem-dense-010",
                              "disabled": "MuiListItem-disabled-011",
                              "divider": "MuiListItem-divider-012",
                              "focusVisible": "MuiListItem-focusVisible-08",
                              "gutters": "MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05",
                              "root": "MuiListItem-root-06",
                              "secondaryAction": "MuiListItem-secondaryAction-015",
                              "selected": "MuiListItem-selected-016",
                            }
                          }
                          dense={false}
                          disableGutters={false}
                          disabled={false}
                          divider={false}
                          onClick={[Function]}
                          selected={false}
                        >
                          <WithStyles(ButtonBase)
                            className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                            component="div"
                            disabled={false}
                            focusVisibleClassName="MuiListItem-focusVisible-08"
                            onClick={[Function]}
                          >
                            <ButtonBase
                              centerRipple={false}
                              className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                              classes={
                                Object {
                                  "disabled": "MuiButtonBase-disabled-018",
                                  "focusVisible": "MuiButtonBase-focusVisible-019",
                                  "root": "MuiButtonBase-root-017",
                                }
                              }
                              component="div"
                              disableRipple={false}
                              disableTouchRipple={false}
                              disabled={false}
                              focusRipple={false}
                              focusVisibleClassName="MuiListItem-focusVisible-08"
                              onClick={[Function]}
                              tabIndex="0"
                              type="button"
                            >
                              <div
                                className="MuiButtonBase-root-017 MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                role="button"
                                tabIndex="0"
                              >
                                <WithStyles(ListItemText)
                                  key=".0"
                                  primary="Published year range"
                                  primaryTypographyProps={
                                    Object {
                                      "variant": "body2",
                                    }
                                  }
                                >
                                  <ListItemText
                                    classes={
                                      Object {
                                        "dense": "MuiListItemText-dense-022",
                                        "inset": "MuiListItemText-inset-021",
                                        "primary": "MuiListItemText-primary-023",
                                        "root": "MuiListItemText-root-020",
                                        "secondary": "MuiListItemText-secondary-024",
                                        "textDense": "MuiListItemText-textDense-025",
                                      }
                                    }
                                    disableTypography={false}
                                    inset={false}
                                    primary="Published year range"
                                    primaryTypographyProps={
                                      Object {
                                        "variant": "body2",
                                      }
                                    }
                                  >
                                    <div
                                      className="MuiListItemText-root-020 MuiListItemText-dense-022"
                                    >
                                      <WithStyles(Typography)
                                        className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        component="span"
                                        variant="body2"
                                      >
                                        <Typography
                                          align="inherit"
                                          className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter-039",
                                              "alignJustify": "MuiTypography-alignJustify-041",
                                              "alignLeft": "MuiTypography-alignLeft-038",
                                              "alignRight": "MuiTypography-alignRight-040",
                                              "body1": "MuiTypography-body1-035",
                                              "body2": "MuiTypography-body2-034",
                                              "button": "MuiTypography-button-037",
                                              "caption": "MuiTypography-caption-036",
                                              "colorError": "MuiTypography-colorError-050",
                                              "colorInherit": "MuiTypography-colorInherit-045",
                                              "colorPrimary": "MuiTypography-colorPrimary-046",
                                              "colorSecondary": "MuiTypography-colorSecondary-047",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary-048",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary-049",
                                              "display1": "MuiTypography-display1-030",
                                              "display2": "MuiTypography-display2-029",
                                              "display3": "MuiTypography-display3-028",
                                              "display4": "MuiTypography-display4-027",
                                              "gutterBottom": "MuiTypography-gutterBottom-043",
                                              "headline": "MuiTypography-headline-031",
                                              "noWrap": "MuiTypography-noWrap-042",
                                              "paragraph": "MuiTypography-paragraph-044",
                                              "root": "MuiTypography-root-026",
                                              "subheading": "MuiTypography-subheading-033",
                                              "title": "MuiTypography-title-032",
                                            }
                                          }
                                          color="default"
                                          component="span"
                                          gutterBottom={false}
                                          headlineMapping={
                                            Object {
                                              "body1": "p",
                                              "body2": "aside",
                                              "display1": "h1",
                                              "display2": "h1",
                                              "display3": "h1",
                                              "display4": "h1",
                                              "headline": "h1",
                                              "subheading": "h3",
                                              "title": "h2",
                                            }
                                          }
                                          noWrap={false}
                                          paragraph={false}
                                          variant="body2"
                                        >
                                          <span
                                            className="MuiTypography-root-026 MuiTypography-body2-034 MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                          >
                                            Published year range
                                          </span>
                                        </Typography>
                                      </WithStyles(Typography)>
                                    </div>
                                  </ListItemText>
                                </WithStyles(ListItemText)>
                                <pure(ExpandMoreIcon)
                                  key=".1"
                                >
                                  <ExpandMoreIcon>
                                    <WithStyles(SvgIcon)>
                                      <SvgIcon
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction-054",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled-056",
                                            "colorError": "MuiSvgIcon-colorError-055",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary-052",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary-053",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-057",
                                            "root": "MuiSvgIcon-root-051",
                                          }
                                        }
                                        color="inherit"
                                        component="svg"
                                        fontSize="default"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root-051"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                          />
                                          <path
                                            d="M0 0h24v24H0z"
                                            fill="none"
                                          />
                                        </svg>
                                      </SvgIcon>
                                    </WithStyles(SvgIcon)>
                                  </ExpandMoreIcon>
                                </pure(ExpandMoreIcon)>
                                <WithStyles(TouchRipple)
                                  center={false}
                                  innerRef={[Function]}
                                >
                                  <TouchRipple
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child-062",
                                        "childLeaving": "MuiTouchRipple-childLeaving-063",
                                        "childPulsate": "MuiTouchRipple-childPulsate-064",
                                        "ripple": "MuiTouchRipple-ripple-059",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate-061",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible-060",
                                        "root": "MuiTouchRipple-root-058",
                                      }
                                    }
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      className="MuiTouchRipple-root-058"
                                      component="span"
                                      enter={true}
                                      exit={true}
                                    >
                                      <span
                                        className="MuiTouchRipple-root-058"
                                      />
                                    </TransitionGroup>
                                  </TouchRipple>
                                </WithStyles(TouchRipple)>
                              </div>
                            </ButtonBase>
                          </WithStyles(ButtonBase)>
                        </ListItem>
                      </WithStyles(ListItem)>
                      <WithStyles(Collapse)
                        timeout="auto"
                        unmountOnExit={true}
                      >
                        <Collapse
                          classes={
                            Object {
                              "container": "MuiCollapse-container-065",
                              "entered": "MuiCollapse-entered-066",
                              "wrapper": "MuiCollapse-wrapper-067",
                              "wrapperInner": "MuiCollapse-wrapperInner-068",
                            }
                          }
                          collapsedHeight="0px"
                          component="div"
                          theme={
                            Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "only": [Function],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                                "width": [Function],
                              },
                              "direction": "ltr",
                              "mixins": Object {
                                "gutters": [Function],
                                "toolbar": Object {
                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                    "minHeight": 48,
                                  },
                                  "@media (min-width:600px)": Object {
                                    "minHeight": 64,
                                  },
                                  "minHeight": 56,
                                },
                              },
                              "overrides": Object {},
                              "palette": Object {
                                "action": Object {
                                  "active": "rgba(0, 0, 0, 0.54)",
                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                  "hover": "rgba(0, 0, 0, 0.08)",
                                  "hoverOpacity": 0.08,
                                  "selected": "rgba(0, 0, 0, 0.14)",
                                },
                                "augmentColor": [Function],
                                "background": Object {
                                  "default": "#fafafa",
                                  "paper": "#fff",
                                },
                                "common": Object {
                                  "black": "#000",
                                  "white": "#fff",
                                },
                                "contrastThreshold": 3,
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "error": Object {
                                  "contrastText": "#fff",
                                  "dark": "#d32f2f",
                                  "light": "#e57373",
                                  "main": "#f44336",
                                },
                                "getContrastText": [Function],
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "contrastText": "#fff",
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "contrastText": "#fff",
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "hint": "rgba(0, 0, 0, 0.38)",
                                  "primary": "rgba(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                                "tonalOffset": 0.2,
                                "type": "light",
                              },
                              "props": Object {},
                              "shadows": Array [
                                "none",
                                "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                                "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                                "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                                "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                                "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                                "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                                "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                                "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                                "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                                "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                                "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                                "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                                "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                                "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                              ],
                              "shape": Object {
                                "borderRadius": 4,
                              },
                              "spacing": Object {
                                "unit": 8,
                              },
                              "transitions": Object {
                                "create": [Function],
                                "duration": Object {
                                  "complex": 375,
                                  "enteringScreen": 225,
                                  "leavingScreen": 195,
                                  "short": 250,
                                  "shorter": 200,
                                  "shortest": 150,
                                  "standard": 300,
                                },
                                "easing": Object {
                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                },
                                "getAutoHeightDuration": [Function],
                              },
                              "typography": Object {
                                "body1": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.46429em",
                                },
                                "body2": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.71429em",
                                },
                                "button": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "textTransform": "uppercase",
                                },
                                "caption": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.375em",
                                },
                                "display1": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.20588em",
                                },
                                "display2": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.8125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.13333em",
                                  "marginLeft": "-.02em",
                                },
                                "display3": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "-.02em",
                                  "lineHeight": "1.30357em",
                                  "marginLeft": "-.02em",
                                },
                                "display4": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "7rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-.04em",
                                  "lineHeight": "1.14286em",
                                  "marginLeft": "-.04em",
                                },
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": 14,
                                "fontWeightLight": 300,
                                "fontWeightMedium": 500,
                                "fontWeightRegular": 400,
                                "headline": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.35417em",
                                },
                                "pxToRem": [Function],
                                "round": [Function],
                                "subheading": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.5em",
                                },
                                "title": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.3125rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.16667em",
                                },
                              },
                              "zIndex": Object {
                                "appBar": 1100,
                                "drawer": 1200,
                                "mobileStepper": 1000,
                                "modal": 1300,
                                "snackbar": 1400,
                                "tooltip": 1500,
                              },
                            }
                          }
                          timeout="auto"
                          unmountOnExit={true}
                        >
                          <Transition
                            addEndListener={[Function]}
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={null}
                            unmountOnExit={true}
                          />
                        </Collapse>
                      </WithStyles(Collapse)>
                    </FacetsFilterListItem>
                  </WithStyles(FacetsFilterListItem)>
                </DateRange>
              </nav>
            </List>
          </WithStyles(List)>
          <div
            className="columns"
          >
            <div
              className="column is-hidden-mobile"
            />
            <div
              className="column is-narrow-tablet"
            >
              <RaisedButton
                disabled={false}
                fullWidth={true}
                label="Reset"
                labelPosition="after"
                onClick={[Function]}
                primary={false}
                secondary={false}
              >
                <Paper
                  circle={false}
                  rounded={true}
                  style={
                    Object {
                      "display": "inline-block",
                      "minWidth": "100%",
                      "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    }
                  }
                  transitionEnabled={true}
                  zDepth={1}
                >
                  <div
                    style={
                      Object {
                        "WebkitTapHighlightColor": "rgba(0,0,0,0)",
                        "backgroundColor": "#ffffff",
                        "borderRadius": 2,
                        "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
         0 1px 4px rgba(0, 0, 0, 0.12)",
                        "boxSizing": "border-box",
                        "color": "rgba(0, 0, 0, 0.87)",
                        "display": "inline-block",
                        "fontFamily": "Roboto, sans-serif",
                        "minWidth": "100%",
                        "muiPrepared": true,
                        "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                      }
                    }
                  >
                    <EnhancedButton
                      containerElement="button"
                      disabled={false}
                      focusRippleColor="rgba(0, 0, 0, 0.87)"
                      focusRippleOpacity={0.1}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onKeyboardFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderRadius": 2,
                          "height": 36,
                          "lineHeight": "36px",
                          "padding": 0,
                          "textAlign": "center",
                          "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                          "width": "100%",
                        }
                      }
                      tabIndex={0}
                      touchRippleColor="rgba(0, 0, 0, 0.87)"
                      touchRippleOpacity={0.1}
                      type="button"
                    >
                      <button
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchStart={[Function]}
                        style={
                          Object {
                            "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                            "backgroundColor": "#ffffff",
                            "border": 10,
                            "borderRadius": 2,
                            "boxSizing": "border-box",
                            "cursor": "pointer",
                            "display": "inline-block",
                            "fontFamily": "Roboto, sans-serif",
                            "fontSize": "inherit",
                            "fontWeight": "inherit",
                            "height": 36,
                            "lineHeight": "36px",
                            "margin": 0,
                            "muiPrepared": true,
                            "outline": "none",
                            "padding": 0,
                            "position": "relative",
                            "textAlign": "center",
                            "textDecoration": "none",
                            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                            "verticalAlign": null,
                            "width": "100%",
                          }
                        }
                        tabIndex={0}
                        type="button"
                      >
                        <TouchRipple
                          abortOnScroll={true}
                          color="rgba(0, 0, 0, 0.87)"
                          key="touchRipple"
                          opacity={0.1}
                        >
                          <div
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchStart={[Function]}
                          >
                            <div
                              style={
                                Object {
                                  "backgroundColor": false,
                                  "borderRadius": 2,
                                  "height": 36,
                                  "muiPrepared": true,
                                  "top": 0,
                                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                }
                              }
                            >
                              <span
                                key="labelElement"
                                style={
                                  Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontSize": 14,
                                    "fontWeight": 500,
                                    "letterSpacing": 0,
                                    "margin": 0,
                                    "muiPrepared": true,
                                    "opacity": 1,
                                    "paddingLeft": 16,
                                    "paddingRight": 16,
                                    "position": "relative",
                                    "textTransform": "uppercase",
                                    "userSelect": "none",
                                  }
                                }
                              >
                                Reset
                              </span>
                            </div>
                          </div>
                        </TouchRipple>
                      </button>
                    </EnhancedButton>
                  </div>
                </Paper>
              </RaisedButton>
            </div>
          </div>
        </div>
      </FacetsFilter>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`FacetsFilter  components for mock data with active facets set 2`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction],
      "subscribe": [MockFunction],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <FacetsFilter
        activeFacets={
          Object {
            "filters": Object {
              "Display type": 179,
            },
            "ranges": Object {},
          }
        }
        excludeFacetsList={Array []}
        facetsData={
          Object {
            "Author": Object {
              "buckets": Array [
                Object {
                  "doc_count": 1,
                  "key": 683,
                },
              ],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Author (lookup)": Object {
              "buckets": Array [
                Object {
                  "doc_count": 1,
                  "key": "Schenk, Gerhard (Gary)",
                },
              ],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Collection": Object {
              "buckets": Array [
                Object {
                  "doc_count": 2,
                  "key": "UQ:639325",
                },
              ],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Collection (lookup)": Object {
              "buckets": Array [
                Object {
                  "doc_count": 2,
                  "key": "Crossref Import",
                },
              ],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Display type": Object {
              "buckets": Array [
                Object {
                  "doc_count": 2,
                  "key": 179,
                },
              ],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Display type (lookup)": Object {
              "buckets": Array [
                Object {
                  "doc_count": 2,
                  "key": "Journal Article",
                },
              ],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Genre": Object {
              "buckets": Array [],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Journal name": Object {
              "buckets": Array [
                Object {
                  "doc_count": 1,
                  "key": "Metallomics",
                },
                Object {
                  "doc_count": 1,
                  "key": "Nature biotechnology",
                },
              ],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Keywords": Object {
              "buckets": Array [
                Object {
                  "doc_count": 1,
                  "key": "Applied Microbiology and Biotechnology",
                },
                Object {
                  "doc_count": 1,
                  "key": "Biochemistry",
                },
                Object {
                  "doc_count": 1,
                  "key": "Bioengineering",
                },
                Object {
                  "doc_count": 1,
                  "key": "Biomaterials",
                },
                Object {
                  "doc_count": 1,
                  "key": "Biomedical Engineering",
                },
              ],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 5,
            },
            "Scopus document type": Object {
              "buckets": Array [],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Scopus document type (lookup)": Object {
              "buckets": Array [],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Subject": Object {
              "buckets": Array [],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Subject (lookup)": Object {
              "buckets": Array [],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Subtype": Object {
              "buckets": Array [],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
            "Year published": Object {
              "buckets": Array [
                Object {
                  "doc_count": 2,
                  "key": "2017",
                },
              ],
              "doc_count_error_upper_bound": 0,
              "sum_other_doc_count": 0,
            },
          }
        }
        lookupFacetsList={Object {}}
        onFacetsChanged={[MockFunction]}
        renameFacetsList={Object {}}
        showOpenAccessFilter={false}
      >
        <div
          className="facetsFilter"
        >
          <WithStyles(List)
            component="nav"
            dense={true}
          >
            <List
              classes={
                Object {
                  "dense": "MuiList-dense-03",
                  "padding": "MuiList-padding-02",
                  "root": "MuiList-root-01",
                  "subheader": "MuiList-subheader-04",
                }
              }
              component="nav"
              dense={true}
              disablePadding={false}
            >
              <nav
                className="MuiList-root-01 MuiList-dense-03 MuiList-padding-02"
              >
                <WithStyles(FacetsFilterListItem)
                  className="facetsCategory"
                  facetTitle="Display type"
                  id="facet-category-Display-type"
                  key="0"
                  nestedItems={
                    Array [
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter active"
                        disabled={undefined}
                        index={0}
                        isActive={true}
                        onFacetClick={[Function]}
                        primaryText="Journal Article (2)"
                      />,
                    ]
                  }
                  onToggle={[Function]}
                  open={true}
                >
                  <FacetsFilterListItem
                    className="facetsCategory"
                    classes={
                      Object {
                        "listItemGutters": "FacetsFilterListItem-listItemGutters-05",
                      }
                    }
                    facetTitle="Display type"
                    id="facet-category-Display-type"
                    nestedItems={
                      Array [
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter active"
                          disabled={undefined}
                          index={0}
                          isActive={true}
                          onFacetClick={[Function]}
                          primaryText="Journal Article (2)"
                        />,
                      ]
                    }
                    onToggle={[Function]}
                    open={true}
                  >
                    <WithStyles(ListItem)
                      button={true}
                      classes={
                        Object {
                          "gutters": "FacetsFilterListItem-listItemGutters-05",
                        }
                      }
                      key="facet_filter_undefined"
                      onClick={[Function]}
                    >
                      <ListItem
                        ContainerComponent="li"
                        button={true}
                        classes={
                          Object {
                            "button": "MuiListItem-button-014",
                            "container": "MuiListItem-container-07",
                            "default": "MuiListItem-default-09",
                            "dense": "MuiListItem-dense-010",
                            "disabled": "MuiListItem-disabled-011",
                            "divider": "MuiListItem-divider-012",
                            "focusVisible": "MuiListItem-focusVisible-08",
                            "gutters": "MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05",
                            "root": "MuiListItem-root-06",
                            "secondaryAction": "MuiListItem-secondaryAction-015",
                            "selected": "MuiListItem-selected-016",
                          }
                        }
                        dense={false}
                        disableGutters={false}
                        disabled={false}
                        divider={false}
                        onClick={[Function]}
                        selected={false}
                      >
                        <WithStyles(ButtonBase)
                          className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                          component="div"
                          disabled={false}
                          focusVisibleClassName="MuiListItem-focusVisible-08"
                          onClick={[Function]}
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-018",
                                "focusVisible": "MuiButtonBase-focusVisible-019",
                                "root": "MuiButtonBase-root-017",
                              }
                            }
                            component="div"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="MuiListItem-focusVisible-08"
                            onClick={[Function]}
                            tabIndex="0"
                            type="button"
                          >
                            <div
                              className="MuiButtonBase-root-017 MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex="0"
                            >
                              <WithStyles(ListItemText)
                                key=".0"
                                primary="Display type"
                                primaryTypographyProps={
                                  Object {
                                    "variant": "body2",
                                  }
                                }
                              >
                                <ListItemText
                                  classes={
                                    Object {
                                      "dense": "MuiListItemText-dense-022",
                                      "inset": "MuiListItemText-inset-021",
                                      "primary": "MuiListItemText-primary-023",
                                      "root": "MuiListItemText-root-020",
                                      "secondary": "MuiListItemText-secondary-024",
                                      "textDense": "MuiListItemText-textDense-025",
                                    }
                                  }
                                  disableTypography={false}
                                  inset={false}
                                  primary="Display type"
                                  primaryTypographyProps={
                                    Object {
                                      "variant": "body2",
                                    }
                                  }
                                >
                                  <div
                                    className="MuiListItemText-root-020 MuiListItemText-dense-022"
                                  >
                                    <WithStyles(Typography)
                                      className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                      component="span"
                                      variant="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-039",
                                            "alignJustify": "MuiTypography-alignJustify-041",
                                            "alignLeft": "MuiTypography-alignLeft-038",
                                            "alignRight": "MuiTypography-alignRight-040",
                                            "body1": "MuiTypography-body1-035",
                                            "body2": "MuiTypography-body2-034",
                                            "button": "MuiTypography-button-037",
                                            "caption": "MuiTypography-caption-036",
                                            "colorError": "MuiTypography-colorError-050",
                                            "colorInherit": "MuiTypography-colorInherit-045",
                                            "colorPrimary": "MuiTypography-colorPrimary-046",
                                            "colorSecondary": "MuiTypography-colorSecondary-047",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary-048",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary-049",
                                            "display1": "MuiTypography-display1-030",
                                            "display2": "MuiTypography-display2-029",
                                            "display3": "MuiTypography-display3-028",
                                            "display4": "MuiTypography-display4-027",
                                            "gutterBottom": "MuiTypography-gutterBottom-043",
                                            "headline": "MuiTypography-headline-031",
                                            "noWrap": "MuiTypography-noWrap-042",
                                            "paragraph": "MuiTypography-paragraph-044",
                                            "root": "MuiTypography-root-026",
                                            "subheading": "MuiTypography-subheading-033",
                                            "title": "MuiTypography-title-032",
                                          }
                                        }
                                        color="default"
                                        component="span"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        variant="body2"
                                      >
                                        <span
                                          className="MuiTypography-root-026 MuiTypography-body2-034 MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        >
                                          Display type
                                        </span>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </div>
                                </ListItemText>
                              </WithStyles(ListItemText)>
                              <pure(ExpandLessIcon)
                                key=".1"
                              >
                                <ExpandLessIcon>
                                  <WithStyles(SvgIcon)>
                                    <SvgIcon
                                      classes={
                                        Object {
                                          "colorAction": "MuiSvgIcon-colorAction-054",
                                          "colorDisabled": "MuiSvgIcon-colorDisabled-056",
                                          "colorError": "MuiSvgIcon-colorError-055",
                                          "colorPrimary": "MuiSvgIcon-colorPrimary-052",
                                          "colorSecondary": "MuiSvgIcon-colorSecondary-053",
                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-057",
                                          "root": "MuiSvgIcon-root-051",
                                        }
                                      }
                                      color="inherit"
                                      component="svg"
                                      fontSize="default"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="MuiSvgIcon-root-051"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z"
                                        />
                                        <path
                                          d="M0 0h24v24H0z"
                                          fill="none"
                                        />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ExpandLessIcon>
                              </pure(ExpandLessIcon)>
                              <WithStyles(TouchRipple)
                                center={false}
                                innerRef={[Function]}
                              >
                                <TouchRipple
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child-062",
                                      "childLeaving": "MuiTouchRipple-childLeaving-063",
                                      "childPulsate": "MuiTouchRipple-childPulsate-064",
                                      "ripple": "MuiTouchRipple-ripple-059",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-061",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible-060",
                                      "root": "MuiTouchRipple-root-058",
                                    }
                                  }
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    className="MuiTouchRipple-root-058"
                                    component="span"
                                    enter={true}
                                    exit={true}
                                  >
                                    <span
                                      className="MuiTouchRipple-root-058"
                                    />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </div>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </ListItem>
                    </WithStyles(ListItem)>
                    <WithStyles(Collapse)
                      in={true}
                      timeout="auto"
                      unmountOnExit={true}
                    >
                      <Collapse
                        classes={
                          Object {
                            "container": "MuiCollapse-container-065",
                            "entered": "MuiCollapse-entered-066",
                            "wrapper": "MuiCollapse-wrapper-067",
                            "wrapperInner": "MuiCollapse-wrapperInner-068",
                          }
                        }
                        collapsedHeight="0px"
                        component="div"
                        in={true}
                        theme={
                          Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "hover": "rgba(0, 0, 0, 0.08)",
                                "hoverOpacity": 0.08,
                                "selected": "rgba(0, 0, 0, 0.14)",
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                              "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                              "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                              "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                              "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                              "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                              "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                              "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                              "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                              "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                              "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                              "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                              "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                              "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": Object {
                              "unit": 8,
                            },
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "lineHeight": "1.46429em",
                              },
                              "body2": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "lineHeight": "1.71429em",
                              },
                              "button": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "lineHeight": "1.375em",
                              },
                              "display1": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.20588em",
                              },
                              "display2": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.8125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.13333em",
                                "marginLeft": "-.02em",
                              },
                              "display3": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "-.02em",
                                "lineHeight": "1.30357em",
                                "marginLeft": "-.02em",
                              },
                              "display4": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "7rem",
                                "fontWeight": 300,
                                "letterSpacing": "-.04em",
                                "lineHeight": "1.14286em",
                                "marginLeft": "-.04em",
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "headline": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "lineHeight": "1.35417em",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subheading": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "lineHeight": "1.5em",
                              },
                              "title": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.3125rem",
                                "fontWeight": 500,
                                "lineHeight": "1.16667em",
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "tooltip": 1500,
                            },
                          }
                        }
                        timeout="auto"
                        unmountOnExit={true}
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={true}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={true}
                        >
                          <div
                            className="MuiCollapse-container-065"
                            style={
                              Object {
                                "minHeight": "0px",
                              }
                            }
                          >
                            <div
                              className="MuiCollapse-wrapper-067"
                            >
                              <div
                                className="MuiCollapse-wrapperInner-068"
                              >
                                <WithStyles(FacetsFilterNestedListItem)
                                  className="facetsCategoryFilter active"
                                  index={0}
                                  isActive={true}
                                  key="0"
                                  onFacetClick={[Function]}
                                  primaryText="Journal Article (2)"
                                >
                                  <FacetsFilterNestedListItem
                                    className="facetsCategoryFilter active"
                                    classes={
                                      Object {
                                        "inset": "FacetsFilterNestedListItem-inset-070",
                                        "listItemGutters": "FacetsFilterNestedListItem-listItemGutters-069",
                                        "selectedFacet": "FacetsFilterNestedListItem-selectedFacet-071",
                                      }
                                    }
                                    index={0}
                                    isActive={true}
                                    onFacetClick={[Function]}
                                    primaryText="Journal Article (2)"
                                  >
                                    <WithStyles(ListItem)
                                      button={true}
                                      classes={
                                        Object {
                                          "gutters": "FacetsFilterNestedListItem-listItemGutters-069",
                                        }
                                      }
                                      key="facet-filter-nested-item-0"
                                      onClick={[Function]}
                                    >
                                      <ListItem
                                        ContainerComponent="li"
                                        button={true}
                                        classes={
                                          Object {
                                            "button": "MuiListItem-button-014",
                                            "container": "MuiListItem-container-07",
                                            "default": "MuiListItem-default-09",
                                            "dense": "MuiListItem-dense-010",
                                            "disabled": "MuiListItem-disabled-011",
                                            "divider": "MuiListItem-divider-012",
                                            "focusVisible": "MuiListItem-focusVisible-08",
                                            "gutters": "MuiListItem-gutters-013 FacetsFilterNestedListItem-listItemGutters-069",
                                            "root": "MuiListItem-root-06",
                                            "secondaryAction": "MuiListItem-secondaryAction-015",
                                            "selected": "MuiListItem-selected-016",
                                          }
                                        }
                                        dense={false}
                                        disableGutters={false}
                                        disabled={false}
                                        divider={false}
                                        onClick={[Function]}
                                        selected={false}
                                      >
                                        <WithStyles(ButtonBase)
                                          className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterNestedListItem-listItemGutters-069 MuiListItem-button-014"
                                          component="div"
                                          disabled={false}
                                          focusVisibleClassName="MuiListItem-focusVisible-08"
                                          onClick={[Function]}
                                        >
                                          <ButtonBase
                                            centerRipple={false}
                                            className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterNestedListItem-listItemGutters-069 MuiListItem-button-014"
                                            classes={
                                              Object {
                                                "disabled": "MuiButtonBase-disabled-018",
                                                "focusVisible": "MuiButtonBase-focusVisible-019",
                                                "root": "MuiButtonBase-root-017",
                                              }
                                            }
                                            component="div"
                                            disableRipple={false}
                                            disableTouchRipple={false}
                                            disabled={false}
                                            focusRipple={false}
                                            focusVisibleClassName="MuiListItem-focusVisible-08"
                                            onClick={[Function]}
                                            tabIndex="0"
                                            type="button"
                                          >
                                            <div
                                              className="MuiButtonBase-root-017 MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterNestedListItem-listItemGutters-069 MuiListItem-button-014"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex="0"
                                            >
                                              <WithStyles(ListItemIcon)
                                                key=".0"
                                              >
                                                <ListItemIcon
                                                  classes={
                                                    Object {
                                                      "root": "MuiListItemIcon-root-072",
                                                    }
                                                  }
                                                >
                                                  <pure(ClearIcon)
                                                    className="MuiListItemIcon-root-072"
                                                  >
                                                    <ClearIcon
                                                      className="MuiListItemIcon-root-072"
                                                    >
                                                      <WithStyles(SvgIcon)
                                                        className="MuiListItemIcon-root-072"
                                                      >
                                                        <SvgIcon
                                                          className="MuiListItemIcon-root-072"
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction-054",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled-056",
                                                              "colorError": "MuiSvgIcon-colorError-055",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary-052",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary-053",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-057",
                                                              "root": "MuiSvgIcon-root-051",
                                                            }
                                                          }
                                                          color="inherit"
                                                          component="svg"
                                                          fontSize="default"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className="MuiSvgIcon-root-051 MuiListItemIcon-root-072"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                            />
                                                            <path
                                                              d="M0 0h24v24H0z"
                                                              fill="none"
                                                            />
                                                          </svg>
                                                        </SvgIcon>
                                                      </WithStyles(SvgIcon)>
                                                    </ClearIcon>
                                                  </pure(ClearIcon)>
                                                </ListItemIcon>
                                              </WithStyles(ListItemIcon)>
                                              <WithStyles(ListItemText)
                                                classes={
                                                  Object {
                                                    "inset": "FacetsFilterNestedListItem-inset-070",
                                                  }
                                                }
                                                inset={true}
                                                key=".1"
                                                primary="Journal Article (2)"
                                                primaryTypographyProps={
                                                  Object {
                                                    "classes": Object {
                                                      "colorTextPrimary": "FacetsFilterNestedListItem-selectedFacet-071",
                                                    },
                                                    "color": "textPrimary",
                                                    "variant": "body2",
                                                  }
                                                }
                                              >
                                                <ListItemText
                                                  classes={
                                                    Object {
                                                      "dense": "MuiListItemText-dense-022",
                                                      "inset": "MuiListItemText-inset-021 FacetsFilterNestedListItem-inset-070",
                                                      "primary": "MuiListItemText-primary-023",
                                                      "root": "MuiListItemText-root-020",
                                                      "secondary": "MuiListItemText-secondary-024",
                                                      "textDense": "MuiListItemText-textDense-025",
                                                    }
                                                  }
                                                  disableTypography={false}
                                                  inset={true}
                                                  primary="Journal Article (2)"
                                                  primaryTypographyProps={
                                                    Object {
                                                      "classes": Object {
                                                        "colorTextPrimary": "FacetsFilterNestedListItem-selectedFacet-071",
                                                      },
                                                      "color": "textPrimary",
                                                      "variant": "body2",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="MuiListItemText-root-020 MuiListItemText-dense-022 MuiListItemText-inset-021 FacetsFilterNestedListItem-inset-070"
                                                  >
                                                    <WithStyles(Typography)
                                                      className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                                      classes={
                                                        Object {
                                                          "colorTextPrimary": "FacetsFilterNestedListItem-selectedFacet-071",
                                                        }
                                                      }
                                                      color="textPrimary"
                                                      component="span"
                                                      variant="body2"
                                                    >
                                                      <Typography
                                                        align="inherit"
                                                        className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter-039",
                                                            "alignJustify": "MuiTypography-alignJustify-041",
                                                            "alignLeft": "MuiTypography-alignLeft-038",
                                                            "alignRight": "MuiTypography-alignRight-040",
                                                            "body1": "MuiTypography-body1-035",
                                                            "body2": "MuiTypography-body2-034",
                                                            "button": "MuiTypography-button-037",
                                                            "caption": "MuiTypography-caption-036",
                                                            "colorError": "MuiTypography-colorError-050",
                                                            "colorInherit": "MuiTypography-colorInherit-045",
                                                            "colorPrimary": "MuiTypography-colorPrimary-046",
                                                            "colorSecondary": "MuiTypography-colorSecondary-047",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary-048 FacetsFilterNestedListItem-selectedFacet-071",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary-049",
                                                            "display1": "MuiTypography-display1-030",
                                                            "display2": "MuiTypography-display2-029",
                                                            "display3": "MuiTypography-display3-028",
                                                            "display4": "MuiTypography-display4-027",
                                                            "gutterBottom": "MuiTypography-gutterBottom-043",
                                                            "headline": "MuiTypography-headline-031",
                                                            "noWrap": "MuiTypography-noWrap-042",
                                                            "paragraph": "MuiTypography-paragraph-044",
                                                            "root": "MuiTypography-root-026",
                                                            "subheading": "MuiTypography-subheading-033",
                                                            "title": "MuiTypography-title-032",
                                                          }
                                                        }
                                                        color="textPrimary"
                                                        component="span"
                                                        gutterBottom={false}
                                                        headlineMapping={
                                                          Object {
                                                            "body1": "p",
                                                            "body2": "aside",
                                                            "display1": "h1",
                                                            "display2": "h1",
                                                            "display3": "h1",
                                                            "display4": "h1",
                                                            "headline": "h1",
                                                            "subheading": "h3",
                                                            "title": "h2",
                                                          }
                                                        }
                                                        noWrap={false}
                                                        paragraph={false}
                                                        variant="body2"
                                                      >
                                                        <span
                                                          className="MuiTypography-root-026 MuiTypography-body2-034 MuiTypography-colorTextPrimary-048 FacetsFilterNestedListItem-selectedFacet-071 MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                                        >
                                                          Journal Article (2)
                                                        </span>
                                                      </Typography>
                                                    </WithStyles(Typography)>
                                                  </div>
                                                </ListItemText>
                                              </WithStyles(ListItemText)>
                                              <WithStyles(TouchRipple)
                                                center={false}
                                                innerRef={[Function]}
                                              >
                                                <TouchRipple
                                                  center={false}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child-062",
                                                      "childLeaving": "MuiTouchRipple-childLeaving-063",
                                                      "childPulsate": "MuiTouchRipple-childPulsate-064",
                                                      "ripple": "MuiTouchRipple-ripple-059",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-061",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible-060",
                                                      "root": "MuiTouchRipple-root-058",
                                                    }
                                                  }
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    className="MuiTouchRipple-root-058"
                                                    component="span"
                                                    enter={true}
                                                    exit={true}
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root-058"
                                                    />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </div>
                                          </ButtonBase>
                                        </WithStyles(ButtonBase)>
                                      </ListItem>
                                    </WithStyles(ListItem)>
                                  </FacetsFilterNestedListItem>
                                </WithStyles(FacetsFilterNestedListItem)>
                              </div>
                            </div>
                          </div>
                        </Transition>
                      </Collapse>
                    </WithStyles(Collapse)>
                  </FacetsFilterListItem>
                </WithStyles(FacetsFilterListItem)>
                <WithStyles(FacetsFilterListItem)
                  className="facetsCategory"
                  facetTitle="Keywords"
                  id="facet-category-Keywords"
                  key="1"
                  nestedItems={
                    Array [
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={0}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="Applied Microbiology and Biotechnology (1)"
                      />,
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={1}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="Biochemistry (1)"
                      />,
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={2}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="Bioengineering (1)"
                      />,
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={3}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="Biomaterials (1)"
                      />,
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={4}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="Biomedical Engineering (1)"
                      />,
                    ]
                  }
                  onToggle={[Function]}
                >
                  <FacetsFilterListItem
                    className="facetsCategory"
                    classes={
                      Object {
                        "listItemGutters": "FacetsFilterListItem-listItemGutters-05",
                      }
                    }
                    facetTitle="Keywords"
                    id="facet-category-Keywords"
                    nestedItems={
                      Array [
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={0}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="Applied Microbiology and Biotechnology (1)"
                        />,
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={1}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="Biochemistry (1)"
                        />,
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={2}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="Bioengineering (1)"
                        />,
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={3}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="Biomaterials (1)"
                        />,
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={4}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="Biomedical Engineering (1)"
                        />,
                      ]
                    }
                    onToggle={[Function]}
                  >
                    <WithStyles(ListItem)
                      button={true}
                      classes={
                        Object {
                          "gutters": "FacetsFilterListItem-listItemGutters-05",
                        }
                      }
                      key="facet_filter_undefined"
                      onClick={[Function]}
                    >
                      <ListItem
                        ContainerComponent="li"
                        button={true}
                        classes={
                          Object {
                            "button": "MuiListItem-button-014",
                            "container": "MuiListItem-container-07",
                            "default": "MuiListItem-default-09",
                            "dense": "MuiListItem-dense-010",
                            "disabled": "MuiListItem-disabled-011",
                            "divider": "MuiListItem-divider-012",
                            "focusVisible": "MuiListItem-focusVisible-08",
                            "gutters": "MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05",
                            "root": "MuiListItem-root-06",
                            "secondaryAction": "MuiListItem-secondaryAction-015",
                            "selected": "MuiListItem-selected-016",
                          }
                        }
                        dense={false}
                        disableGutters={false}
                        disabled={false}
                        divider={false}
                        onClick={[Function]}
                        selected={false}
                      >
                        <WithStyles(ButtonBase)
                          className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                          component="div"
                          disabled={false}
                          focusVisibleClassName="MuiListItem-focusVisible-08"
                          onClick={[Function]}
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-018",
                                "focusVisible": "MuiButtonBase-focusVisible-019",
                                "root": "MuiButtonBase-root-017",
                              }
                            }
                            component="div"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="MuiListItem-focusVisible-08"
                            onClick={[Function]}
                            tabIndex="0"
                            type="button"
                          >
                            <div
                              className="MuiButtonBase-root-017 MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex="0"
                            >
                              <WithStyles(ListItemText)
                                key=".0"
                                primary="Keywords"
                                primaryTypographyProps={
                                  Object {
                                    "variant": "body2",
                                  }
                                }
                              >
                                <ListItemText
                                  classes={
                                    Object {
                                      "dense": "MuiListItemText-dense-022",
                                      "inset": "MuiListItemText-inset-021",
                                      "primary": "MuiListItemText-primary-023",
                                      "root": "MuiListItemText-root-020",
                                      "secondary": "MuiListItemText-secondary-024",
                                      "textDense": "MuiListItemText-textDense-025",
                                    }
                                  }
                                  disableTypography={false}
                                  inset={false}
                                  primary="Keywords"
                                  primaryTypographyProps={
                                    Object {
                                      "variant": "body2",
                                    }
                                  }
                                >
                                  <div
                                    className="MuiListItemText-root-020 MuiListItemText-dense-022"
                                  >
                                    <WithStyles(Typography)
                                      className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                      component="span"
                                      variant="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-039",
                                            "alignJustify": "MuiTypography-alignJustify-041",
                                            "alignLeft": "MuiTypography-alignLeft-038",
                                            "alignRight": "MuiTypography-alignRight-040",
                                            "body1": "MuiTypography-body1-035",
                                            "body2": "MuiTypography-body2-034",
                                            "button": "MuiTypography-button-037",
                                            "caption": "MuiTypography-caption-036",
                                            "colorError": "MuiTypography-colorError-050",
                                            "colorInherit": "MuiTypography-colorInherit-045",
                                            "colorPrimary": "MuiTypography-colorPrimary-046",
                                            "colorSecondary": "MuiTypography-colorSecondary-047",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary-048",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary-049",
                                            "display1": "MuiTypography-display1-030",
                                            "display2": "MuiTypography-display2-029",
                                            "display3": "MuiTypography-display3-028",
                                            "display4": "MuiTypography-display4-027",
                                            "gutterBottom": "MuiTypography-gutterBottom-043",
                                            "headline": "MuiTypography-headline-031",
                                            "noWrap": "MuiTypography-noWrap-042",
                                            "paragraph": "MuiTypography-paragraph-044",
                                            "root": "MuiTypography-root-026",
                                            "subheading": "MuiTypography-subheading-033",
                                            "title": "MuiTypography-title-032",
                                          }
                                        }
                                        color="default"
                                        component="span"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        variant="body2"
                                      >
                                        <span
                                          className="MuiTypography-root-026 MuiTypography-body2-034 MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        >
                                          Keywords
                                        </span>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </div>
                                </ListItemText>
                              </WithStyles(ListItemText)>
                              <pure(ExpandMoreIcon)
                                key=".1"
                              >
                                <ExpandMoreIcon>
                                  <WithStyles(SvgIcon)>
                                    <SvgIcon
                                      classes={
                                        Object {
                                          "colorAction": "MuiSvgIcon-colorAction-054",
                                          "colorDisabled": "MuiSvgIcon-colorDisabled-056",
                                          "colorError": "MuiSvgIcon-colorError-055",
                                          "colorPrimary": "MuiSvgIcon-colorPrimary-052",
                                          "colorSecondary": "MuiSvgIcon-colorSecondary-053",
                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-057",
                                          "root": "MuiSvgIcon-root-051",
                                        }
                                      }
                                      color="inherit"
                                      component="svg"
                                      fontSize="default"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="MuiSvgIcon-root-051"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                        />
                                        <path
                                          d="M0 0h24v24H0z"
                                          fill="none"
                                        />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ExpandMoreIcon>
                              </pure(ExpandMoreIcon)>
                              <WithStyles(TouchRipple)
                                center={false}
                                innerRef={[Function]}
                              >
                                <TouchRipple
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child-062",
                                      "childLeaving": "MuiTouchRipple-childLeaving-063",
                                      "childPulsate": "MuiTouchRipple-childPulsate-064",
                                      "ripple": "MuiTouchRipple-ripple-059",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-061",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible-060",
                                      "root": "MuiTouchRipple-root-058",
                                    }
                                  }
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    className="MuiTouchRipple-root-058"
                                    component="span"
                                    enter={true}
                                    exit={true}
                                  >
                                    <span
                                      className="MuiTouchRipple-root-058"
                                    />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </div>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </ListItem>
                    </WithStyles(ListItem)>
                    <WithStyles(Collapse)
                      timeout="auto"
                      unmountOnExit={true}
                    >
                      <Collapse
                        classes={
                          Object {
                            "container": "MuiCollapse-container-065",
                            "entered": "MuiCollapse-entered-066",
                            "wrapper": "MuiCollapse-wrapper-067",
                            "wrapperInner": "MuiCollapse-wrapperInner-068",
                          }
                        }
                        collapsedHeight="0px"
                        component="div"
                        theme={
                          Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "hover": "rgba(0, 0, 0, 0.08)",
                                "hoverOpacity": 0.08,
                                "selected": "rgba(0, 0, 0, 0.14)",
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                              "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                              "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                              "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                              "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                              "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                              "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                              "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                              "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                              "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                              "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                              "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                              "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                              "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": Object {
                              "unit": 8,
                            },
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "lineHeight": "1.46429em",
                              },
                              "body2": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "lineHeight": "1.71429em",
                              },
                              "button": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "lineHeight": "1.375em",
                              },
                              "display1": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.20588em",
                              },
                              "display2": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.8125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.13333em",
                                "marginLeft": "-.02em",
                              },
                              "display3": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "-.02em",
                                "lineHeight": "1.30357em",
                                "marginLeft": "-.02em",
                              },
                              "display4": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "7rem",
                                "fontWeight": 300,
                                "letterSpacing": "-.04em",
                                "lineHeight": "1.14286em",
                                "marginLeft": "-.04em",
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "headline": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "lineHeight": "1.35417em",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subheading": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "lineHeight": "1.5em",
                              },
                              "title": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.3125rem",
                                "fontWeight": 500,
                                "lineHeight": "1.16667em",
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "tooltip": 1500,
                            },
                          }
                        }
                        timeout="auto"
                        unmountOnExit={true}
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={true}
                        />
                      </Collapse>
                    </WithStyles(Collapse)>
                  </FacetsFilterListItem>
                </WithStyles(FacetsFilterListItem)>
                <WithStyles(FacetsFilterListItem)
                  className="facetsCategory"
                  facetTitle="Year published"
                  id="facet-category-Year-published"
                  key="2"
                  nestedItems={
                    Array [
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={0}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="2017 (2)"
                      />,
                    ]
                  }
                  onToggle={[Function]}
                >
                  <FacetsFilterListItem
                    className="facetsCategory"
                    classes={
                      Object {
                        "listItemGutters": "FacetsFilterListItem-listItemGutters-05",
                      }
                    }
                    facetTitle="Year published"
                    id="facet-category-Year-published"
                    nestedItems={
                      Array [
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={0}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="2017 (2)"
                        />,
                      ]
                    }
                    onToggle={[Function]}
                  >
                    <WithStyles(ListItem)
                      button={true}
                      classes={
                        Object {
                          "gutters": "FacetsFilterListItem-listItemGutters-05",
                        }
                      }
                      key="facet_filter_undefined"
                      onClick={[Function]}
                    >
                      <ListItem
                        ContainerComponent="li"
                        button={true}
                        classes={
                          Object {
                            "button": "MuiListItem-button-014",
                            "container": "MuiListItem-container-07",
                            "default": "MuiListItem-default-09",
                            "dense": "MuiListItem-dense-010",
                            "disabled": "MuiListItem-disabled-011",
                            "divider": "MuiListItem-divider-012",
                            "focusVisible": "MuiListItem-focusVisible-08",
                            "gutters": "MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05",
                            "root": "MuiListItem-root-06",
                            "secondaryAction": "MuiListItem-secondaryAction-015",
                            "selected": "MuiListItem-selected-016",
                          }
                        }
                        dense={false}
                        disableGutters={false}
                        disabled={false}
                        divider={false}
                        onClick={[Function]}
                        selected={false}
                      >
                        <WithStyles(ButtonBase)
                          className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                          component="div"
                          disabled={false}
                          focusVisibleClassName="MuiListItem-focusVisible-08"
                          onClick={[Function]}
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-018",
                                "focusVisible": "MuiButtonBase-focusVisible-019",
                                "root": "MuiButtonBase-root-017",
                              }
                            }
                            component="div"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="MuiListItem-focusVisible-08"
                            onClick={[Function]}
                            tabIndex="0"
                            type="button"
                          >
                            <div
                              className="MuiButtonBase-root-017 MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex="0"
                            >
                              <WithStyles(ListItemText)
                                key=".0"
                                primary="Year published"
                                primaryTypographyProps={
                                  Object {
                                    "variant": "body2",
                                  }
                                }
                              >
                                <ListItemText
                                  classes={
                                    Object {
                                      "dense": "MuiListItemText-dense-022",
                                      "inset": "MuiListItemText-inset-021",
                                      "primary": "MuiListItemText-primary-023",
                                      "root": "MuiListItemText-root-020",
                                      "secondary": "MuiListItemText-secondary-024",
                                      "textDense": "MuiListItemText-textDense-025",
                                    }
                                  }
                                  disableTypography={false}
                                  inset={false}
                                  primary="Year published"
                                  primaryTypographyProps={
                                    Object {
                                      "variant": "body2",
                                    }
                                  }
                                >
                                  <div
                                    className="MuiListItemText-root-020 MuiListItemText-dense-022"
                                  >
                                    <WithStyles(Typography)
                                      className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                      component="span"
                                      variant="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-039",
                                            "alignJustify": "MuiTypography-alignJustify-041",
                                            "alignLeft": "MuiTypography-alignLeft-038",
                                            "alignRight": "MuiTypography-alignRight-040",
                                            "body1": "MuiTypography-body1-035",
                                            "body2": "MuiTypography-body2-034",
                                            "button": "MuiTypography-button-037",
                                            "caption": "MuiTypography-caption-036",
                                            "colorError": "MuiTypography-colorError-050",
                                            "colorInherit": "MuiTypography-colorInherit-045",
                                            "colorPrimary": "MuiTypography-colorPrimary-046",
                                            "colorSecondary": "MuiTypography-colorSecondary-047",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary-048",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary-049",
                                            "display1": "MuiTypography-display1-030",
                                            "display2": "MuiTypography-display2-029",
                                            "display3": "MuiTypography-display3-028",
                                            "display4": "MuiTypography-display4-027",
                                            "gutterBottom": "MuiTypography-gutterBottom-043",
                                            "headline": "MuiTypography-headline-031",
                                            "noWrap": "MuiTypography-noWrap-042",
                                            "paragraph": "MuiTypography-paragraph-044",
                                            "root": "MuiTypography-root-026",
                                            "subheading": "MuiTypography-subheading-033",
                                            "title": "MuiTypography-title-032",
                                          }
                                        }
                                        color="default"
                                        component="span"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        variant="body2"
                                      >
                                        <span
                                          className="MuiTypography-root-026 MuiTypography-body2-034 MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        >
                                          Year published
                                        </span>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </div>
                                </ListItemText>
                              </WithStyles(ListItemText)>
                              <pure(ExpandMoreIcon)
                                key=".1"
                              >
                                <ExpandMoreIcon>
                                  <WithStyles(SvgIcon)>
                                    <SvgIcon
                                      classes={
                                        Object {
                                          "colorAction": "MuiSvgIcon-colorAction-054",
                                          "colorDisabled": "MuiSvgIcon-colorDisabled-056",
                                          "colorError": "MuiSvgIcon-colorError-055",
                                          "colorPrimary": "MuiSvgIcon-colorPrimary-052",
                                          "colorSecondary": "MuiSvgIcon-colorSecondary-053",
                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-057",
                                          "root": "MuiSvgIcon-root-051",
                                        }
                                      }
                                      color="inherit"
                                      component="svg"
                                      fontSize="default"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="MuiSvgIcon-root-051"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                        />
                                        <path
                                          d="M0 0h24v24H0z"
                                          fill="none"
                                        />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ExpandMoreIcon>
                              </pure(ExpandMoreIcon)>
                              <WithStyles(TouchRipple)
                                center={false}
                                innerRef={[Function]}
                              >
                                <TouchRipple
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child-062",
                                      "childLeaving": "MuiTouchRipple-childLeaving-063",
                                      "childPulsate": "MuiTouchRipple-childPulsate-064",
                                      "ripple": "MuiTouchRipple-ripple-059",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-061",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible-060",
                                      "root": "MuiTouchRipple-root-058",
                                    }
                                  }
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    className="MuiTouchRipple-root-058"
                                    component="span"
                                    enter={true}
                                    exit={true}
                                  >
                                    <span
                                      className="MuiTouchRipple-root-058"
                                    />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </div>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </ListItem>
                    </WithStyles(ListItem)>
                    <WithStyles(Collapse)
                      timeout="auto"
                      unmountOnExit={true}
                    >
                      <Collapse
                        classes={
                          Object {
                            "container": "MuiCollapse-container-065",
                            "entered": "MuiCollapse-entered-066",
                            "wrapper": "MuiCollapse-wrapper-067",
                            "wrapperInner": "MuiCollapse-wrapperInner-068",
                          }
                        }
                        collapsedHeight="0px"
                        component="div"
                        theme={
                          Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "hover": "rgba(0, 0, 0, 0.08)",
                                "hoverOpacity": 0.08,
                                "selected": "rgba(0, 0, 0, 0.14)",
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                              "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                              "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                              "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                              "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                              "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                              "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                              "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                              "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                              "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                              "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                              "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                              "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                              "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": Object {
                              "unit": 8,
                            },
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "lineHeight": "1.46429em",
                              },
                              "body2": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "lineHeight": "1.71429em",
                              },
                              "button": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "lineHeight": "1.375em",
                              },
                              "display1": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.20588em",
                              },
                              "display2": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.8125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.13333em",
                                "marginLeft": "-.02em",
                              },
                              "display3": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "-.02em",
                                "lineHeight": "1.30357em",
                                "marginLeft": "-.02em",
                              },
                              "display4": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "7rem",
                                "fontWeight": 300,
                                "letterSpacing": "-.04em",
                                "lineHeight": "1.14286em",
                                "marginLeft": "-.04em",
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "headline": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "lineHeight": "1.35417em",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subheading": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "lineHeight": "1.5em",
                              },
                              "title": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.3125rem",
                                "fontWeight": 500,
                                "lineHeight": "1.16667em",
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "tooltip": 1500,
                            },
                          }
                        }
                        timeout="auto"
                        unmountOnExit={true}
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={true}
                        />
                      </Collapse>
                    </WithStyles(Collapse)>
                  </FacetsFilterListItem>
                </WithStyles(FacetsFilterListItem)>
                <WithStyles(FacetsFilterListItem)
                  className="facetsCategory"
                  facetTitle="Journal name"
                  id="facet-category-Journal-name"
                  key="3"
                  nestedItems={
                    Array [
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={0}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="Metallomics (1)"
                      />,
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={1}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="Nature biotechnology (1)"
                      />,
                    ]
                  }
                  onToggle={[Function]}
                >
                  <FacetsFilterListItem
                    className="facetsCategory"
                    classes={
                      Object {
                        "listItemGutters": "FacetsFilterListItem-listItemGutters-05",
                      }
                    }
                    facetTitle="Journal name"
                    id="facet-category-Journal-name"
                    nestedItems={
                      Array [
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={0}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="Metallomics (1)"
                        />,
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={1}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="Nature biotechnology (1)"
                        />,
                      ]
                    }
                    onToggle={[Function]}
                  >
                    <WithStyles(ListItem)
                      button={true}
                      classes={
                        Object {
                          "gutters": "FacetsFilterListItem-listItemGutters-05",
                        }
                      }
                      key="facet_filter_undefined"
                      onClick={[Function]}
                    >
                      <ListItem
                        ContainerComponent="li"
                        button={true}
                        classes={
                          Object {
                            "button": "MuiListItem-button-014",
                            "container": "MuiListItem-container-07",
                            "default": "MuiListItem-default-09",
                            "dense": "MuiListItem-dense-010",
                            "disabled": "MuiListItem-disabled-011",
                            "divider": "MuiListItem-divider-012",
                            "focusVisible": "MuiListItem-focusVisible-08",
                            "gutters": "MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05",
                            "root": "MuiListItem-root-06",
                            "secondaryAction": "MuiListItem-secondaryAction-015",
                            "selected": "MuiListItem-selected-016",
                          }
                        }
                        dense={false}
                        disableGutters={false}
                        disabled={false}
                        divider={false}
                        onClick={[Function]}
                        selected={false}
                      >
                        <WithStyles(ButtonBase)
                          className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                          component="div"
                          disabled={false}
                          focusVisibleClassName="MuiListItem-focusVisible-08"
                          onClick={[Function]}
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-018",
                                "focusVisible": "MuiButtonBase-focusVisible-019",
                                "root": "MuiButtonBase-root-017",
                              }
                            }
                            component="div"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="MuiListItem-focusVisible-08"
                            onClick={[Function]}
                            tabIndex="0"
                            type="button"
                          >
                            <div
                              className="MuiButtonBase-root-017 MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex="0"
                            >
                              <WithStyles(ListItemText)
                                key=".0"
                                primary="Journal name"
                                primaryTypographyProps={
                                  Object {
                                    "variant": "body2",
                                  }
                                }
                              >
                                <ListItemText
                                  classes={
                                    Object {
                                      "dense": "MuiListItemText-dense-022",
                                      "inset": "MuiListItemText-inset-021",
                                      "primary": "MuiListItemText-primary-023",
                                      "root": "MuiListItemText-root-020",
                                      "secondary": "MuiListItemText-secondary-024",
                                      "textDense": "MuiListItemText-textDense-025",
                                    }
                                  }
                                  disableTypography={false}
                                  inset={false}
                                  primary="Journal name"
                                  primaryTypographyProps={
                                    Object {
                                      "variant": "body2",
                                    }
                                  }
                                >
                                  <div
                                    className="MuiListItemText-root-020 MuiListItemText-dense-022"
                                  >
                                    <WithStyles(Typography)
                                      className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                      component="span"
                                      variant="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-039",
                                            "alignJustify": "MuiTypography-alignJustify-041",
                                            "alignLeft": "MuiTypography-alignLeft-038",
                                            "alignRight": "MuiTypography-alignRight-040",
                                            "body1": "MuiTypography-body1-035",
                                            "body2": "MuiTypography-body2-034",
                                            "button": "MuiTypography-button-037",
                                            "caption": "MuiTypography-caption-036",
                                            "colorError": "MuiTypography-colorError-050",
                                            "colorInherit": "MuiTypography-colorInherit-045",
                                            "colorPrimary": "MuiTypography-colorPrimary-046",
                                            "colorSecondary": "MuiTypography-colorSecondary-047",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary-048",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary-049",
                                            "display1": "MuiTypography-display1-030",
                                            "display2": "MuiTypography-display2-029",
                                            "display3": "MuiTypography-display3-028",
                                            "display4": "MuiTypography-display4-027",
                                            "gutterBottom": "MuiTypography-gutterBottom-043",
                                            "headline": "MuiTypography-headline-031",
                                            "noWrap": "MuiTypography-noWrap-042",
                                            "paragraph": "MuiTypography-paragraph-044",
                                            "root": "MuiTypography-root-026",
                                            "subheading": "MuiTypography-subheading-033",
                                            "title": "MuiTypography-title-032",
                                          }
                                        }
                                        color="default"
                                        component="span"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        variant="body2"
                                      >
                                        <span
                                          className="MuiTypography-root-026 MuiTypography-body2-034 MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        >
                                          Journal name
                                        </span>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </div>
                                </ListItemText>
                              </WithStyles(ListItemText)>
                              <pure(ExpandMoreIcon)
                                key=".1"
                              >
                                <ExpandMoreIcon>
                                  <WithStyles(SvgIcon)>
                                    <SvgIcon
                                      classes={
                                        Object {
                                          "colorAction": "MuiSvgIcon-colorAction-054",
                                          "colorDisabled": "MuiSvgIcon-colorDisabled-056",
                                          "colorError": "MuiSvgIcon-colorError-055",
                                          "colorPrimary": "MuiSvgIcon-colorPrimary-052",
                                          "colorSecondary": "MuiSvgIcon-colorSecondary-053",
                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-057",
                                          "root": "MuiSvgIcon-root-051",
                                        }
                                      }
                                      color="inherit"
                                      component="svg"
                                      fontSize="default"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="MuiSvgIcon-root-051"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                        />
                                        <path
                                          d="M0 0h24v24H0z"
                                          fill="none"
                                        />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ExpandMoreIcon>
                              </pure(ExpandMoreIcon)>
                              <WithStyles(TouchRipple)
                                center={false}
                                innerRef={[Function]}
                              >
                                <TouchRipple
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child-062",
                                      "childLeaving": "MuiTouchRipple-childLeaving-063",
                                      "childPulsate": "MuiTouchRipple-childPulsate-064",
                                      "ripple": "MuiTouchRipple-ripple-059",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-061",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible-060",
                                      "root": "MuiTouchRipple-root-058",
                                    }
                                  }
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    className="MuiTouchRipple-root-058"
                                    component="span"
                                    enter={true}
                                    exit={true}
                                  >
                                    <span
                                      className="MuiTouchRipple-root-058"
                                    />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </div>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </ListItem>
                    </WithStyles(ListItem)>
                    <WithStyles(Collapse)
                      timeout="auto"
                      unmountOnExit={true}
                    >
                      <Collapse
                        classes={
                          Object {
                            "container": "MuiCollapse-container-065",
                            "entered": "MuiCollapse-entered-066",
                            "wrapper": "MuiCollapse-wrapper-067",
                            "wrapperInner": "MuiCollapse-wrapperInner-068",
                          }
                        }
                        collapsedHeight="0px"
                        component="div"
                        theme={
                          Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "hover": "rgba(0, 0, 0, 0.08)",
                                "hoverOpacity": 0.08,
                                "selected": "rgba(0, 0, 0, 0.14)",
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                              "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                              "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                              "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                              "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                              "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                              "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                              "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                              "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                              "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                              "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                              "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                              "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                              "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": Object {
                              "unit": 8,
                            },
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "lineHeight": "1.46429em",
                              },
                              "body2": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "lineHeight": "1.71429em",
                              },
                              "button": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "lineHeight": "1.375em",
                              },
                              "display1": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.20588em",
                              },
                              "display2": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.8125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.13333em",
                                "marginLeft": "-.02em",
                              },
                              "display3": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "-.02em",
                                "lineHeight": "1.30357em",
                                "marginLeft": "-.02em",
                              },
                              "display4": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "7rem",
                                "fontWeight": 300,
                                "letterSpacing": "-.04em",
                                "lineHeight": "1.14286em",
                                "marginLeft": "-.04em",
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "headline": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "lineHeight": "1.35417em",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subheading": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "lineHeight": "1.5em",
                              },
                              "title": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.3125rem",
                                "fontWeight": 500,
                                "lineHeight": "1.16667em",
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "tooltip": 1500,
                            },
                          }
                        }
                        timeout="auto"
                        unmountOnExit={true}
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={true}
                        />
                      </Collapse>
                    </WithStyles(Collapse)>
                  </FacetsFilterListItem>
                </WithStyles(FacetsFilterListItem)>
                <WithStyles(FacetsFilterListItem)
                  className="facetsCategory"
                  facetTitle="Collection"
                  id="facet-category-Collection"
                  key="4"
                  nestedItems={
                    Array [
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={0}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="Crossref Import (2)"
                      />,
                    ]
                  }
                  onToggle={[Function]}
                >
                  <FacetsFilterListItem
                    className="facetsCategory"
                    classes={
                      Object {
                        "listItemGutters": "FacetsFilterListItem-listItemGutters-05",
                      }
                    }
                    facetTitle="Collection"
                    id="facet-category-Collection"
                    nestedItems={
                      Array [
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={0}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="Crossref Import (2)"
                        />,
                      ]
                    }
                    onToggle={[Function]}
                  >
                    <WithStyles(ListItem)
                      button={true}
                      classes={
                        Object {
                          "gutters": "FacetsFilterListItem-listItemGutters-05",
                        }
                      }
                      key="facet_filter_undefined"
                      onClick={[Function]}
                    >
                      <ListItem
                        ContainerComponent="li"
                        button={true}
                        classes={
                          Object {
                            "button": "MuiListItem-button-014",
                            "container": "MuiListItem-container-07",
                            "default": "MuiListItem-default-09",
                            "dense": "MuiListItem-dense-010",
                            "disabled": "MuiListItem-disabled-011",
                            "divider": "MuiListItem-divider-012",
                            "focusVisible": "MuiListItem-focusVisible-08",
                            "gutters": "MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05",
                            "root": "MuiListItem-root-06",
                            "secondaryAction": "MuiListItem-secondaryAction-015",
                            "selected": "MuiListItem-selected-016",
                          }
                        }
                        dense={false}
                        disableGutters={false}
                        disabled={false}
                        divider={false}
                        onClick={[Function]}
                        selected={false}
                      >
                        <WithStyles(ButtonBase)
                          className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                          component="div"
                          disabled={false}
                          focusVisibleClassName="MuiListItem-focusVisible-08"
                          onClick={[Function]}
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-018",
                                "focusVisible": "MuiButtonBase-focusVisible-019",
                                "root": "MuiButtonBase-root-017",
                              }
                            }
                            component="div"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="MuiListItem-focusVisible-08"
                            onClick={[Function]}
                            tabIndex="0"
                            type="button"
                          >
                            <div
                              className="MuiButtonBase-root-017 MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex="0"
                            >
                              <WithStyles(ListItemText)
                                key=".0"
                                primary="Collection"
                                primaryTypographyProps={
                                  Object {
                                    "variant": "body2",
                                  }
                                }
                              >
                                <ListItemText
                                  classes={
                                    Object {
                                      "dense": "MuiListItemText-dense-022",
                                      "inset": "MuiListItemText-inset-021",
                                      "primary": "MuiListItemText-primary-023",
                                      "root": "MuiListItemText-root-020",
                                      "secondary": "MuiListItemText-secondary-024",
                                      "textDense": "MuiListItemText-textDense-025",
                                    }
                                  }
                                  disableTypography={false}
                                  inset={false}
                                  primary="Collection"
                                  primaryTypographyProps={
                                    Object {
                                      "variant": "body2",
                                    }
                                  }
                                >
                                  <div
                                    className="MuiListItemText-root-020 MuiListItemText-dense-022"
                                  >
                                    <WithStyles(Typography)
                                      className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                      component="span"
                                      variant="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-039",
                                            "alignJustify": "MuiTypography-alignJustify-041",
                                            "alignLeft": "MuiTypography-alignLeft-038",
                                            "alignRight": "MuiTypography-alignRight-040",
                                            "body1": "MuiTypography-body1-035",
                                            "body2": "MuiTypography-body2-034",
                                            "button": "MuiTypography-button-037",
                                            "caption": "MuiTypography-caption-036",
                                            "colorError": "MuiTypography-colorError-050",
                                            "colorInherit": "MuiTypography-colorInherit-045",
                                            "colorPrimary": "MuiTypography-colorPrimary-046",
                                            "colorSecondary": "MuiTypography-colorSecondary-047",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary-048",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary-049",
                                            "display1": "MuiTypography-display1-030",
                                            "display2": "MuiTypography-display2-029",
                                            "display3": "MuiTypography-display3-028",
                                            "display4": "MuiTypography-display4-027",
                                            "gutterBottom": "MuiTypography-gutterBottom-043",
                                            "headline": "MuiTypography-headline-031",
                                            "noWrap": "MuiTypography-noWrap-042",
                                            "paragraph": "MuiTypography-paragraph-044",
                                            "root": "MuiTypography-root-026",
                                            "subheading": "MuiTypography-subheading-033",
                                            "title": "MuiTypography-title-032",
                                          }
                                        }
                                        color="default"
                                        component="span"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        variant="body2"
                                      >
                                        <span
                                          className="MuiTypography-root-026 MuiTypography-body2-034 MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        >
                                          Collection
                                        </span>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </div>
                                </ListItemText>
                              </WithStyles(ListItemText)>
                              <pure(ExpandMoreIcon)
                                key=".1"
                              >
                                <ExpandMoreIcon>
                                  <WithStyles(SvgIcon)>
                                    <SvgIcon
                                      classes={
                                        Object {
                                          "colorAction": "MuiSvgIcon-colorAction-054",
                                          "colorDisabled": "MuiSvgIcon-colorDisabled-056",
                                          "colorError": "MuiSvgIcon-colorError-055",
                                          "colorPrimary": "MuiSvgIcon-colorPrimary-052",
                                          "colorSecondary": "MuiSvgIcon-colorSecondary-053",
                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-057",
                                          "root": "MuiSvgIcon-root-051",
                                        }
                                      }
                                      color="inherit"
                                      component="svg"
                                      fontSize="default"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="MuiSvgIcon-root-051"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                        />
                                        <path
                                          d="M0 0h24v24H0z"
                                          fill="none"
                                        />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ExpandMoreIcon>
                              </pure(ExpandMoreIcon)>
                              <WithStyles(TouchRipple)
                                center={false}
                                innerRef={[Function]}
                              >
                                <TouchRipple
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child-062",
                                      "childLeaving": "MuiTouchRipple-childLeaving-063",
                                      "childPulsate": "MuiTouchRipple-childPulsate-064",
                                      "ripple": "MuiTouchRipple-ripple-059",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-061",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible-060",
                                      "root": "MuiTouchRipple-root-058",
                                    }
                                  }
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    className="MuiTouchRipple-root-058"
                                    component="span"
                                    enter={true}
                                    exit={true}
                                  >
                                    <span
                                      className="MuiTouchRipple-root-058"
                                    />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </div>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </ListItem>
                    </WithStyles(ListItem)>
                    <WithStyles(Collapse)
                      timeout="auto"
                      unmountOnExit={true}
                    >
                      <Collapse
                        classes={
                          Object {
                            "container": "MuiCollapse-container-065",
                            "entered": "MuiCollapse-entered-066",
                            "wrapper": "MuiCollapse-wrapper-067",
                            "wrapperInner": "MuiCollapse-wrapperInner-068",
                          }
                        }
                        collapsedHeight="0px"
                        component="div"
                        theme={
                          Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "hover": "rgba(0, 0, 0, 0.08)",
                                "hoverOpacity": 0.08,
                                "selected": "rgba(0, 0, 0, 0.14)",
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                              "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                              "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                              "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                              "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                              "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                              "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                              "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                              "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                              "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                              "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                              "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                              "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                              "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": Object {
                              "unit": 8,
                            },
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "lineHeight": "1.46429em",
                              },
                              "body2": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "lineHeight": "1.71429em",
                              },
                              "button": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "lineHeight": "1.375em",
                              },
                              "display1": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.20588em",
                              },
                              "display2": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.8125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.13333em",
                                "marginLeft": "-.02em",
                              },
                              "display3": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "-.02em",
                                "lineHeight": "1.30357em",
                                "marginLeft": "-.02em",
                              },
                              "display4": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "7rem",
                                "fontWeight": 300,
                                "letterSpacing": "-.04em",
                                "lineHeight": "1.14286em",
                                "marginLeft": "-.04em",
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "headline": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "lineHeight": "1.35417em",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subheading": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "lineHeight": "1.5em",
                              },
                              "title": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.3125rem",
                                "fontWeight": 500,
                                "lineHeight": "1.16667em",
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "tooltip": 1500,
                            },
                          }
                        }
                        timeout="auto"
                        unmountOnExit={true}
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={true}
                        />
                      </Collapse>
                    </WithStyles(Collapse)>
                  </FacetsFilterListItem>
                </WithStyles(FacetsFilterListItem)>
                <WithStyles(FacetsFilterListItem)
                  className="facetsCategory"
                  facetTitle="Author"
                  id="facet-category-Author"
                  key="5"
                  nestedItems={
                    Array [
                      <WithStyles(FacetsFilterNestedListItem)
                        className="facetsCategoryFilter"
                        disabled={undefined}
                        index={0}
                        isActive={false}
                        onFacetClick={[Function]}
                        primaryText="Schenk, Gerhard (Gary) (1)"
                      />,
                    ]
                  }
                  onToggle={[Function]}
                >
                  <FacetsFilterListItem
                    className="facetsCategory"
                    classes={
                      Object {
                        "listItemGutters": "FacetsFilterListItem-listItemGutters-05",
                      }
                    }
                    facetTitle="Author"
                    id="facet-category-Author"
                    nestedItems={
                      Array [
                        <WithStyles(FacetsFilterNestedListItem)
                          className="facetsCategoryFilter"
                          disabled={undefined}
                          index={0}
                          isActive={false}
                          onFacetClick={[Function]}
                          primaryText="Schenk, Gerhard (Gary) (1)"
                        />,
                      ]
                    }
                    onToggle={[Function]}
                  >
                    <WithStyles(ListItem)
                      button={true}
                      classes={
                        Object {
                          "gutters": "FacetsFilterListItem-listItemGutters-05",
                        }
                      }
                      key="facet_filter_undefined"
                      onClick={[Function]}
                    >
                      <ListItem
                        ContainerComponent="li"
                        button={true}
                        classes={
                          Object {
                            "button": "MuiListItem-button-014",
                            "container": "MuiListItem-container-07",
                            "default": "MuiListItem-default-09",
                            "dense": "MuiListItem-dense-010",
                            "disabled": "MuiListItem-disabled-011",
                            "divider": "MuiListItem-divider-012",
                            "focusVisible": "MuiListItem-focusVisible-08",
                            "gutters": "MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05",
                            "root": "MuiListItem-root-06",
                            "secondaryAction": "MuiListItem-secondaryAction-015",
                            "selected": "MuiListItem-selected-016",
                          }
                        }
                        dense={false}
                        disableGutters={false}
                        disabled={false}
                        divider={false}
                        onClick={[Function]}
                        selected={false}
                      >
                        <WithStyles(ButtonBase)
                          className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                          component="div"
                          disabled={false}
                          focusVisibleClassName="MuiListItem-focusVisible-08"
                          onClick={[Function]}
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-018",
                                "focusVisible": "MuiButtonBase-focusVisible-019",
                                "root": "MuiButtonBase-root-017",
                              }
                            }
                            component="div"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="MuiListItem-focusVisible-08"
                            onClick={[Function]}
                            tabIndex="0"
                            type="button"
                          >
                            <div
                              className="MuiButtonBase-root-017 MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex="0"
                            >
                              <WithStyles(ListItemText)
                                key=".0"
                                primary="Author"
                                primaryTypographyProps={
                                  Object {
                                    "variant": "body2",
                                  }
                                }
                              >
                                <ListItemText
                                  classes={
                                    Object {
                                      "dense": "MuiListItemText-dense-022",
                                      "inset": "MuiListItemText-inset-021",
                                      "primary": "MuiListItemText-primary-023",
                                      "root": "MuiListItemText-root-020",
                                      "secondary": "MuiListItemText-secondary-024",
                                      "textDense": "MuiListItemText-textDense-025",
                                    }
                                  }
                                  disableTypography={false}
                                  inset={false}
                                  primary="Author"
                                  primaryTypographyProps={
                                    Object {
                                      "variant": "body2",
                                    }
                                  }
                                >
                                  <div
                                    className="MuiListItemText-root-020 MuiListItemText-dense-022"
                                  >
                                    <WithStyles(Typography)
                                      className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                      component="span"
                                      variant="body2"
                                    >
                                      <Typography
                                        align="inherit"
                                        className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter-039",
                                            "alignJustify": "MuiTypography-alignJustify-041",
                                            "alignLeft": "MuiTypography-alignLeft-038",
                                            "alignRight": "MuiTypography-alignRight-040",
                                            "body1": "MuiTypography-body1-035",
                                            "body2": "MuiTypography-body2-034",
                                            "button": "MuiTypography-button-037",
                                            "caption": "MuiTypography-caption-036",
                                            "colorError": "MuiTypography-colorError-050",
                                            "colorInherit": "MuiTypography-colorInherit-045",
                                            "colorPrimary": "MuiTypography-colorPrimary-046",
                                            "colorSecondary": "MuiTypography-colorSecondary-047",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary-048",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary-049",
                                            "display1": "MuiTypography-display1-030",
                                            "display2": "MuiTypography-display2-029",
                                            "display3": "MuiTypography-display3-028",
                                            "display4": "MuiTypography-display4-027",
                                            "gutterBottom": "MuiTypography-gutterBottom-043",
                                            "headline": "MuiTypography-headline-031",
                                            "noWrap": "MuiTypography-noWrap-042",
                                            "paragraph": "MuiTypography-paragraph-044",
                                            "root": "MuiTypography-root-026",
                                            "subheading": "MuiTypography-subheading-033",
                                            "title": "MuiTypography-title-032",
                                          }
                                        }
                                        color="default"
                                        component="span"
                                        gutterBottom={false}
                                        headlineMapping={
                                          Object {
                                            "body1": "p",
                                            "body2": "aside",
                                            "display1": "h1",
                                            "display2": "h1",
                                            "display3": "h1",
                                            "display4": "h1",
                                            "headline": "h1",
                                            "subheading": "h3",
                                            "title": "h2",
                                          }
                                        }
                                        noWrap={false}
                                        paragraph={false}
                                        variant="body2"
                                      >
                                        <span
                                          className="MuiTypography-root-026 MuiTypography-body2-034 MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        >
                                          Author
                                        </span>
                                      </Typography>
                                    </WithStyles(Typography)>
                                  </div>
                                </ListItemText>
                              </WithStyles(ListItemText)>
                              <pure(ExpandMoreIcon)
                                key=".1"
                              >
                                <ExpandMoreIcon>
                                  <WithStyles(SvgIcon)>
                                    <SvgIcon
                                      classes={
                                        Object {
                                          "colorAction": "MuiSvgIcon-colorAction-054",
                                          "colorDisabled": "MuiSvgIcon-colorDisabled-056",
                                          "colorError": "MuiSvgIcon-colorError-055",
                                          "colorPrimary": "MuiSvgIcon-colorPrimary-052",
                                          "colorSecondary": "MuiSvgIcon-colorSecondary-053",
                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-057",
                                          "root": "MuiSvgIcon-root-051",
                                        }
                                      }
                                      color="inherit"
                                      component="svg"
                                      fontSize="default"
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="MuiSvgIcon-root-051"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                        />
                                        <path
                                          d="M0 0h24v24H0z"
                                          fill="none"
                                        />
                                      </svg>
                                    </SvgIcon>
                                  </WithStyles(SvgIcon)>
                                </ExpandMoreIcon>
                              </pure(ExpandMoreIcon)>
                              <WithStyles(TouchRipple)
                                center={false}
                                innerRef={[Function]}
                              >
                                <TouchRipple
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child-062",
                                      "childLeaving": "MuiTouchRipple-childLeaving-063",
                                      "childPulsate": "MuiTouchRipple-childPulsate-064",
                                      "ripple": "MuiTouchRipple-ripple-059",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-061",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible-060",
                                      "root": "MuiTouchRipple-root-058",
                                    }
                                  }
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    className="MuiTouchRipple-root-058"
                                    component="span"
                                    enter={true}
                                    exit={true}
                                  >
                                    <span
                                      className="MuiTouchRipple-root-058"
                                    />
                                  </TransitionGroup>
                                </TouchRipple>
                              </WithStyles(TouchRipple)>
                            </div>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </ListItem>
                    </WithStyles(ListItem)>
                    <WithStyles(Collapse)
                      timeout="auto"
                      unmountOnExit={true}
                    >
                      <Collapse
                        classes={
                          Object {
                            "container": "MuiCollapse-container-065",
                            "entered": "MuiCollapse-entered-066",
                            "wrapper": "MuiCollapse-wrapper-067",
                            "wrapperInner": "MuiCollapse-wrapperInner-068",
                          }
                        }
                        collapsedHeight="0px"
                        component="div"
                        theme={
                          Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "only": [Function],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                              "width": [Function],
                            },
                            "direction": "ltr",
                            "mixins": Object {
                              "gutters": [Function],
                              "toolbar": Object {
                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                  "minHeight": 48,
                                },
                                "@media (min-width:600px)": Object {
                                  "minHeight": 64,
                                },
                                "minHeight": 56,
                              },
                            },
                            "overrides": Object {},
                            "palette": Object {
                              "action": Object {
                                "active": "rgba(0, 0, 0, 0.54)",
                                "disabled": "rgba(0, 0, 0, 0.26)",
                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                "hover": "rgba(0, 0, 0, 0.08)",
                                "hoverOpacity": 0.08,
                                "selected": "rgba(0, 0, 0, 0.14)",
                              },
                              "augmentColor": [Function],
                              "background": Object {
                                "default": "#fafafa",
                                "paper": "#fff",
                              },
                              "common": Object {
                                "black": "#000",
                                "white": "#fff",
                              },
                              "contrastThreshold": 3,
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "error": Object {
                                "contrastText": "#fff",
                                "dark": "#d32f2f",
                                "light": "#e57373",
                                "main": "#f44336",
                              },
                              "getContrastText": [Function],
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "contrastText": "#fff",
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "contrastText": "#fff",
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "hint": "rgba(0, 0, 0, 0.38)",
                                "primary": "rgba(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                              "tonalOffset": 0.2,
                              "type": "light",
                            },
                            "props": Object {},
                            "shadows": Array [
                              "none",
                              "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                              "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                              "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                              "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                              "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                              "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                              "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                              "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                              "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                              "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                              "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                              "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                              "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                              "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                              "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                              "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                              "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                            ],
                            "shape": Object {
                              "borderRadius": 4,
                            },
                            "spacing": Object {
                              "unit": 8,
                            },
                            "transitions": Object {
                              "create": [Function],
                              "duration": Object {
                                "complex": 375,
                                "enteringScreen": 225,
                                "leavingScreen": 195,
                                "short": 250,
                                "shorter": 200,
                                "shortest": 150,
                                "standard": 300,
                              },
                              "easing": Object {
                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                              },
                              "getAutoHeightDuration": [Function],
                            },
                            "typography": Object {
                              "body1": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 400,
                                "lineHeight": "1.46429em",
                              },
                              "body2": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "lineHeight": "1.71429em",
                              },
                              "button": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.875rem",
                                "fontWeight": 500,
                                "textTransform": "uppercase",
                              },
                              "caption": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "0.75rem",
                                "fontWeight": 400,
                                "lineHeight": "1.375em",
                              },
                              "display1": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.20588em",
                              },
                              "display2": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "2.8125rem",
                                "fontWeight": 400,
                                "lineHeight": "1.13333em",
                                "marginLeft": "-.02em",
                              },
                              "display3": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "3.5rem",
                                "fontWeight": 400,
                                "letterSpacing": "-.02em",
                                "lineHeight": "1.30357em",
                                "marginLeft": "-.02em",
                              },
                              "display4": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "7rem",
                                "fontWeight": 300,
                                "letterSpacing": "-.04em",
                                "lineHeight": "1.14286em",
                                "marginLeft": "-.04em",
                              },
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": 14,
                              "fontWeightLight": 300,
                              "fontWeightMedium": 500,
                              "fontWeightRegular": 400,
                              "headline": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.5rem",
                                "fontWeight": 400,
                                "lineHeight": "1.35417em",
                              },
                              "pxToRem": [Function],
                              "round": [Function],
                              "subheading": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1rem",
                                "fontWeight": 400,
                                "lineHeight": "1.5em",
                              },
                              "title": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": "1.3125rem",
                                "fontWeight": 500,
                                "lineHeight": "1.16667em",
                              },
                            },
                            "zIndex": Object {
                              "appBar": 1100,
                              "drawer": 1200,
                              "mobileStepper": 1000,
                              "modal": 1300,
                              "snackbar": 1400,
                              "tooltip": 1500,
                            },
                          }
                        }
                        timeout="auto"
                        unmountOnExit={true}
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={true}
                        />
                      </Collapse>
                    </WithStyles(Collapse)>
                  </FacetsFilterListItem>
                </WithStyles(FacetsFilterListItem)>
                <DateRange
                  defaultValue={
                    Object {
                      "from": 2007,
                      "to": 2022,
                    }
                  }
                  locale={
                    Object {
                      "displayTitle": "Published year range",
                      "fromFieldLabel": "From",
                      "rangeSubmitButtonLabel": "Go",
                      "toFieldLabel": "To",
                    }
                  }
                  onChange={[Function]}
                  onToggle={[Function]}
                  value={Object {}}
                >
                  <WithStyles(FacetsFilterListItem)
                    facetTitle="Published year range"
                    key="date-range"
                    nestedItems={
                      <div
                        style={
                          Object {
                            "padding": 8,
                          }
                        }
                      >
                        <WithStyles(Grid)
                          alignItems="flex-end"
                          container={true}
                          spacing={16}
                          wrap="nowrap"
                        >
                          <WithStyles(Grid)
                            item={true}
                            xs={4}
                          >
                            <TextField
                              disabled={undefined}
                              fullWidth={true}
                              label="From"
                              onChange={[Function]}
                              required={false}
                              select={false}
                              type="number"
                              value={2007}
                            />
                          </WithStyles(Grid)>
                          <WithStyles(Grid)
                            item={true}
                            xs={4}
                          >
                            <TextField
                              disabled={undefined}
                              fullWidth={true}
                              label="To"
                              onChange={[Function]}
                              required={false}
                              select={false}
                              type="number"
                              value={2022}
                            />
                          </WithStyles(Grid)>
                          <WithStyles(Grid)
                            item={true}
                          >
                            <WithStyles(Button)
                              disabled={false}
                              fullWidth={true}
                              onClick={[Function]}
                              variant="flat"
                            >
                              Go
                            </WithStyles(Button)>
                          </WithStyles(Grid)>
                        </WithStyles(Grid)>
                      </div>
                    }
                    onToggle={[Function]}
                  >
                    <FacetsFilterListItem
                      classes={
                        Object {
                          "listItemGutters": "FacetsFilterListItem-listItemGutters-05",
                        }
                      }
                      facetTitle="Published year range"
                      nestedItems={
                        <div
                          style={
                            Object {
                              "padding": 8,
                            }
                          }
                        >
                          <WithStyles(Grid)
                            alignItems="flex-end"
                            container={true}
                            spacing={16}
                            wrap="nowrap"
                          >
                            <WithStyles(Grid)
                              item={true}
                              xs={4}
                            >
                              <TextField
                                disabled={undefined}
                                fullWidth={true}
                                label="From"
                                onChange={[Function]}
                                required={false}
                                select={false}
                                type="number"
                                value={2007}
                              />
                            </WithStyles(Grid)>
                            <WithStyles(Grid)
                              item={true}
                              xs={4}
                            >
                              <TextField
                                disabled={undefined}
                                fullWidth={true}
                                label="To"
                                onChange={[Function]}
                                required={false}
                                select={false}
                                type="number"
                                value={2022}
                              />
                            </WithStyles(Grid)>
                            <WithStyles(Grid)
                              item={true}
                            >
                              <WithStyles(Button)
                                disabled={false}
                                fullWidth={true}
                                onClick={[Function]}
                                variant="flat"
                              >
                                Go
                              </WithStyles(Button)>
                            </WithStyles(Grid)>
                          </WithStyles(Grid)>
                        </div>
                      }
                      onToggle={[Function]}
                    >
                      <WithStyles(ListItem)
                        button={true}
                        classes={
                          Object {
                            "gutters": "FacetsFilterListItem-listItemGutters-05",
                          }
                        }
                        key="facet_filter_undefined"
                        onClick={[Function]}
                      >
                        <ListItem
                          ContainerComponent="li"
                          button={true}
                          classes={
                            Object {
                              "button": "MuiListItem-button-014",
                              "container": "MuiListItem-container-07",
                              "default": "MuiListItem-default-09",
                              "dense": "MuiListItem-dense-010",
                              "disabled": "MuiListItem-disabled-011",
                              "divider": "MuiListItem-divider-012",
                              "focusVisible": "MuiListItem-focusVisible-08",
                              "gutters": "MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05",
                              "root": "MuiListItem-root-06",
                              "secondaryAction": "MuiListItem-secondaryAction-015",
                              "selected": "MuiListItem-selected-016",
                            }
                          }
                          dense={false}
                          disableGutters={false}
                          disabled={false}
                          divider={false}
                          onClick={[Function]}
                          selected={false}
                        >
                          <WithStyles(ButtonBase)
                            className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                            component="div"
                            disabled={false}
                            focusVisibleClassName="MuiListItem-focusVisible-08"
                            onClick={[Function]}
                          >
                            <ButtonBase
                              centerRipple={false}
                              className="MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                              classes={
                                Object {
                                  "disabled": "MuiButtonBase-disabled-018",
                                  "focusVisible": "MuiButtonBase-focusVisible-019",
                                  "root": "MuiButtonBase-root-017",
                                }
                              }
                              component="div"
                              disableRipple={false}
                              disableTouchRipple={false}
                              disabled={false}
                              focusRipple={false}
                              focusVisibleClassName="MuiListItem-focusVisible-08"
                              onClick={[Function]}
                              tabIndex="0"
                              type="button"
                            >
                              <div
                                className="MuiButtonBase-root-017 MuiListItem-root-06 MuiListItem-default-09 MuiListItem-dense-010 MuiListItem-gutters-013 FacetsFilterListItem-listItemGutters-05 MuiListItem-button-014"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                role="button"
                                tabIndex="0"
                              >
                                <WithStyles(ListItemText)
                                  key=".0"
                                  primary="Published year range"
                                  primaryTypographyProps={
                                    Object {
                                      "variant": "body2",
                                    }
                                  }
                                >
                                  <ListItemText
                                    classes={
                                      Object {
                                        "dense": "MuiListItemText-dense-022",
                                        "inset": "MuiListItemText-inset-021",
                                        "primary": "MuiListItemText-primary-023",
                                        "root": "MuiListItemText-root-020",
                                        "secondary": "MuiListItemText-secondary-024",
                                        "textDense": "MuiListItemText-textDense-025",
                                      }
                                    }
                                    disableTypography={false}
                                    inset={false}
                                    primary="Published year range"
                                    primaryTypographyProps={
                                      Object {
                                        "variant": "body2",
                                      }
                                    }
                                  >
                                    <div
                                      className="MuiListItemText-root-020 MuiListItemText-dense-022"
                                    >
                                      <WithStyles(Typography)
                                        className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                        component="span"
                                        variant="body2"
                                      >
                                        <Typography
                                          align="inherit"
                                          className="MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter-039",
                                              "alignJustify": "MuiTypography-alignJustify-041",
                                              "alignLeft": "MuiTypography-alignLeft-038",
                                              "alignRight": "MuiTypography-alignRight-040",
                                              "body1": "MuiTypography-body1-035",
                                              "body2": "MuiTypography-body2-034",
                                              "button": "MuiTypography-button-037",
                                              "caption": "MuiTypography-caption-036",
                                              "colorError": "MuiTypography-colorError-050",
                                              "colorInherit": "MuiTypography-colorInherit-045",
                                              "colorPrimary": "MuiTypography-colorPrimary-046",
                                              "colorSecondary": "MuiTypography-colorSecondary-047",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary-048",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary-049",
                                              "display1": "MuiTypography-display1-030",
                                              "display2": "MuiTypography-display2-029",
                                              "display3": "MuiTypography-display3-028",
                                              "display4": "MuiTypography-display4-027",
                                              "gutterBottom": "MuiTypography-gutterBottom-043",
                                              "headline": "MuiTypography-headline-031",
                                              "noWrap": "MuiTypography-noWrap-042",
                                              "paragraph": "MuiTypography-paragraph-044",
                                              "root": "MuiTypography-root-026",
                                              "subheading": "MuiTypography-subheading-033",
                                              "title": "MuiTypography-title-032",
                                            }
                                          }
                                          color="default"
                                          component="span"
                                          gutterBottom={false}
                                          headlineMapping={
                                            Object {
                                              "body1": "p",
                                              "body2": "aside",
                                              "display1": "h1",
                                              "display2": "h1",
                                              "display3": "h1",
                                              "display4": "h1",
                                              "headline": "h1",
                                              "subheading": "h3",
                                              "title": "h2",
                                            }
                                          }
                                          noWrap={false}
                                          paragraph={false}
                                          variant="body2"
                                        >
                                          <span
                                            className="MuiTypography-root-026 MuiTypography-body2-034 MuiListItemText-primary-023 MuiListItemText-textDense-025"
                                          >
                                            Published year range
                                          </span>
                                        </Typography>
                                      </WithStyles(Typography)>
                                    </div>
                                  </ListItemText>
                                </WithStyles(ListItemText)>
                                <pure(ExpandMoreIcon)
                                  key=".1"
                                >
                                  <ExpandMoreIcon>
                                    <WithStyles(SvgIcon)>
                                      <SvgIcon
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction-054",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled-056",
                                            "colorError": "MuiSvgIcon-colorError-055",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary-052",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary-053",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-057",
                                            "root": "MuiSvgIcon-root-051",
                                          }
                                        }
                                        color="inherit"
                                        component="svg"
                                        fontSize="default"
                                        viewBox="0 0 24 24"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root-051"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                                          />
                                          <path
                                            d="M0 0h24v24H0z"
                                            fill="none"
                                          />
                                        </svg>
                                      </SvgIcon>
                                    </WithStyles(SvgIcon)>
                                  </ExpandMoreIcon>
                                </pure(ExpandMoreIcon)>
                                <WithStyles(TouchRipple)
                                  center={false}
                                  innerRef={[Function]}
                                >
                                  <TouchRipple
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child-062",
                                        "childLeaving": "MuiTouchRipple-childLeaving-063",
                                        "childPulsate": "MuiTouchRipple-childPulsate-064",
                                        "ripple": "MuiTouchRipple-ripple-059",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate-061",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible-060",
                                        "root": "MuiTouchRipple-root-058",
                                      }
                                    }
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      className="MuiTouchRipple-root-058"
                                      component="span"
                                      enter={true}
                                      exit={true}
                                    >
                                      <span
                                        className="MuiTouchRipple-root-058"
                                      />
                                    </TransitionGroup>
                                  </TouchRipple>
                                </WithStyles(TouchRipple)>
                              </div>
                            </ButtonBase>
                          </WithStyles(ButtonBase)>
                        </ListItem>
                      </WithStyles(ListItem)>
                      <WithStyles(Collapse)
                        timeout="auto"
                        unmountOnExit={true}
                      >
                        <Collapse
                          classes={
                            Object {
                              "container": "MuiCollapse-container-065",
                              "entered": "MuiCollapse-entered-066",
                              "wrapper": "MuiCollapse-wrapper-067",
                              "wrapperInner": "MuiCollapse-wrapperInner-068",
                            }
                          }
                          collapsedHeight="0px"
                          component="div"
                          theme={
                            Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "only": [Function],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                                "width": [Function],
                              },
                              "direction": "ltr",
                              "mixins": Object {
                                "gutters": [Function],
                                "toolbar": Object {
                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                    "minHeight": 48,
                                  },
                                  "@media (min-width:600px)": Object {
                                    "minHeight": 64,
                                  },
                                  "minHeight": 56,
                                },
                              },
                              "overrides": Object {},
                              "palette": Object {
                                "action": Object {
                                  "active": "rgba(0, 0, 0, 0.54)",
                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                  "hover": "rgba(0, 0, 0, 0.08)",
                                  "hoverOpacity": 0.08,
                                  "selected": "rgba(0, 0, 0, 0.14)",
                                },
                                "augmentColor": [Function],
                                "background": Object {
                                  "default": "#fafafa",
                                  "paper": "#fff",
                                },
                                "common": Object {
                                  "black": "#000",
                                  "white": "#fff",
                                },
                                "contrastThreshold": 3,
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "error": Object {
                                  "contrastText": "#fff",
                                  "dark": "#d32f2f",
                                  "light": "#e57373",
                                  "main": "#f44336",
                                },
                                "getContrastText": [Function],
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "contrastText": "#fff",
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "contrastText": "#fff",
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "hint": "rgba(0, 0, 0, 0.38)",
                                  "primary": "rgba(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                                "tonalOffset": 0.2,
                                "type": "light",
                              },
                              "props": Object {},
                              "shadows": Array [
                                "none",
                                "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                                "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                                "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                                "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                                "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                                "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                                "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                                "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                                "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                                "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                                "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                                "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                                "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                                "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                                "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                                "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                                "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                                "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                              ],
                              "shape": Object {
                                "borderRadius": 4,
                              },
                              "spacing": Object {
                                "unit": 8,
                              },
                              "transitions": Object {
                                "create": [Function],
                                "duration": Object {
                                  "complex": 375,
                                  "enteringScreen": 225,
                                  "leavingScreen": 195,
                                  "short": 250,
                                  "shorter": 200,
                                  "shortest": 150,
                                  "standard": 300,
                                },
                                "easing": Object {
                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                },
                                "getAutoHeightDuration": [Function],
                              },
                              "typography": Object {
                                "body1": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.46429em",
                                },
                                "body2": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.71429em",
                                },
                                "button": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "textTransform": "uppercase",
                                },
                                "caption": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.375em",
                                },
                                "display1": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.20588em",
                                },
                                "display2": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.8125rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.13333em",
                                  "marginLeft": "-.02em",
                                },
                                "display3": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "-.02em",
                                  "lineHeight": "1.30357em",
                                  "marginLeft": "-.02em",
                                },
                                "display4": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "7rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-.04em",
                                  "lineHeight": "1.14286em",
                                  "marginLeft": "-.04em",
                                },
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": 14,
                                "fontWeightLight": 300,
                                "fontWeightMedium": 500,
                                "fontWeightRegular": 400,
                                "headline": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.35417em",
                                },
                                "pxToRem": [Function],
                                "round": [Function],
                                "subheading": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "lineHeight": "1.5em",
                                },
                                "title": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.3125rem",
                                  "fontWeight": 500,
                                  "lineHeight": "1.16667em",
                                },
                              },
                              "zIndex": Object {
                                "appBar": 1100,
                                "drawer": 1200,
                                "mobileStepper": 1000,
                                "modal": 1300,
                                "snackbar": 1400,
                                "tooltip": 1500,
                              },
                            }
                          }
                          timeout="auto"
                          unmountOnExit={true}
                        >
                          <Transition
                            addEndListener={[Function]}
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={null}
                            unmountOnExit={true}
                          />
                        </Collapse>
                      </WithStyles(Collapse)>
                    </FacetsFilterListItem>
                  </WithStyles(FacetsFilterListItem)>
                </DateRange>
              </nav>
            </List>
          </WithStyles(List)>
          <div
            className="columns"
          >
            <div
              className="column is-hidden-mobile"
            />
            <div
              className="column is-narrow-tablet"
            >
              <RaisedButton
                disabled={false}
                fullWidth={true}
                label="Reset"
                labelPosition="after"
                onClick={[Function]}
                primary={false}
                secondary={false}
              >
                <Paper
                  circle={false}
                  rounded={true}
                  style={
                    Object {
                      "display": "inline-block",
                      "minWidth": "100%",
                      "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                    }
                  }
                  transitionEnabled={true}
                  zDepth={1}
                >
                  <div
                    style={
                      Object {
                        "WebkitTapHighlightColor": "rgba(0,0,0,0)",
                        "backgroundColor": "#ffffff",
                        "borderRadius": 2,
                        "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
         0 1px 4px rgba(0, 0, 0, 0.12)",
                        "boxSizing": "border-box",
                        "color": "rgba(0, 0, 0, 0.87)",
                        "display": "inline-block",
                        "fontFamily": "Roboto, sans-serif",
                        "minWidth": "100%",
                        "muiPrepared": true,
                        "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                      }
                    }
                  >
                    <EnhancedButton
                      containerElement="button"
                      disabled={false}
                      focusRippleColor="rgba(0, 0, 0, 0.87)"
                      focusRippleOpacity={0.1}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onKeyboardFocus={[Function]}
                      onMouseDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderRadius": 2,
                          "height": 36,
                          "lineHeight": "36px",
                          "padding": 0,
                          "textAlign": "center",
                          "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                          "width": "100%",
                        }
                      }
                      tabIndex={0}
                      touchRippleColor="rgba(0, 0, 0, 0.87)"
                      touchRippleOpacity={0.1}
                      type="button"
                    >
                      <button
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchStart={[Function]}
                        style={
                          Object {
                            "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                            "backgroundColor": "#ffffff",
                            "border": 10,
                            "borderRadius": 2,
                            "boxSizing": "border-box",
                            "cursor": "pointer",
                            "display": "inline-block",
                            "fontFamily": "Roboto, sans-serif",
                            "fontSize": "inherit",
                            "fontWeight": "inherit",
                            "height": 36,
                            "lineHeight": "36px",
                            "margin": 0,
                            "muiPrepared": true,
                            "outline": "none",
                            "padding": 0,
                            "position": "relative",
                            "textAlign": "center",
                            "textDecoration": "none",
                            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                            "verticalAlign": null,
                            "width": "100%",
                          }
                        }
                        tabIndex={0}
                        type="button"
                      >
                        <TouchRipple
                          abortOnScroll={true}
                          color="rgba(0, 0, 0, 0.87)"
                          key="touchRipple"
                          opacity={0.1}
                        >
                          <div
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchStart={[Function]}
                          >
                            <div
                              style={
                                Object {
                                  "backgroundColor": false,
                                  "borderRadius": 2,
                                  "height": 36,
                                  "muiPrepared": true,
                                  "top": 0,
                                  "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                }
                              }
                            >
                              <span
                                key="labelElement"
                                style={
                                  Object {
                                    "color": "rgba(0, 0, 0, 0.87)",
                                    "fontSize": 14,
                                    "fontWeight": 500,
                                    "letterSpacing": 0,
                                    "margin": 0,
                                    "muiPrepared": true,
                                    "opacity": 1,
                                    "paddingLeft": 16,
                                    "paddingRight": 16,
                                    "position": "relative",
                                    "textTransform": "uppercase",
                                    "userSelect": "none",
                                  }
                                }
                              >
                                Reset
                              </span>
                            </div>
                          </div>
                        </TouchRipple>
                      </button>
                    </EnhancedButton>
                  </div>
                </Paper>
              </RaisedButton>
            </div>
          </div>
        </div>
      </FacetsFilter>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`FacetsFilter  components for mock data with disabled flag set 1`] = `
<div
  className="facetsFilter"
>
  <WithStyles(List)
    component="nav"
    dense={true}
  >
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      disabled={true}
      facetTitle="Display type"
      id="facet-category-Display-type"
      key="0"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={true}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Journal Article (2)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      disabled={true}
      facetTitle="Keywords"
      id="facet-category-Keywords"
      key="1"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={true}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Applied Microbiology and Biotechnology (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={true}
            index={1}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Biochemistry (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={true}
            index={2}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Bioengineering (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={true}
            index={3}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Biomaterials (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={true}
            index={4}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Biomedical Engineering (1)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      disabled={true}
      facetTitle="Year published"
      id="facet-category-Year-published"
      key="2"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={true}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="2017 (2)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      disabled={true}
      facetTitle="Journal name"
      id="facet-category-Journal-name"
      key="3"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={true}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Metallomics (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={true}
            index={1}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Nature biotechnology (1)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      disabled={true}
      facetTitle="Collection"
      id="facet-category-Collection"
      key="4"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={true}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Crossref Import (2)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      disabled={true}
      facetTitle="Author"
      id="facet-category-Author"
      key="5"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={true}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Schenk, Gerhard (Gary) (1)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <DateRange
      defaultValue={
        Object {
          "from": 2007,
          "to": 2022,
        }
      }
      disabled={true}
      locale={
        Object {
          "displayTitle": "Published year range",
          "fromFieldLabel": "From",
          "rangeSubmitButtonLabel": "Go",
          "toFieldLabel": "To",
        }
      }
      onChange={[Function]}
      onToggle={[Function]}
      value={Object {}}
    />
  </WithStyles(List)>
</div>
`;

exports[`FacetsFilter  components for mock data with excluded facets 1`] = `
<div
  className="facetsFilter"
>
  <WithStyles(List)
    component="nav"
    dense={true}
  >
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Keywords"
      id="facet-category-Keywords"
      key="0"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Applied Microbiology and Biotechnology (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={1}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Biochemistry (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={2}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Bioengineering (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={3}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Biomaterials (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={4}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Biomedical Engineering (1)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Year published"
      id="facet-category-Year-published"
      key="1"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="2017 (2)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Journal name"
      id="facet-category-Journal-name"
      key="2"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Metallomics (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={1}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Nature biotechnology (1)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Collection"
      id="facet-category-Collection"
      key="3"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Crossref Import (2)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Author"
      id="facet-category-Author"
      key="4"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Schenk, Gerhard (Gary) (1)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <DateRange
      defaultValue={
        Object {
          "from": 2007,
          "to": 2022,
        }
      }
      locale={
        Object {
          "displayTitle": "Published year range",
          "fromFieldLabel": "From",
          "rangeSubmitButtonLabel": "Go",
          "toFieldLabel": "To",
        }
      }
      onChange={[Function]}
      onToggle={[Function]}
      value={Object {}}
    />
  </WithStyles(List)>
</div>
`;

exports[`FacetsFilter  renders empty component for empty data 1`] = `
<span
  className="facetsFilter empty"
/>
`;

exports[`FacetsFilter  renders filter for open access 1`] = `
<div
  className="facetsFilter"
>
  <WithStyles(List)
    component="nav"
    dense={true}
  >
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Display type"
      id="facet-category-Display-type"
      key="0"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Journal Article (2)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Keywords"
      id="facet-category-Keywords"
      key="1"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Applied Microbiology and Biotechnology (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={1}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Biochemistry (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={2}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Bioengineering (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={3}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Biomaterials (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={4}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Biomedical Engineering (1)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Year published"
      id="facet-category-Year-published"
      key="2"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="2017 (2)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Journal name"
      id="facet-category-Journal-name"
      key="3"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Metallomics (1)"
          />,
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={1}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Nature biotechnology (1)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Collection"
      id="facet-category-Collection"
      key="4"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Crossref Import (2)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <WithStyles(FacetsFilterListItem)
      className="facetsCategory"
      facetTitle="Author"
      id="facet-category-Author"
      key="5"
      nestedItems={
        Array [
          <WithStyles(FacetsFilterNestedListItem)
            className="facetsCategoryFilter"
            disabled={undefined}
            index={0}
            isActive={false}
            onFacetClick={[Function]}
            primaryText="Schenk, Gerhard (Gary) (1)"
          />,
        ]
      }
      onToggle={[Function]}
    />
    <DateRange
      defaultValue={
        Object {
          "from": 2007,
          "to": 2022,
        }
      }
      locale={
        Object {
          "displayTitle": "Published year range",
          "fromFieldLabel": "From",
          "rangeSubmitButtonLabel": "Go",
          "toFieldLabel": "To",
        }
      }
      onChange={[Function]}
      onToggle={[Function]}
      value={Object {}}
    />
    <OpenAccessFilter
      locale={
        Object {
          "activeFilter": "Show only open access records",
          "displayTitle": "Open access status",
        }
      }
      onChange={[Function]}
      onToggle={[Function]}
    />
  </WithStyles(List)>
</div>
`;
