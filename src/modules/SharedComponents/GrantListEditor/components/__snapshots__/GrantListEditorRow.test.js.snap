// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GrantListEditorRow should have a proper style generator 1`] = `
Object {
  "hideIcon": Object {
    "display": "none",
  },
  "identifierName": Object {
    "&:before": Object {
      "content": "\\"UQ Id: \\"",
    },
    "fontSize": "test4",
    "marginTop": 8,
  },
  "identifierSubtitle": Object {
    "&:before": Object {
      "content": "\\"UQ Username: \\"",
    },
    "fontSize": "test4",
  },
  "primary": Object {
    "fontSize": "test3",
  },
  "rowSelected": Object {
    "backgroundColor": "test1",
  },
  "selected": Object {
    "color": "white !important",
    "fontWeight": "test2",
  },
}
`;

exports[`GrantListEditorRow should have a proper style generator 2`] = `
Object {
  "hideIcon": Object {
    "display": "none",
  },
  "identifierName": Object {
    "&:before": Object {
      "content": "\\"UQ Id: \\"",
    },
    "fontSize": "test4",
    "marginTop": 8,
  },
  "identifierSubtitle": Object {
    "&:before": Object {
      "content": "\\"UQ Username: \\"",
    },
    "fontSize": "test4",
  },
  "primary": Object {
    "fontSize": "test3",
  },
  "rowSelected": Object {
    "backgroundColor": undefined,
  },
  "selected": Object {
    "color": "white !important",
    "fontWeight": "test2",
  },
}
`;

exports[`GrantListEditorRow should have a proper style generator 3`] = `
Object {
  "hideIcon": Object {
    "display": "none",
  },
  "identifierName": Object {
    "&:before": Object {
      "content": "\\"UQ Id: \\"",
    },
    "fontSize": "test4",
    "marginTop": 8,
  },
  "identifierSubtitle": Object {
    "&:before": Object {
      "content": "\\"UQ Username: \\"",
    },
    "fontSize": "test4",
  },
  "primary": Object {
    "fontSize": "test3",
  },
  "rowSelected": Object {
    "backgroundColor": undefined,
  },
  "selected": Object {
    "color": "white !important",
    "fontWeight": "test2",
  },
}
`;

exports[`GrantListEditorRow should render default mobile view 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    onAction={[Function]}
    onRef={[Function]}
  />
  <WithStyles(ListItem)
    aria-label={null}
    divider={true}
    style={
      Object {
        "padding": "8px 0 8px 0",
      }
    }
  >
    <WithStyles(Grid)
      container={true}
      spacing={0}
    >
      <WithStyles(Grid)
        item={true}
        xs={10}
      >
        <WithStyles(Grid)
          alignContent="center"
          alignItems="stretch"
          container={true}
          spacing={0}
        >
          <WithStyles(Grid)
            item={true}
            xs={12}
          >
            <WithStyles(ListItemText)
              disableTypography={true}
              primary={
                <WithStyles(Typography)
                  classes={
                    Object {
                      "root": "undefined ",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                />
              }
              secondary={
                <WithStyles(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </WithStyles(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </WithStyles(Grid)>
          <Hidden
            implementation="js"
            lgDown={false}
            lgUp={false}
            mdDown={false}
            mdUp={false}
            smDown={false}
            smUp={false}
            xlDown={false}
            xlUp={false}
            xsDown={true}
            xsUp={false}
          >
            <WithStyles(Grid)
              item={true}
              xs={5}
            >
              <WithStyles(ListItemText)
                disableTypography={true}
                primary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "undefined ",
                      }
                    }
                    noWrap={true}
                    variant="body2"
                  >
                    undefined
                  </WithStyles(Typography)>
                }
                secondary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "",
                      }
                    }
                    noWrap={true}
                    variant="caption"
                  >
                    
                  </WithStyles(Typography)>
                }
                style={
                  Object {
                    "padding": 0,
                  }
                }
              />
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
              xs={4}
            >
              <WithStyles(ListItemText)
                disableTypography={true}
                primary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "undefined ",
                      }
                    }
                    noWrap={true}
                    variant="body2"
                  >
                    
                  </WithStyles(Typography)>
                }
                secondary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "",
                      }
                    }
                    noWrap={true}
                    variant="caption"
                  >
                    
                  </WithStyles(Typography)>
                }
                style={
                  Object {
                    "padding": 0,
                  }
                }
              />
            </WithStyles(Grid)>
          </Hidden>
        </WithStyles(Grid)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={2}
      >
        <WithStyles(ListItemSecondaryAction)
          style={
            Object {
              "margin": "0 0 -32px 0",
              "position": "relative",
              "width": "100%",
            }
          }
        >
          <WithStyles(Grid)
            container={true}
            spacing={0}
          >
            <Hidden
              implementation="js"
              lgDown={false}
              lgUp={false}
              mdDown={false}
              mdUp={false}
              smDown={true}
              smUp={false}
              xlDown={false}
              xlUp={false}
              xsDown={false}
              xsUp={false}
            >
              <WithStyles(Grid)
                item={true}
                style={
                  Object {
                    "textAlign": "right",
                  }
                }
                xs={8}
              >
                <WithStyles(Tooltip)
                  disableFocusListener={true}
                  disableHoverListener={true}
                  disableTouchListener={true}
                >
                  <div
                    style={
                      Object {
                        "display": "inline",
                      }
                    }
                  >
                    <WithStyles(IconButton)
                      disabled={true}
                      onClick={[Function]}
                    >
                      <pure(KeyboardArrowUpIcon)
                        classes={
                          Object {
                            "root": "",
                          }
                        }
                      />
                    </WithStyles(IconButton)>
                  </div>
                </WithStyles(Tooltip)>
                <WithStyles(Tooltip)
                  disableFocusListener={true}
                  disableHoverListener={true}
                  disableTouchListener={true}
                >
                  <div
                    style={
                      Object {
                        "display": "inline",
                      }
                    }
                  >
                    <WithStyles(IconButton)
                      disabled={true}
                      onClick={[Function]}
                    >
                      <pure(KeyboardArrowDownIcon)
                        classes={
                          Object {
                            "root": "",
                          }
                        }
                      />
                    </WithStyles(IconButton)>
                  </div>
                </WithStyles(Tooltip)>
              </WithStyles(Grid)>
            </Hidden>
            <WithStyles(Grid)
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              xs={12}
            >
              <WithStyles(Tooltip)
                disableFocusListener={false}
                disableHoverListener={false}
                disableTouchListener={false}
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <WithStyles(IconButton)
                    disabled={false}
                    onClick={[Function]}
                  >
                    <pure(DeleteIcon) />
                  </WithStyles(IconButton)>
                </div>
              </WithStyles(Tooltip)>
            </WithStyles(Grid)>
          </WithStyles(Grid)>
        </WithStyles(ListItemSecondaryAction)>
      </WithStyles(Grid)>
    </WithStyles(Grid)>
  </WithStyles(ListItem)>
</Fragment>
`;

exports[`GrantListEditorRow should render default view 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    onAction={[Function]}
    onRef={[Function]}
  />
  <WithStyles(ListItem)
    aria-label={null}
    divider={true}
    style={
      Object {
        "padding": "8px 0 8px 0",
      }
    }
  >
    <WithStyles(Grid)
      container={true}
      spacing={0}
    >
      <WithStyles(Grid)
        item={true}
        xs={9}
      >
        <WithStyles(Grid)
          alignContent="center"
          alignItems="stretch"
          container={true}
          spacing={0}
        >
          <WithStyles(Grid)
            item={true}
            xs={5}
          >
            <WithStyles(ListItemText)
              disableTypography={true}
              primary={
                <WithStyles(Typography)
                  classes={
                    Object {
                      "root": "undefined ",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                />
              }
              secondary={
                <WithStyles(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </WithStyles(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </WithStyles(Grid)>
          <Hidden
            implementation="js"
            lgDown={false}
            lgUp={false}
            mdDown={false}
            mdUp={false}
            smDown={false}
            smUp={false}
            xlDown={false}
            xlUp={false}
            xsDown={true}
            xsUp={false}
          >
            <WithStyles(Grid)
              item={true}
              xs={4}
            >
              <WithStyles(ListItemText)
                disableTypography={true}
                primary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "undefined ",
                      }
                    }
                    noWrap={true}
                    variant="body2"
                  >
                    undefined
                  </WithStyles(Typography)>
                }
                secondary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "",
                      }
                    }
                    noWrap={true}
                    variant="caption"
                  >
                    
                  </WithStyles(Typography)>
                }
                style={
                  Object {
                    "padding": 0,
                  }
                }
              />
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
              xs={3}
            >
              <WithStyles(ListItemText)
                disableTypography={true}
                primary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "undefined ",
                      }
                    }
                    noWrap={true}
                    variant="body2"
                  >
                    
                  </WithStyles(Typography)>
                }
                secondary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "",
                      }
                    }
                    noWrap={true}
                    variant="caption"
                  >
                    
                  </WithStyles(Typography)>
                }
                style={
                  Object {
                    "padding": 0,
                  }
                }
              />
            </WithStyles(Grid)>
          </Hidden>
        </WithStyles(Grid)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={3}
      >
        <WithStyles(ListItemSecondaryAction)
          style={
            Object {
              "margin": "0 0 -32px 0",
              "position": "relative",
              "width": "100%",
            }
          }
        >
          <WithStyles(Grid)
            container={true}
            spacing={0}
          >
            <Hidden
              implementation="js"
              lgDown={false}
              lgUp={false}
              mdDown={false}
              mdUp={false}
              smDown={true}
              smUp={false}
              xlDown={false}
              xlUp={false}
              xsDown={false}
              xsUp={false}
            >
              <WithStyles(Grid)
                item={true}
                style={
                  Object {
                    "textAlign": "right",
                  }
                }
                xs={8}
              >
                <WithStyles(Tooltip)
                  disableFocusListener={true}
                  disableHoverListener={true}
                  disableTouchListener={true}
                >
                  <div
                    style={
                      Object {
                        "display": "inline",
                      }
                    }
                  >
                    <WithStyles(IconButton)
                      disabled={true}
                      onClick={[Function]}
                    >
                      <pure(KeyboardArrowUpIcon)
                        classes={
                          Object {
                            "root": "",
                          }
                        }
                      />
                    </WithStyles(IconButton)>
                  </div>
                </WithStyles(Tooltip)>
                <WithStyles(Tooltip)
                  disableFocusListener={true}
                  disableHoverListener={true}
                  disableTouchListener={true}
                >
                  <div
                    style={
                      Object {
                        "display": "inline",
                      }
                    }
                  >
                    <WithStyles(IconButton)
                      disabled={true}
                      onClick={[Function]}
                    >
                      <pure(KeyboardArrowDownIcon)
                        classes={
                          Object {
                            "root": "",
                          }
                        }
                      />
                    </WithStyles(IconButton)>
                  </div>
                </WithStyles(Tooltip)>
              </WithStyles(Grid)>
            </Hidden>
            <WithStyles(Grid)
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              xs={4}
            >
              <WithStyles(Tooltip)
                disableFocusListener={false}
                disableHoverListener={false}
                disableTouchListener={false}
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <WithStyles(IconButton)
                    disabled={false}
                    onClick={[Function]}
                  >
                    <pure(DeleteIcon) />
                  </WithStyles(IconButton)>
                </div>
              </WithStyles(Tooltip)>
            </WithStyles(Grid)>
          </WithStyles(Grid)>
        </WithStyles(ListItemSecondaryAction)>
      </WithStyles(Grid)>
    </WithStyles(Grid)>
  </WithStyles(ListItem)>
</Fragment>
`;

exports[`GrantListEditorRow should render given grant data 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    locale={Object {}}
    onAction={[Function]}
    onRef={[Function]}
  />
  <WithStyles(ListItem)
    aria-label="Select hint undefined"
    divider={true}
    style={
      Object {
        "padding": "8px 0 8px 0",
      }
    }
  >
    <WithStyles(Grid)
      container={true}
      spacing={0}
    >
      <WithStyles(Grid)
        item={true}
        xs={9}
      >
        <WithStyles(Grid)
          alignContent="center"
          alignItems="stretch"
          container={true}
          spacing={0}
        >
          <WithStyles(Grid)
            item={true}
            xs={5}
          >
            <WithStyles(ListItemText)
              disableTypography={true}
              primary={
                <WithStyles(Typography)
                  classes={
                    Object {
                      "root": "undefined selected-grant",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                >
                  testing
                </WithStyles(Typography)>
              }
              secondary={
                <WithStyles(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </WithStyles(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </WithStyles(Grid)>
          <Hidden
            implementation="js"
            lgDown={false}
            lgUp={false}
            mdDown={false}
            mdUp={false}
            smDown={false}
            smUp={false}
            xlDown={false}
            xlUp={false}
            xsDown={true}
            xsUp={false}
          >
            <WithStyles(Grid)
              item={true}
              xs={4}
            >
              <WithStyles(ListItemText)
                disableTypography={true}
                primary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "undefined selected-grant",
                      }
                    }
                    noWrap={true}
                    variant="body2"
                  >
                    1234
                  </WithStyles(Typography)>
                }
                secondary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "",
                      }
                    }
                    noWrap={true}
                    variant="caption"
                  >
                    
                  </WithStyles(Typography)>
                }
                style={
                  Object {
                    "padding": 0,
                  }
                }
              />
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
              xs={3}
            >
              <WithStyles(ListItemText)
                disableTypography={true}
                primary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "undefined selected-grant",
                      }
                    }
                    noWrap={true}
                    variant="body2"
                  >
                    Government
                  </WithStyles(Typography)>
                }
                secondary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "",
                      }
                    }
                    noWrap={true}
                    variant="caption"
                  >
                    
                  </WithStyles(Typography)>
                }
                style={
                  Object {
                    "padding": 0,
                  }
                }
              />
            </WithStyles(Grid)>
          </Hidden>
        </WithStyles(Grid)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={3}
      >
        <WithStyles(ListItemSecondaryAction)
          style={
            Object {
              "margin": "0 0 -32px 0",
              "position": "relative",
              "width": "100%",
            }
          }
        >
          <WithStyles(Grid)
            container={true}
            spacing={0}
          >
            <Hidden
              implementation="js"
              lgDown={false}
              lgUp={false}
              mdDown={false}
              mdUp={false}
              smDown={true}
              smUp={false}
              xlDown={false}
              xlUp={false}
              xsDown={false}
              xsUp={false}
            >
              <WithStyles(Grid)
                item={true}
                style={
                  Object {
                    "textAlign": "right",
                  }
                }
                xs={8}
              >
                <WithStyles(Tooltip)
                  disableFocusListener={true}
                  disableHoverListener={true}
                  disableTouchListener={true}
                  title="Move up"
                >
                  <div
                    style={
                      Object {
                        "display": "inline",
                      }
                    }
                  >
                    <WithStyles(IconButton)
                      aria-label="Move up"
                      disabled={true}
                      onClick={[Function]}
                    >
                      <pure(KeyboardArrowUpIcon)
                        classes={
                          Object {
                            "root": "selected-grant",
                          }
                        }
                      />
                    </WithStyles(IconButton)>
                  </div>
                </WithStyles(Tooltip)>
                <WithStyles(Tooltip)
                  disableFocusListener={true}
                  disableHoverListener={true}
                  disableTouchListener={true}
                  title="Move down"
                >
                  <div
                    style={
                      Object {
                        "display": "inline",
                      }
                    }
                  >
                    <WithStyles(IconButton)
                      aria-label="Move down"
                      disabled={true}
                      onClick={[Function]}
                    >
                      <pure(KeyboardArrowDownIcon)
                        classes={
                          Object {
                            "root": "selected-grant",
                          }
                        }
                      />
                    </WithStyles(IconButton)>
                  </div>
                </WithStyles(Tooltip)>
              </WithStyles(Grid)>
            </Hidden>
            <WithStyles(Grid)
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              xs={4}
            >
              <WithStyles(Tooltip)
                disableFocusListener={false}
                disableHoverListener={false}
                disableTouchListener={false}
                title="Delete hint"
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <WithStyles(IconButton)
                    aria-label="Delete hint"
                    disabled={false}
                    onClick={[Function]}
                  >
                    <pure(DeleteIcon) />
                  </WithStyles(IconButton)>
                </div>
              </WithStyles(Tooltip)>
            </WithStyles(Grid)>
          </WithStyles(Grid)>
        </WithStyles(ListItemSecondaryAction)>
      </WithStyles(Grid)>
    </WithStyles(Grid)>
  </WithStyles(ListItem)>
</Fragment>
`;

exports[`GrantListEditorRow should render given locale 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    locale={Object {}}
    onAction={[Function]}
    onRef={[Function]}
  />
  <WithStyles(ListItem)
    aria-label="Select hint testing"
    divider={true}
    style={
      Object {
        "padding": "8px 0 8px 0",
      }
    }
  >
    <WithStyles(Grid)
      container={true}
      spacing={0}
    >
      <WithStyles(Grid)
        item={true}
        xs={9}
      >
        <WithStyles(Grid)
          alignContent="center"
          alignItems="stretch"
          container={true}
          spacing={0}
        >
          <WithStyles(Grid)
            item={true}
            xs={5}
          >
            <WithStyles(ListItemText)
              disableTypography={true}
              primary={
                <WithStyles(Typography)
                  classes={
                    Object {
                      "root": "undefined ",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                />
              }
              secondary={
                <WithStyles(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </WithStyles(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </WithStyles(Grid)>
          <Hidden
            implementation="js"
            lgDown={false}
            lgUp={false}
            mdDown={false}
            mdUp={false}
            smDown={false}
            smUp={false}
            xlDown={false}
            xlUp={false}
            xsDown={true}
            xsUp={false}
          >
            <WithStyles(Grid)
              item={true}
              xs={4}
            >
              <WithStyles(ListItemText)
                disableTypography={true}
                primary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "undefined ",
                      }
                    }
                    noWrap={true}
                    variant="body2"
                  >
                    undefined
                  </WithStyles(Typography)>
                }
                secondary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "",
                      }
                    }
                    noWrap={true}
                    variant="caption"
                  >
                    
                  </WithStyles(Typography)>
                }
                style={
                  Object {
                    "padding": 0,
                  }
                }
              />
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
              xs={3}
            >
              <WithStyles(ListItemText)
                disableTypography={true}
                primary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "undefined ",
                      }
                    }
                    noWrap={true}
                    variant="body2"
                  >
                    
                  </WithStyles(Typography)>
                }
                secondary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "",
                      }
                    }
                    noWrap={true}
                    variant="caption"
                  >
                    
                  </WithStyles(Typography)>
                }
                style={
                  Object {
                    "padding": 0,
                  }
                }
              />
            </WithStyles(Grid)>
          </Hidden>
        </WithStyles(Grid)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={3}
      >
        <WithStyles(ListItemSecondaryAction)
          style={
            Object {
              "margin": "0 0 -32px 0",
              "position": "relative",
              "width": "100%",
            }
          }
        >
          <WithStyles(Grid)
            container={true}
            spacing={0}
          >
            <Hidden
              implementation="js"
              lgDown={false}
              lgUp={false}
              mdDown={false}
              mdUp={false}
              smDown={true}
              smUp={false}
              xlDown={false}
              xlUp={false}
              xsDown={false}
              xsUp={false}
            >
              <WithStyles(Grid)
                item={true}
                style={
                  Object {
                    "textAlign": "right",
                  }
                }
                xs={8}
              >
                <WithStyles(Tooltip)
                  disableFocusListener={true}
                  disableHoverListener={true}
                  disableTouchListener={true}
                  title="Move up"
                >
                  <div
                    style={
                      Object {
                        "display": "inline",
                      }
                    }
                  >
                    <WithStyles(IconButton)
                      aria-label="Move up"
                      disabled={true}
                      onClick={[Function]}
                    >
                      <pure(KeyboardArrowUpIcon)
                        classes={
                          Object {
                            "root": "",
                          }
                        }
                      />
                    </WithStyles(IconButton)>
                  </div>
                </WithStyles(Tooltip)>
                <WithStyles(Tooltip)
                  disableFocusListener={true}
                  disableHoverListener={true}
                  disableTouchListener={true}
                  title="Move down"
                >
                  <div
                    style={
                      Object {
                        "display": "inline",
                      }
                    }
                  >
                    <WithStyles(IconButton)
                      aria-label="Move down"
                      disabled={true}
                      onClick={[Function]}
                    >
                      <pure(KeyboardArrowDownIcon)
                        classes={
                          Object {
                            "root": "",
                          }
                        }
                      />
                    </WithStyles(IconButton)>
                  </div>
                </WithStyles(Tooltip)>
              </WithStyles(Grid)>
            </Hidden>
            <WithStyles(Grid)
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              xs={4}
            >
              <WithStyles(Tooltip)
                disableFocusListener={false}
                disableHoverListener={false}
                disableTouchListener={false}
                title="Delete hint"
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <WithStyles(IconButton)
                    aria-label="Delete hint"
                    disabled={false}
                    onClick={[Function]}
                  >
                    <pure(DeleteIcon) />
                  </WithStyles(IconButton)>
                </div>
              </WithStyles(Tooltip)>
            </WithStyles(Grid)>
          </WithStyles(Grid)>
        </WithStyles(ListItemSecondaryAction)>
      </WithStyles(Grid)>
    </WithStyles(Grid)>
  </WithStyles(ListItem)>
</Fragment>
`;

exports[`GrantListEditorRow should show confirmation box 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    onAction={[Function]}
    onRef={[Function]}
  />
  <WithStyles(ListItem)
    aria-label={null}
    divider={true}
    style={
      Object {
        "padding": "8px 0 8px 0",
      }
    }
  >
    <WithStyles(Grid)
      container={true}
      spacing={0}
    >
      <WithStyles(Grid)
        item={true}
        xs={9}
      >
        <WithStyles(Grid)
          alignContent="center"
          alignItems="stretch"
          container={true}
          spacing={0}
        >
          <WithStyles(Grid)
            item={true}
            xs={5}
          >
            <WithStyles(ListItemText)
              disableTypography={true}
              primary={
                <WithStyles(Typography)
                  classes={
                    Object {
                      "root": "undefined ",
                    }
                  }
                  noWrap={true}
                  variant="body2"
                />
              }
              secondary={
                <WithStyles(Typography)
                  classes={
                    Object {
                      "root": "",
                    }
                  }
                  noWrap={true}
                  variant="caption"
                >
                  
                </WithStyles(Typography)>
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </WithStyles(Grid)>
          <Hidden
            implementation="js"
            lgDown={false}
            lgUp={false}
            mdDown={false}
            mdUp={false}
            smDown={false}
            smUp={false}
            xlDown={false}
            xlUp={false}
            xsDown={true}
            xsUp={false}
          >
            <WithStyles(Grid)
              item={true}
              xs={4}
            >
              <WithStyles(ListItemText)
                disableTypography={true}
                primary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "undefined ",
                      }
                    }
                    noWrap={true}
                    variant="body2"
                  >
                    undefined
                  </WithStyles(Typography)>
                }
                secondary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "",
                      }
                    }
                    noWrap={true}
                    variant="caption"
                  >
                    
                  </WithStyles(Typography)>
                }
                style={
                  Object {
                    "padding": 0,
                  }
                }
              />
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
              xs={3}
            >
              <WithStyles(ListItemText)
                disableTypography={true}
                primary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "undefined ",
                      }
                    }
                    noWrap={true}
                    variant="body2"
                  >
                    
                  </WithStyles(Typography)>
                }
                secondary={
                  <WithStyles(Typography)
                    classes={
                      Object {
                        "root": "",
                      }
                    }
                    noWrap={true}
                    variant="caption"
                  >
                    
                  </WithStyles(Typography)>
                }
                style={
                  Object {
                    "padding": 0,
                  }
                }
              />
            </WithStyles(Grid)>
          </Hidden>
        </WithStyles(Grid)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={3}
      >
        <WithStyles(ListItemSecondaryAction)
          style={
            Object {
              "margin": "0 0 -32px 0",
              "position": "relative",
              "width": "100%",
            }
          }
        >
          <WithStyles(Grid)
            container={true}
            spacing={0}
          >
            <Hidden
              implementation="js"
              lgDown={false}
              lgUp={false}
              mdDown={false}
              mdUp={false}
              smDown={true}
              smUp={false}
              xlDown={false}
              xlUp={false}
              xsDown={false}
              xsUp={false}
            >
              <WithStyles(Grid)
                item={true}
                style={
                  Object {
                    "textAlign": "right",
                  }
                }
                xs={8}
              >
                <WithStyles(Tooltip)
                  disableFocusListener={true}
                  disableHoverListener={true}
                  disableTouchListener={true}
                >
                  <div
                    style={
                      Object {
                        "display": "inline",
                      }
                    }
                  >
                    <WithStyles(IconButton)
                      disabled={true}
                      onClick={[Function]}
                    >
                      <pure(KeyboardArrowUpIcon)
                        classes={
                          Object {
                            "root": "",
                          }
                        }
                      />
                    </WithStyles(IconButton)>
                  </div>
                </WithStyles(Tooltip)>
                <WithStyles(Tooltip)
                  disableFocusListener={true}
                  disableHoverListener={true}
                  disableTouchListener={true}
                >
                  <div
                    style={
                      Object {
                        "display": "inline",
                      }
                    }
                  >
                    <WithStyles(IconButton)
                      disabled={true}
                      onClick={[Function]}
                    >
                      <pure(KeyboardArrowDownIcon)
                        classes={
                          Object {
                            "root": "",
                          }
                        }
                      />
                    </WithStyles(IconButton)>
                  </div>
                </WithStyles(Tooltip)>
              </WithStyles(Grid)>
            </Hidden>
            <WithStyles(Grid)
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              xs={4}
            >
              <WithStyles(Tooltip)
                disableFocusListener={false}
                disableHoverListener={false}
                disableTouchListener={false}
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <WithStyles(IconButton)
                    disabled={false}
                    onClick={[Function]}
                  >
                    <pure(DeleteIcon) />
                  </WithStyles(IconButton)>
                </div>
              </WithStyles(Tooltip)>
            </WithStyles(Grid)>
          </WithStyles(Grid)>
        </WithStyles(ListItemSecondaryAction)>
      </WithStyles(Grid)>
    </WithStyles(Grid)>
  </WithStyles(ListItem)>
</Fragment>
`;
