// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListEditor tests should add an object item and set state 1`] = `
<div
  className="testClass"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    locale={Object {}}
    normalize={[Function]}
    onAdd={[Function]}
  />
</div>
`;

exports[`ListEditor tests should add an object item and set state 2`] = `
<div
  className="testClass"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    locale={Object {}}
    normalize={[Function]}
    onAdd={[Function]}
  />
  <WithStyles(ListRowHeader)
    disabled={false}
    hideReorder={true}
    onDeleteAll={[Function]}
  />
  <WithStyles(ListRow)
    canMoveDown={false}
    canMoveUp={false}
    disabled={false}
    hideReorder={false}
    index={0}
    item={
      Object {
        "id": "test",
        "value": "test",
      }
    }
    key="0"
    onDelete={[Function]}
    onMoveDown={[Function]}
    onMoveUp={[Function]}
  />
</div>
`;

exports[`ListEditor tests should add item and set state 1`] = `
<div
  className="testClass"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    locale={Object {}}
    normalize={[Function]}
    onAdd={[Function]}
  />
</div>
`;

exports[`ListEditor tests should add item and set state 2`] = `
<div
  className="testClass"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    locale={Object {}}
    normalize={[Function]}
    onAdd={[Function]}
  />
  <WithStyles(ListRowHeader)
    disabled={false}
    hideReorder={true}
    onDeleteAll={[Function]}
  />
  <WithStyles(ListRow)
    canMoveDown={false}
    canMoveUp={false}
    disabled={false}
    hideReorder={false}
    index={0}
    item={
      Object {
        "key": "test",
        "value": "test",
      }
    }
    key="0"
    onDelete={[Function]}
    onMoveDown={[Function]}
    onMoveUp={[Function]}
  />
</div>
`;

exports[`ListEditor tests should call default input normaliser function 1`] = `
<div
  className="testClass"
>
  <formComponent
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    locale={Object {}}
    normalize={[Function]}
    onAdd={[Function]}
  />
</div>
`;

exports[`ListEditor tests should move down an item 1`] = `
<div
  className="testClass"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    locale={Object {}}
    normalize={[Function]}
    onAdd={[Function]}
  />
  <WithStyles(ListRowHeader)
    disabled={false}
    hideReorder={false}
    onDeleteAll={[Function]}
  />
  <WithStyles(ListRow)
    canMoveDown={true}
    canMoveUp={false}
    disabled={false}
    hideReorder={false}
    index={0}
    item="one"
    key="0"
    onDelete={[Function]}
    onMoveDown={[Function]}
    onMoveUp={[Function]}
  />
  <WithStyles(ListRow)
    canMoveDown={true}
    canMoveUp={true}
    disabled={false}
    hideReorder={false}
    index={1}
    item="three"
    key="1"
    onDelete={[Function]}
    onMoveDown={[Function]}
    onMoveUp={[Function]}
  />
  <WithStyles(ListRow)
    canMoveDown={false}
    canMoveUp={true}
    disabled={false}
    hideReorder={false}
    index={2}
    item="two"
    key="2"
    onDelete={[Function]}
    onMoveDown={[Function]}
    onMoveUp={[Function]}
  />
</div>
`;

exports[`ListEditor tests should move up an item 1`] = `
<div
  className="testClass"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    locale={Object {}}
    normalize={[Function]}
    onAdd={[Function]}
  />
  <WithStyles(ListRowHeader)
    disabled={false}
    hideReorder={false}
    onDeleteAll={[Function]}
  />
  <WithStyles(ListRow)
    canMoveDown={true}
    canMoveUp={false}
    disabled={false}
    hideReorder={false}
    index={0}
    item="two"
    key="0"
    onDelete={[Function]}
    onMoveDown={[Function]}
    onMoveUp={[Function]}
  />
  <WithStyles(ListRow)
    canMoveDown={true}
    canMoveUp={true}
    disabled={false}
    hideReorder={false}
    index={1}
    item="one"
    key="1"
    onDelete={[Function]}
    onMoveDown={[Function]}
    onMoveUp={[Function]}
  />
  <WithStyles(ListRow)
    canMoveDown={false}
    canMoveUp={true}
    disabled={false}
    hideReorder={false}
    index={2}
    item="three"
    key="2"
    onDelete={[Function]}
    onMoveDown={[Function]}
    onMoveUp={[Function]}
  />
</div>
`;

exports[`ListEditor tests should process incomplete props without error 1`] = `
<div
  className="testClass"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    locale={Object {}}
    normalize={[Function]}
    onAdd={[Function]}
  />
</div>
`;

exports[`ListEditor tests should render full component as disabled 1`] = `
<div
  className="testClass"
>
  <mockConstructor
    disabled={true}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    locale={Object {}}
    normalize={[Function]}
    onAdd={[Function]}
  />
</div>
`;

exports[`ListEditor tests should render full component with a defined className 1`] = `
<div
  className="requiredField"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    locale={Object {}}
    normalize={[Function]}
    onAdd={[Function]}
  />
</div>
`;

exports[`ListEditor tests should render input value as itemList 1`] = `
<div
  className="testClass"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    locale={Object {}}
    normalize={[Function]}
    onAdd={[Function]}
  />
</div>
`;
