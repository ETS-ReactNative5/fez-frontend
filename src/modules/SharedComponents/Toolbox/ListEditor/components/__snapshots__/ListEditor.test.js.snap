// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListEditor tests Should render a list of many items in a scrollable HTML div 1`] = `
<div
  className="testClass ListEditor-NoLabel"
  id="undefined-list-editor"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    itemSelectedToEdit={null}
    key="link-info-form"
    locale={
      Object {
        "inputFieldLabel": "NoLabel",
      }
    }
    normalize={[Function]}
    onAdd={[Function]}
    required={false}
  />
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={false}
    onDeleteAll={[Function]}
  />
  <div
    className="ListEditor-scrollable-list"
    id="undefined-list"
    style={
      Object {
        "height": 250,
        "overflowX": "hidden",
        "overflowY": "scroll",
        "width": "100%",
      }
    }
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item="one"
      itemTemplate={[Function]}
      key="0"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={1}
      item="two"
      itemTemplate={[Function]}
      key="1"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={2}
      item="three"
      itemTemplate={[Function]}
      key="2"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={3}
      item="four"
      itemTemplate={[Function]}
      key="3"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={4}
      item="five"
      itemTemplate={[Function]}
      key="4"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={5}
      item="six"
      itemTemplate={[Function]}
      key="5"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={6}
      item="seven"
      itemTemplate={[Function]}
      key="6"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={7}
      item="eight"
      itemTemplate={[Function]}
      key="7"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={8}
      item="nine"
      itemTemplate={[Function]}
      key="8"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={9}
      item="ten"
      itemTemplate={[Function]}
      key="9"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ListEditor tests Should render a list of many items inline 1`] = `
<div
  className="testClass ListEditor-NoLabel"
  id="undefined-list-editor"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    itemSelectedToEdit={null}
    key="link-info-form"
    locale={
      Object {
        "inputFieldLabel": "NoLabel",
      }
    }
    normalize={[Function]}
    onAdd={[Function]}
    required={false}
  />
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={false}
    onDeleteAll={[Function]}
  />
  <div
    id="undefined-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item="one"
      itemTemplate={[Function]}
      key="0"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={1}
      item="two"
      itemTemplate={[Function]}
      key="1"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={2}
      item="three"
      itemTemplate={[Function]}
      key="2"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={3}
      item="four"
      itemTemplate={[Function]}
      key="3"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={4}
      item="five"
      itemTemplate={[Function]}
      key="4"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={5}
      item="six"
      itemTemplate={[Function]}
      key="5"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={6}
      item="seven"
      itemTemplate={[Function]}
      key="6"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={7}
      item="eight"
      itemTemplate={[Function]}
      key="7"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={8}
      item="nine"
      itemTemplate={[Function]}
      key="8"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={9}
      item="ten"
      itemTemplate={[Function]}
      key="9"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ListEditor tests Should render a list of many items inline 2`] = `
<div
  className="testClass ListEditor-NoLabel"
  id="undefined-list-editor"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    itemSelectedToEdit={null}
    key="link-info-form"
    locale={
      Object {
        "inputFieldLabel": "NoLabel",
      }
    }
    normalize={[Function]}
    onAdd={[Function]}
    required={false}
  />
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={false}
    onDeleteAll={[Function]}
  />
  <div
    id="undefined-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item="one"
      itemTemplate={[Function]}
      key="0"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={1}
      item="two"
      itemTemplate={[Function]}
      key="1"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={2}
      item="three"
      itemTemplate={[Function]}
      key="2"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={3}
      item="four"
      itemTemplate={[Function]}
      key="3"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={4}
      item="five"
      itemTemplate={[Function]}
      key="4"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={5}
      item="six"
      itemTemplate={[Function]}
      key="5"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={6}
      item="seven"
      itemTemplate={[Function]}
      key="6"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={7}
      item="eight"
      itemTemplate={[Function]}
      key="7"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={8}
      item="nine"
      itemTemplate={[Function]}
      key="8"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={9}
      item="ten"
      itemTemplate={[Function]}
      key="9"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ListEditor tests should add an object item and set state 1`] = `
<div
  className="testClass ListEditor-"
  id="undefined-list-editor"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    itemSelectedToEdit={null}
    key="link-info-form"
    locale={Object {}}
    normalize={[Function]}
    onAdd={[Function]}
    required={false}
  />
  <div
    id="undefined-list"
  />
</div>
`;

exports[`ListEditor tests should add an object item and set state 2`] = `
<div
  className="testClass ListEditor-"
  id="undefined-list-editor"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    itemSelectedToEdit={null}
    key="link-info-form"
    locale={Object {}}
    normalize={[Function]}
    onAdd={[Function]}
    required={false}
  />
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={true}
    onDeleteAll={[Function]}
  />
  <div
    id="undefined-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item={
        Object {
          "id": "test",
          "value": "test",
        }
      }
      itemTemplate={[Function]}
      key="0"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ListEditor tests should add item and set state 1`] = `
<div
  className="testClass ListEditor-"
  id="undefined-list-editor"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    itemSelectedToEdit={null}
    key="link-info-form"
    locale={Object {}}
    normalize={[Function]}
    onAdd={[Function]}
    required={false}
  />
  <div
    id="undefined-list"
  />
</div>
`;

exports[`ListEditor tests should add item and set state 2`] = `
<div
  className="testClass ListEditor-"
  id="undefined-list-editor"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    itemSelectedToEdit={null}
    key="link-info-form"
    locale={Object {}}
    normalize={[Function]}
    onAdd={[Function]}
    required={false}
  />
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={true}
    onDeleteAll={[Function]}
  />
  <div
    id="undefined-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item={
        Object {
          "key": "test",
          "value": "test",
        }
      }
      itemTemplate={[Function]}
      key="0"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ListEditor tests should call default input normaliser function 1`] = `
<div
  className="testClass ListEditor-"
  id="undefined-list-editor"
>
  <formComponent
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    itemSelectedToEdit={null}
    key="link-info-form"
    locale={Object {}}
    normalize={[Function]}
    onAdd={[Function]}
    required={false}
  />
  <div
    id="undefined-list"
  />
</div>
`;

exports[`ListEditor tests should move down an item 1`] = `
<div
  className="testClass ListEditor-NoLabel"
  id="undefined-list-editor"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    itemSelectedToEdit={null}
    key="link-info-form"
    locale={
      Object {
        "inputFieldLabel": "NoLabel",
      }
    }
    normalize={[Function]}
    onAdd={[Function]}
    required={false}
  />
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={false}
    onDeleteAll={[Function]}
  />
  <div
    id="undefined-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item="one"
      itemTemplate={[Function]}
      key="0"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={1}
      item="three"
      itemTemplate={[Function]}
      key="1"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={2}
      item="two"
      itemTemplate={[Function]}
      key="2"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ListEditor tests should move up an item 1`] = `
<div
  className="testClass ListEditor-NoLabel"
  id="undefined-list-editor"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    itemSelectedToEdit={null}
    key="link-info-form"
    locale={
      Object {
        "inputFieldLabel": "NoLabel",
      }
    }
    normalize={[Function]}
    onAdd={[Function]}
    required={false}
  />
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={false}
    onDeleteAll={[Function]}
  />
  <div
    id="undefined-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item="two"
      itemTemplate={[Function]}
      key="0"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={1}
      item="one"
      itemTemplate={[Function]}
      key="1"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={2}
      item="three"
      itemTemplate={[Function]}
      key="2"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ListEditor tests should process incomplete props without error 1`] = `
<div
  className="testClass ListEditor-NoLabel"
  id="undefined-list-editor"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    itemSelectedToEdit={null}
    key="link-info-form"
    locale={
      Object {
        "inputFieldLabel": "NoLabel",
      }
    }
    normalize={[Function]}
    onAdd={[Function]}
    required={false}
  />
  <div
    id="undefined-list"
  />
</div>
`;

exports[`ListEditor tests should render full component as disabled 1`] = `
<div
  className="testClass ListEditor-NoLabel"
  id="undefined-list-editor"
>
  <mockConstructor
    disabled={true}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    itemSelectedToEdit={null}
    key="link-info-form"
    locale={
      Object {
        "inputFieldLabel": "NoLabel",
      }
    }
    normalize={[Function]}
    onAdd={[Function]}
    required={false}
  />
  <div
    id="undefined-list"
  />
</div>
`;

exports[`ListEditor tests should render full component with a defined className 1`] = `
<div
  className="requiredField ListEditor-NoLabel"
  id="undefined-list-editor"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    itemSelectedToEdit={null}
    key="link-info-form"
    locale={
      Object {
        "inputFieldLabel": "NoLabel",
      }
    }
    normalize={[Function]}
    onAdd={[Function]}
    required={false}
  />
  <div
    id="undefined-list"
  />
</div>
`;

exports[`ListEditor tests should render input value as itemList 1`] = `
<div
  className="testClass ListEditor-NoLabel"
  id="undefined-list-editor"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    itemSelectedToEdit={null}
    key="link-info-form"
    locale={
      Object {
        "inputFieldLabel": "NoLabel",
      }
    }
    normalize={[Function]}
    onAdd={[Function]}
    required={false}
  />
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={false}
    onDeleteAll={[Function]}
  />
  <div
    id="undefined-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      itemTemplate={[Function]}
      key="0"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={1}
      itemTemplate={[Function]}
      key="1"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ListEditor tests should render input value as itemList for List 1`] = `
<div
  className="testClass ListEditor-NoLabel"
  id="undefined-list-editor"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    itemSelectedToEdit={null}
    key="link-info-form"
    locale={
      Object {
        "inputFieldLabel": "NoLabel",
      }
    }
    normalize={[Function]}
    onAdd={[Function]}
    required={false}
  />
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={false}
    onDeleteAll={[Function]}
  />
  <div
    id="undefined-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      itemTemplate={[Function]}
      key="0"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={1}
      itemTemplate={[Function]}
      key="1"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ListEditor tests should update an issn with selected index 1`] = `
<div
  className="testClass ListEditor-NoLabel"
  id="undefined-list-editor"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    itemIndexSelectedToEdit={null}
    itemSelectedToEdit={null}
    key="1"
    locale={
      Object {
        "inputFieldLabel": "NoLabel",
      }
    }
    normalize={[Function]}
    onAdd={[Function]}
    required={false}
  />
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={false}
    onDeleteAll={[Function]}
  />
  <div
    id="undefined-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item={
        Object {
          "key": "1234-1234",
          "value": Object {
            "ulrichs": Object {},
          },
        }
      }
      itemTemplate={[Function]}
      key="0"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={1}
      item={
        Object {
          "key": "1234-2222",
          "value": Object {
            "ulrichs": Object {},
          },
        }
      }
      itemTemplate={[Function]}
      key="1"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ListEditor tests should update an item with selected index 1`] = `
<div
  className="testClass ListEditor-NoLabel"
  id="undefined-list-editor"
>
  <mockConstructor
    disabled={false}
    errorText=""
    inputField={[MockFunction]}
    isValid={[MockFunction]}
    itemIndexSelectedToEdit={null}
    itemSelectedToEdit={null}
    key="1"
    locale={
      Object {
        "inputFieldLabel": "NoLabel",
      }
    }
    normalize={[Function]}
    onAdd={[Function]}
    required={false}
  />
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={false}
    onDeleteAll={[Function]}
  />
  <div
    id="undefined-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item="one"
      itemTemplate={[Function]}
      key="0"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={1}
      item="four"
      itemTemplate={[Function]}
      key="1"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={2}
      item="three"
      itemTemplate={[Function]}
      key="2"
      listRowId="undefined-list-row"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;
