// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component MenuDrawer should render CRICOS footer 1`] = `null`;

exports[`Component MenuDrawer should render empty drawer 1`] = `
<WithStyles(Drawer)
  anchor="left"
  classes={
    Object {
      "docked": undefined,
      "paper": undefined,
      "paperAnchorDockedLeft": undefined,
    }
  }
  onClose={[MockFunction]}
  open={false}
  variant="temporary"
/>
`;

exports[`Component MenuDrawer should render opened drawer with menus, divider 1`] = `
<WithStyles(Drawer)
  anchor="left"
  classes={
    Object {
      "docked": undefined,
      "paper": undefined,
      "paperAnchorDockedLeft": undefined,
    }
  }
  onClose={[MockFunction]}
  open={true}
  variant="temporary"
>
  <React.Fragment>
    <WithStyles(Grid)
      alignContent="center"
      alignItems="center"
      classes={
        Object {
          "container": undefined,
        }
      }
      container={true}
      spacing={0}
      wrap="nowrap"
    >
      <WithStyles(Grid)
        item={true}
        sm={12}
        xs={10}
        zeroMinWidth={true}
      />
      <Hidden
        implementation="js"
        lgDown={false}
        lgUp={false}
        mdDown={false}
        mdUp={false}
        smDown={false}
        smUp={true}
        xlDown={false}
        xlUp={false}
        xsDown={false}
        xsUp={false}
      >
        <WithStyles(Grid)
          item={true}
          xs={2}
        >
          <WithStyles(IconButton)
            aria-label="Close menu"
            onClick={[MockFunction]}
          >
            <pure(KeyboardArrowLeft) />
          </WithStyles(IconButton)>
        </WithStyles(Grid)>
      </Hidden>
    </WithStyles(Grid)>
    <WithStyles(List)
      component="nav"
      id="mainMenu"
      tabIndex={-1}
    >
      <span
        className="menu-item-container"
        key="menu_item_0"
      >
        <WithStyles(ListItem)
          button={true}
          onClick={[Function]}
        >
          <WithStyles(ListItemText)
            classes={
              Object {
                "primary": undefined,
                "secondary": undefined,
              }
            }
            primary="Primary text 0"
            secondary="secondary text 0"
          />
        </WithStyles(ListItem)>
      </span>
      <WithStyles(Divider)
        key="menu_item_1"
      />
      <span
        className="menu-item-container"
        key="menu_item_2"
      >
        <WithStyles(ListItem)
          button={true}
          onClick={[Function]}
        >
          <WithStyles(ListItemText)
            classes={
              Object {
                "primary": undefined,
                "secondary": undefined,
              }
            }
            primary="Primary text 1"
            secondary="secondary text 1"
          />
        </WithStyles(ListItem)>
      </span>
    </WithStyles(List)>
    <div
      id="afterMenuDrawer"
      tabIndex={-1}
    />
    <div>
      CRICOS Provider No: 
      <ExternalLink
        className=""
        href="http://www.uq.edu.au/about/cricos-link"
        openInNewIcon={false}
        rel="noopener noreferrer"
        target="_blank"
        title="CRICOS Provider No: "
      >
        00025B
      </ExternalLink>
    </div>
  </React.Fragment>
</WithStyles(Drawer)>
`;

exports[`Component MenuDrawer should render opened drawer with menus, divider and skip nav button 1`] = `
<WithStyles(Drawer)
  anchor="left"
  classes={
    Object {
      "docked": undefined,
      "paper": undefined,
      "paperAnchorDockedLeft": undefined,
    }
  }
  onClose={[MockFunction]}
  open={true}
  variant="permanent"
>
  <React.Fragment>
    <WithStyles(Grid)
      alignContent="center"
      alignItems="center"
      classes={
        Object {
          "container": undefined,
        }
      }
      container={true}
      spacing={0}
      wrap="nowrap"
    >
      <WithStyles(Grid)
        item={true}
        sm={12}
        xs={10}
        zeroMinWidth={true}
      />
      <Hidden
        implementation="js"
        lgDown={false}
        lgUp={false}
        mdDown={false}
        mdUp={false}
        smDown={false}
        smUp={true}
        xlDown={false}
        xlUp={false}
        xsDown={false}
        xsUp={false}
      >
        <WithStyles(Grid)
          item={true}
          xs={2}
        >
          <WithStyles(IconButton)
            aria-label="Close menu"
            onClick={[MockFunction]}
          >
            <pure(KeyboardArrowLeft) />
          </WithStyles(IconButton)>
        </WithStyles(Grid)>
      </Hidden>
    </WithStyles(Grid)>
    <WithStyles(List)
      component="nav"
      id="mainMenu"
      tabIndex={-1}
    >
      <div
        aria-label="Skip navigation"
        id="skipNav"
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={1}
        type="button"
      >
        <WithStyles(Button)
          className="skipNavButton"
          color="primary"
          onClick={[Function]}
          tabIndex={-1}
          variant="contained"
        >
          Skip navigation
        </WithStyles(Button)>
      </div>
      <span
        className="menu-item-container"
        key="menu_item_0"
      >
        <WithStyles(ListItem)
          button={true}
          onClick={[Function]}
        >
          <WithStyles(ListItemText)
            classes={
              Object {
                "primary": undefined,
                "secondary": undefined,
              }
            }
            primary="Primary text 0"
            secondary="secondary text 0"
          />
        </WithStyles(ListItem)>
      </span>
      <WithStyles(Divider)
        key="menu_item_1"
      />
      <span
        className="menu-item-container"
        key="menu_item_2"
      >
        <WithStyles(ListItem)
          button={true}
          onClick={[Function]}
        >
          <WithStyles(ListItemText)
            classes={
              Object {
                "primary": undefined,
                "secondary": undefined,
              }
            }
            primary="Primary text 1"
            secondary="secondary text 1"
          />
        </WithStyles(ListItem)>
      </span>
    </WithStyles(List)>
    <div
      id="afterMenuDrawer"
      tabIndex={-1}
    />
    <div>
      CRICOS Provider No: 
      <ExternalLink
        className=""
        href="http://www.uq.edu.au/about/cricos-link"
        openInNewIcon={false}
        rel="noopener noreferrer"
        target="_blank"
        title="CRICOS Provider No: "
      >
        00025B
      </ExternalLink>
    </div>
  </React.Fragment>
</WithStyles(Drawer)>
`;

exports[`Component MenuDrawer should render opened drawer with menus, divider and skip nav button 2`] = `
<WithStyles(Drawer)
  anchor="left"
  classes={
    Object {
      "docked": undefined,
      "paper": undefined,
      "paperAnchorDockedLeft": undefined,
    }
  }
  onClose={[MockFunction]}
  open={true}
  variant="permanent"
>
  <React.Fragment>
    <WithStyles(Grid)
      alignContent="center"
      alignItems="center"
      classes={
        Object {
          "container": undefined,
        }
      }
      container={true}
      spacing={0}
      wrap="nowrap"
    >
      <WithStyles(Grid)
        item={true}
        sm={12}
        xs={10}
        zeroMinWidth={true}
      />
      <Hidden
        implementation="js"
        lgDown={false}
        lgUp={false}
        mdDown={false}
        mdUp={false}
        smDown={false}
        smUp={true}
        xlDown={false}
        xlUp={false}
        xsDown={false}
        xsUp={false}
      >
        <WithStyles(Grid)
          item={true}
          xs={2}
        >
          <WithStyles(IconButton)
            aria-label="Close menu"
            onClick={[MockFunction]}
          >
            <pure(KeyboardArrowLeft) />
          </WithStyles(IconButton)>
        </WithStyles(Grid)>
      </Hidden>
    </WithStyles(Grid)>
    <WithStyles(List)
      component="nav"
      id="mainMenu"
      tabIndex={-1}
    >
      <div
        aria-label="Skip navigation"
        id="skipNav"
        onClick={[Function]}
        onKeyPress={[Function]}
        tabIndex={1}
        type="button"
      >
        <WithStyles(Button)
          className="skipNavButton"
          color="primary"
          onClick={[Function]}
          tabIndex={-1}
          variant="contained"
        >
          Skip navigation
        </WithStyles(Button)>
      </div>
      <span
        className="menu-item-container"
        key="menu_item_0"
      >
        <WithStyles(ListItem)
          button={true}
          onClick={[Function]}
        >
          <WithStyles(ListItemText)
            classes={
              Object {
                "primary": undefined,
                "secondary": undefined,
              }
            }
            primary="Primary text 0"
            secondary="secondary text 0"
          />
        </WithStyles(ListItem)>
      </span>
      <WithStyles(Divider)
        key="menu_item_1"
      />
      <span
        className="menu-item-container"
        key="menu_item_2"
      >
        <WithStyles(ListItem)
          button={true}
          onClick={[Function]}
        >
          <WithStyles(ListItemText)
            classes={
              Object {
                "primary": undefined,
                "secondary": undefined,
              }
            }
            primary="Primary text 1"
            secondary="secondary text 1"
          />
        </WithStyles(ListItem)>
      </span>
    </WithStyles(List)>
    <div
      id="afterMenuDrawer"
      tabIndex={-1}
    />
    <div>
      CRICOS Provider No: 
      <ExternalLink
        className=""
        href="http://www.uq.edu.au/about/cricos-link"
        openInNewIcon={false}
        rel="noopener noreferrer"
        target="_blank"
        title="CRICOS Provider No: "
      >
        00025B
      </ExternalLink>
    </div>
  </React.Fragment>
</WithStyles(Drawer)>
`;
