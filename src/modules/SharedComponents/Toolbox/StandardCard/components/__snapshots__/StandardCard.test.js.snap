// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cards component renders with custom colours and full height 1`] = `
<WithStyles(Card)
  className="undefined StandardCard"
  style={
    Object {
      "backgroundColor": "#fcc",
      "color": "#111",
      "height": "100%",
    }
  }
>
  <WithStyles(CardHeader)
    action={false}
    classes={
      Object {
        "root": "#555",
      }
    }
    style={
      Object {
        "backgroundColor": "#ccc",
      }
    }
    title="card title"
    titleTypographyProps={
      Object {
        "color": "inherit",
        "component": "h3",
        "variant": "h5",
      }
    }
  />
  <WithStyles(CardContent)
    className="no-padding"
  />
</WithStyles(Card)>
`;

exports[`Cards component renders with square top and accent header 1`] = `
<WithStyles(Card)
  className="undefined StandardCard"
  style={Object {}}
>
  <WithStyles(CardHeader)
    action={false}
    classes={
      Object {
        "root": "#333",
      }
    }
    style={
      Object {
        "borderTopLeftRadius": 0,
        "borderTopRightRadius": 0,
      }
    }
    title="card title"
    titleTypographyProps={
      Object {
        "color": "inherit",
        "component": "h3",
        "variant": "h5",
      }
    }
  />
  <WithStyles(CardContent)
    className=""
  />
</WithStyles(Card)>
`;

exports[`Cards component renders with title and help button 1`] = `
<WithStyles(Card)
  className="testClass StandardCard"
  style={Object {}}
>
  <WithStyles(CardHeader)
    action={
      <Memo(Connect(WithStyles(HelpIcon)))
        buttonLabel="OK"
        text="help text"
        title="help"
      />
    }
    classes={
      Object {
        "root": undefined,
      }
    }
    style={Object {}}
    title="card title"
    titleTypographyProps={
      Object {
        "color": "inherit",
        "component": "h3",
        "variant": "h5",
      }
    }
  />
  <WithStyles(CardContent)
    className=""
  />
</WithStyles(Card)>
`;

exports[`Cards component renders with title and no help icon 1`] = `
<WithStyles(Card)
  className="testClass StandardCard"
  style={Object {}}
>
  <WithStyles(CardHeader)
    action={false}
    classes={
      Object {
        "root": undefined,
      }
    }
    style={Object {}}
    title="card title"
    titleTypographyProps={
      Object {
        "color": "inherit",
        "component": "h3",
        "variant": "h5",
      }
    }
  />
  <WithStyles(CardContent)
    className=""
  />
</WithStyles(Card)>
`;

exports[`StandardCard component should render StyledCard with same props 1`] = `
<WithStyles(Cards)
  test1="test1value"
  test2="test2value"
/>
`;
