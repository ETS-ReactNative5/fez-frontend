// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OAStatus component should render default view 1`] = `
<GenericSelectField
  canUnselect={true}
  error={false}
  errorText=""
  hideLabel={false}
  itemsList={
    Array [
      Object {
        "text": "Please choose an option",
        "value": null,
      },
      Object {
        "text": "Not yet assessed",
        "value": "453692",
      },
      Object {
        "text": "DOI",
        "value": "453693",
      },
      Object {
        "text": "Link (no DOI)",
        "value": "453694",
      },
      Object {
        "text": "File (Publisher version)",
        "value": "453695",
      },
      Object {
        "text": "File (Author Post-print)",
        "value": "453696",
      },
      Object {
        "text": "Other",
        "value": "453697",
      },
      Object {
        "text": "Not Open Access",
        "value": "453698",
      },
      Object {
        "text": "Mediated Access",
        "value": "453700",
      },
      Object {
        "text": "PMC",
        "value": "453954",
      },
      Object {
        "text": "RDM open",
        "value": "454116",
      },
    ]
  }
  locale={
    Object {
      "label": undefined,
    }
  }
  selectedValue={Array []}
/>
`;

exports[`OAStatus component should render immutable list as selected value with given field props 1`] = `
<GenericSelectField
  canUnselect={true}
  error={true}
  errorText="Test error"
  hideLabel={false}
  input={
    Object {
      "onChange": [MockFunction],
      "value": Immutable.List [
        "One",
        "Two",
      ],
    }
  }
  itemsList={
    Array [
      Object {
        "text": "Please choose an option",
        "value": null,
      },
      Object {
        "text": "Not yet assessed",
        "value": "453692",
      },
      Object {
        "text": "DOI",
        "value": "453693",
      },
      Object {
        "text": "Link (no DOI)",
        "value": "453694",
      },
      Object {
        "text": "File (Publisher version)",
        "value": "453695",
      },
      Object {
        "text": "File (Author Post-print)",
        "value": "453696",
      },
      Object {
        "text": "Other",
        "value": "453697",
      },
      Object {
        "text": "Not Open Access",
        "value": "453698",
      },
      Object {
        "text": "Mediated Access",
        "value": "453700",
      },
      Object {
        "text": "PMC",
        "value": "453954",
      },
      Object {
        "text": "RDM open",
        "value": "454116",
      },
    ]
  }
  label="Test label"
  locale={
    Object {
      "label": "Test label",
    }
  }
  meta={
    Object {
      "error": "Test error",
    }
  }
  onChange={[MockFunction]}
  placeholder="Test placeholder"
  selectedValue={
    Array [
      "One",
      "Two",
    ]
  }
/>
`;

exports[`OAStatus component should render when given a default value field props 1`] = `
<GenericSelectField
  canUnselect={true}
  defaultValue="afr"
  error={false}
  errorText=""
  hideLabel={false}
  itemsList={
    Array [
      Object {
        "text": "Please choose an option",
        "value": null,
      },
      Object {
        "text": "Not yet assessed",
        "value": "453692",
      },
      Object {
        "text": "DOI",
        "value": "453693",
      },
      Object {
        "text": "Link (no DOI)",
        "value": "453694",
      },
      Object {
        "text": "File (Publisher version)",
        "value": "453695",
      },
      Object {
        "text": "File (Author Post-print)",
        "value": "453696",
      },
      Object {
        "text": "Other",
        "value": "453697",
      },
      Object {
        "text": "Not Open Access",
        "value": "453698",
      },
      Object {
        "text": "Mediated Access",
        "value": "453700",
      },
      Object {
        "text": "PMC",
        "value": "453954",
      },
      Object {
        "text": "RDM open",
        "value": "454116",
      },
    ]
  }
  label="Test label"
  locale={
    Object {
      "label": "Test label",
    }
  }
  placeholder="Test placeholder"
  selectedValue={
    Array [
      "afr",
    ]
  }
/>
`;

exports[`OAStatus component should render with given field props 1`] = `
<GenericSelectField
  canUnselect={true}
  error={true}
  errorText="Test error"
  hideLabel={false}
  input={
    Object {
      "onChange": [MockFunction],
      "value": Array [
        "One",
        "Two",
      ],
    }
  }
  itemsList={
    Array [
      Object {
        "text": "Please choose an option",
        "value": null,
      },
      Object {
        "text": "Not yet assessed",
        "value": "453692",
      },
      Object {
        "text": "DOI",
        "value": "453693",
      },
      Object {
        "text": "Link (no DOI)",
        "value": "453694",
      },
      Object {
        "text": "File (Publisher version)",
        "value": "453695",
      },
      Object {
        "text": "File (Author Post-print)",
        "value": "453696",
      },
      Object {
        "text": "Other",
        "value": "453697",
      },
      Object {
        "text": "Not Open Access",
        "value": "453698",
      },
      Object {
        "text": "Mediated Access",
        "value": "453700",
      },
      Object {
        "text": "PMC",
        "value": "453954",
      },
      Object {
        "text": "RDM open",
        "value": "454116",
      },
    ]
  }
  label="Test label"
  locale={
    Object {
      "label": "Test label",
    }
  }
  meta={
    Object {
      "error": "Test error",
    }
  }
  onChange={[MockFunction]}
  placeholder="Test placeholder"
  selectedValue={
    Array [
      "One",
      "Two",
    ]
  }
/>
`;
