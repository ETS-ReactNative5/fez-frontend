// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OAStatusTypeField component should render default view 1`] = `
<Memo(NewGenericSelectField)
  canUnselect={true}
  error={false}
  errorText=""
  genericSelectFieldId="rek-oa-status-type"
  itemsList={
    Array [
      Object {
        "text": "Please choose an option",
        "value": null,
      },
      Object {
        "text": "Green",
        "value": 454120,
      },
      Object {
        "text": "Gold",
        "value": 454121,
      },
      Object {
        "text": "Hybrid",
        "value": 454122,
      },
      Object {
        "text": "Bronze",
        "value": 454123,
      },
    ]
  }
  locale={
    Object {
      "label": undefined,
    }
  }
  selectPrompt="Please select an option"
  value=""
/>
`;

exports[`OAStatusTypeField component should render immutable list as selected value with given field props 1`] = `
<Memo(NewGenericSelectField)
  canUnselect={true}
  error={true}
  errorText="Test error"
  genericSelectFieldId="rek-oa-status-type"
  input={
    Object {
      "onChange": [MockFunction],
      "value": Immutable.List [
        "One",
        "Two",
      ],
    }
  }
  itemsList={
    Array [
      Object {
        "text": "Please choose an option",
        "value": null,
      },
      Object {
        "text": "Green",
        "value": 454120,
      },
      Object {
        "text": "Gold",
        "value": 454121,
      },
      Object {
        "text": "Hybrid",
        "value": 454122,
      },
      Object {
        "text": "Bronze",
        "value": 454123,
      },
    ]
  }
  label="Test label"
  locale={
    Object {
      "label": "Test label",
    }
  }
  meta={
    Object {
      "error": "Test error",
    }
  }
  onChange={[MockFunction]}
  placeholder="Test placeholder"
  selectPrompt="Please select an option"
  value={
    Array [
      "One",
      "Two",
    ]
  }
/>
`;

exports[`OAStatusTypeField component should render when given a default value field props 1`] = `
<Memo(NewGenericSelectField)
  canUnselect={true}
  defaultValue="afr"
  error={false}
  errorText=""
  genericSelectFieldId="rek-oa-status-type"
  itemsList={
    Array [
      Object {
        "text": "Please choose an option",
        "value": null,
      },
      Object {
        "text": "Green",
        "value": 454120,
      },
      Object {
        "text": "Gold",
        "value": 454121,
      },
      Object {
        "text": "Hybrid",
        "value": 454122,
      },
      Object {
        "text": "Bronze",
        "value": 454123,
      },
    ]
  }
  label="Test label"
  locale={
    Object {
      "label": "Test label",
    }
  }
  placeholder="Test placeholder"
  selectPrompt="Please select an option"
  value={
    Array [
      "afr",
    ]
  }
/>
`;

exports[`OAStatusTypeField component should render with given field props 1`] = `
<Memo(NewGenericSelectField)
  canUnselect={true}
  error={true}
  errorText="Test error"
  genericSelectFieldId="rek-oa-status-type"
  input={
    Object {
      "onChange": [MockFunction],
      "value": Array [
        "One",
        "Two",
      ],
    }
  }
  itemsList={
    Array [
      Object {
        "text": "Please choose an option",
        "value": null,
      },
      Object {
        "text": "Green",
        "value": 454120,
      },
      Object {
        "text": "Gold",
        "value": 454121,
      },
      Object {
        "text": "Hybrid",
        "value": 454122,
      },
      Object {
        "text": "Bronze",
        "value": 454123,
      },
    ]
  }
  label="Test label"
  locale={
    Object {
      "label": "Test label",
    }
  }
  meta={
    Object {
      "error": "Test error",
    }
  }
  onChange={[MockFunction]}
  placeholder="Test placeholder"
  selectPrompt="Please select an option"
  value={
    Array [
      "One",
      "Two",
    ]
  }
/>
`;
