// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component NtroFields should not show NTRO data card in the Ntro fields 1`] = `
<Fragment>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <StandardCard
      help={
        Object {
          "buttonLabel": "CLOSE",
          "text": <React.Fragment>
            <h3>
              Creator research statement
            </h3>
            <p>
              For more information about the research statement, click
              <b>
                <a
                  href="https://guides.library.uq.edu.au/for-researchers/uqespace-publications-datasets/ntro-submission-requirements#s-lg-box-20836548"
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                  target="_blank"
                >
                  here
                </a>
              </b>
            </p>
          </React.Fragment>,
          "title": "Author/Creator research statement",
        }
      }
      title="Author/Creator research statement"
    >
      <WithStyles(Grid)
        container={true}
        spacing={1}
      >
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <WithStyles(Typography)>
            Select the option that best describes the significance of the work.
          </WithStyles(Typography)>
          <Field
            SelectDisplayProps={
              Object {
                "id": "significance",
              }
            }
            component={[Function]}
            disabled={false}
            label={
              <span>
                Scale/Significance of work*
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                  (not for public view)
                </span>
              </span>
            }
            name="significance"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          >
            <WithStyles(MenuItem)
              key="454027"
              value={454027}
            >
              Minor
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              key="454026"
              value={454026}
            >
              Major
            </WithStyles(MenuItem)>
          </Field>
        </WithStyles(Grid)>
      </WithStyles(Grid)>
    </StandardCard>
  </WithStyles(Grid)>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <StandardCard
      title="Grant details"
    >
      <Field
        component={[Function]}
        disableDeleteAllGrants={false}
        disabled={false}
        name="grants"
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
  </WithStyles(Grid)>
</Fragment>
`;

exports[`Component NtroFields should render all fields as disabled 1`] = `
<Fragment>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <StandardCard
      help={
        Object {
          "buttonLabel": "CLOSE",
          "text": <React.Fragment>
            <h3>
              Creator research statement
            </h3>
            <p>
              For more information about the research statement, click
              <b>
                <a
                  href="https://guides.library.uq.edu.au/for-researchers/uqespace-publications-datasets/ntro-submission-requirements#s-lg-box-20836548"
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                  target="_blank"
                >
                  here
                </a>
              </b>
            </p>
          </React.Fragment>,
          "title": "Author/Creator research statement",
        }
      }
      title="Author/Creator research statement"
    >
      <WithStyles(Grid)
        container={true}
        spacing={1}
      >
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <WithStyles(Typography)>
            Select the option that best describes the significance of the work.
          </WithStyles(Typography)>
          <Field
            SelectDisplayProps={
              Object {
                "id": "significance",
              }
            }
            component={[Function]}
            disabled={true}
            label={
              <span>
                Scale/Significance of work*
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                  (not for public view)
                </span>
              </span>
            }
            name="significance"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          >
            <WithStyles(MenuItem)
              key="454027"
              value={454027}
            >
              Minor
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              key="454026"
              value={454026}
            >
              Major
            </WithStyles(MenuItem)>
          </Field>
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          style={
            Object {
              "marginTop": 24,
            }
          }
          xs={12}
        >
          <Field
            component={[Function]}
            description="Remember to include substantiation of your major or minor scale/significance claim above."
            disabled={true}
            fullWidth={true}
            maxValue={2000}
            name="impactStatement"
            required={true}
            title={
              <span>
                Creator research statement*. Include Background, Contribution and Significance
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                  (not for public view)
                </span>
              </span>
            }
            validate={
              Array [
                [Function],
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
      </WithStyles(Grid)>
    </StandardCard>
  </WithStyles(Grid)>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <StandardCard
      help={
        Object {
          "buttonLabel": "CLOSE",
          "text": <React.Fragment>
            <h3>
              Quality indicators
            </h3>
            <p>
              For more information about each quality indicator option, click

              <b>
                <a
                  href="https://guides.library.uq.edu.au/for-researchers/uqespace-publications-datasets/ntro-submission-requirements#s-lg-box-20836609"
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                  target="_blank"
                >
                  here
                </a>
              </b>
            </p>
          </React.Fragment>,
          "title": "NTRO data",
        }
      }
      title="NTRO data"
    >
      <WithStyles(Grid)
        container={true}
        spacing={2}
      >
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={[Function]}
            description="Enter a brief description of the work"
            disabled={true}
            fullWidth={true}
            maxValue={800}
            name="ntroAbstract"
            title={
              <span>
                Abstract/Description*
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                  (for public view)
                </span>
              </span>
            }
            validate={
              Array [
                [Function],
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={true}
            isValid={[Function]}
            locale={
              Object {
                "form": Object {
                  "locale": Object {
                    "addButtonLabel": <span>
                      Add ISMN
                    </span>,
                    "editButtonLabel": <span>
                      Update ISMN
                    </span>,
                    "inputFieldHint": "Enter ISMN, e.g. 9790720208015",
                    "inputFieldLabel": "ISMN value",
                    "remindToAddText": <span>
                      Please press
                      <b>
                        ENTER
                      </b>
                       or click
                      <b>
                        ADD
                      </b>
                       button to add this value to the list
                    </span>,
                  },
                },
                "header": Object {
                  "locale": Object {
                    "deleteAll": "Remove all items",
                    "deleteAllConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete all items?",
                      "confirmationTitle": "Delete all",
                    },
                    "nameColumn": "ISMN",
                    "reorderColumn": "Reorder items",
                  },
                },
                "row": Object {
                  "locale": Object {
                    "deleteHint": "Remove this item",
                    "deleteRecordConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete this item?",
                      "confirmationTitle": "Delete item",
                    },
                    "editHint": "Edit this item",
                    "moveDownHint": "Move item down the order",
                    "moveUpHint": "Move item up the order",
                  },
                },
              }
            }
            maxCount={5}
            name="fez_record_search_key_ismn"
            remindToAdd={true}
            searchKey={
              Object {
                "order": "rek_ismn_order",
                "value": "rek_ismn",
              }
            }
            transformFunction={[Function]}
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={true}
            inputNormalizer={[Function]}
            isValid={[Function]}
            locale={
              Object {
                "form": Object {
                  "locale": Object {
                    "addButtonLabel": <span>
                      Add ISRC
                    </span>,
                    "editButtonLabel": <span>
                      Update ISRC
                    </span>,
                    "inputFieldHint": "Enter ISRC, e.g. US6R21320619",
                    "inputFieldLabel": "ISRC value",
                    "remindToAddText": <span>
                      Please press
                      <b>
                        ENTER
                      </b>
                       or click
                      <b>
                        ADD
                      </b>
                       button to add this value to the list
                    </span>,
                  },
                },
                "header": Object {
                  "locale": Object {
                    "deleteAll": "Remove all items",
                    "deleteAllConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete all items?",
                      "confirmationTitle": "Delete all",
                    },
                    "nameColumn": "ISRC",
                    "reorderColumn": "Reorder items",
                  },
                },
                "row": Object {
                  "locale": Object {
                    "deleteHint": "Remove this item",
                    "deleteRecordConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete this item?",
                      "confirmationTitle": "Delete item",
                    },
                    "editHint": "Edit this item",
                    "moveDownHint": "Move item down the order",
                    "moveUpHint": "Move item up the order",
                  },
                },
              }
            }
            maxCount={5}
            name="fez_record_search_key_isrc"
            remindToAdd={true}
            searchKey={
              Object {
                "order": "rek_isrc_order",
                "value": "rek_isrc",
              }
            }
            transformFunction={[Function]}
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.memo),
                "Naked": [Function],
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(WithStyles(AutoCompleteAsyncField))",
                "options": Object {
                  "defaultTheme": Object {
                    "breakpoints": Object {
                      "between": [Function],
                      "down": [Function],
                      "keys": Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ],
                      "only": [Function],
                      "up": [Function],
                      "values": Object {
                        "lg": 1280,
                        "md": 960,
                        "sm": 600,
                        "xl": 1920,
                        "xs": 0,
                      },
                      "width": [Function],
                    },
                    "direction": "ltr",
                    "mixins": Object {
                      "gutters": [Function],
                      "toolbar": Object {
                        "@media (min-width:0px) and (orientation: landscape)": Object {
                          "minHeight": 48,
                        },
                        "@media (min-width:600px)": Object {
                          "minHeight": 64,
                        },
                        "minHeight": 56,
                      },
                    },
                    "overrides": Object {},
                    "palette": Object {
                      "action": Object {
                        "active": "rgba(0, 0, 0, 0.54)",
                        "disabled": "rgba(0, 0, 0, 0.26)",
                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                        "hover": "rgba(0, 0, 0, 0.08)",
                        "hoverOpacity": 0.08,
                        "selected": "rgba(0, 0, 0, 0.14)",
                      },
                      "augmentColor": [Function],
                      "background": Object {
                        "default": "#fafafa",
                        "paper": "#fff",
                      },
                      "common": Object {
                        "black": "#000",
                        "white": "#fff",
                      },
                      "contrastThreshold": 3,
                      "divider": "rgba(0, 0, 0, 0.12)",
                      "error": Object {
                        "contrastText": "#fff",
                        "dark": "#d32f2f",
                        "light": "#e57373",
                        "main": "#f44336",
                      },
                      "getContrastText": [Function],
                      "grey": Object {
                        "100": "#f5f5f5",
                        "200": "#eeeeee",
                        "300": "#e0e0e0",
                        "400": "#bdbdbd",
                        "50": "#fafafa",
                        "500": "#9e9e9e",
                        "600": "#757575",
                        "700": "#616161",
                        "800": "#424242",
                        "900": "#212121",
                        "A100": "#d5d5d5",
                        "A200": "#aaaaaa",
                        "A400": "#303030",
                        "A700": "#616161",
                      },
                      "primary": Object {
                        "contrastText": "#fff",
                        "dark": "#303f9f",
                        "light": "#7986cb",
                        "main": "#3f51b5",
                      },
                      "secondary": Object {
                        "contrastText": "#fff",
                        "dark": "#c51162",
                        "light": "#ff4081",
                        "main": "#f50057",
                      },
                      "text": Object {
                        "disabled": "rgba(0, 0, 0, 0.38)",
                        "hint": "rgba(0, 0, 0, 0.38)",
                        "primary": "rgba(0, 0, 0, 0.87)",
                        "secondary": "rgba(0, 0, 0, 0.54)",
                      },
                      "tonalOffset": 0.2,
                      "type": "light",
                    },
                    "props": Object {},
                    "shadows": Array [
                      "none",
                      "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                      "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                      "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                    ],
                    "shape": Object {
                      "borderRadius": 4,
                    },
                    "spacing": Object {
                      "unit": 8,
                    },
                    "transitions": Object {
                      "create": [Function],
                      "duration": Object {
                        "complex": 375,
                        "enteringScreen": 225,
                        "leavingScreen": 195,
                        "short": 250,
                        "shorter": 200,
                        "shortest": 150,
                        "standard": 300,
                      },
                      "easing": Object {
                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                      },
                      "getAutoHeightDuration": [Function],
                    },
                    "typography": Object {
                      "body1": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "lineHeight": "1.46429em",
                      },
                      "body1Next": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.5,
                      },
                      "body2": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "lineHeight": "1.71429em",
                      },
                      "body2Next": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.01071em",
                        "lineHeight": 1.5,
                      },
                      "button": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "textTransform": "uppercase",
                      },
                      "buttonNext": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.02857em",
                        "lineHeight": 1.75,
                        "textTransform": "uppercase",
                      },
                      "caption": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "lineHeight": "1.375em",
                      },
                      "captionNext": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.03333em",
                        "lineHeight": 1.66,
                      },
                      "display1": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "lineHeight": "1.20588em",
                      },
                      "display2": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.8125rem",
                        "fontWeight": 400,
                        "lineHeight": "1.13333em",
                        "marginLeft": "-.02em",
                      },
                      "display3": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "-.02em",
                        "lineHeight": "1.30357em",
                        "marginLeft": "-.02em",
                      },
                      "display4": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "7rem",
                        "fontWeight": 300,
                        "letterSpacing": "-.04em",
                        "lineHeight": "1.14286em",
                        "marginLeft": "-.04em",
                      },
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": 14,
                      "fontWeightLight": 300,
                      "fontWeightMedium": 500,
                      "fontWeightRegular": 400,
                      "h1": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "6rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.01562em",
                        "lineHeight": 1,
                      },
                      "h2": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.75rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.00833em",
                        "lineHeight": 1,
                      },
                      "h3": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.04,
                      },
                      "h4": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00735em",
                        "lineHeight": 1.17,
                      },
                      "h5": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.33,
                      },
                      "h6": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.25rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.0075em",
                        "lineHeight": 1.6,
                      },
                      "headline": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "lineHeight": "1.35417em",
                      },
                      "overline": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.08333em",
                        "lineHeight": 2.66,
                        "textTransform": "uppercase",
                      },
                      "pxToRem": [Function],
                      "round": [Function],
                      "subheading": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "lineHeight": "1.5em",
                      },
                      "subtitle1": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.75,
                      },
                      "subtitle2": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.00714em",
                        "lineHeight": 1.57,
                      },
                      "title": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.3125rem",
                        "fontWeight": 500,
                        "lineHeight": "1.16667em",
                      },
                      "useNextVariants": false,
                    },
                    "zIndex": Object {
                      "appBar": 1100,
                      "drawer": 1200,
                      "mobileStepper": 1000,
                      "modal": 1300,
                      "snackbar": 1400,
                      "tooltip": 1500,
                    },
                  },
                },
                "type": [Function],
              }
            }
            disabled={true}
            floatingLabelText="Series"
            hintText="Enter the name of publication, performance, recording, or event series"
            name="fez_record_search_key_series.rek_series"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={true}
            fullWidth={true}
            label="Volume"
            name="fez_record_search_key_volume_number.rek_volume_number"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={true}
            fullWidth={true}
            label="Issue"
            name="fez_record_search_key_issue_number.rek_issue_number"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={true}
            fullWidth={true}
            label="Start page"
            name="fez_record_search_key_start_page.rek_start_page"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={true}
            fullWidth={true}
            label="End page"
            name="fez_record_search_key_end_page.rek_end_page"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={true}
            fullWidth={true}
            id="rek-total-pages"
            label="Total pages/Extent"
            name="fez_record_search_key_total_pages.rek_total_pages"
            placeholder="Enter total pages, size or duration of work"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={true}
            fullWidth={true}
            label="Physical description"
            name="fez_record_search_key_original_format.rek_original_format"
            placeholder="Building, Exhibition, Performance, Composition"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            SelectDisplayProps={
              Object {
                "id": "rek-audience-size",
              }
            }
            component={[Function]}
            disabled={true}
            label="Audience size"
            name="fez_record_search_key_audience_size.rek_audience_size"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          >
            <WithStyles(MenuItem)
              key="453992"
              value={453992}
            >
              Less than 100
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              key="453993"
              value={453993}
            >
              100 - 500
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              key="453994"
              value={453994}
            >
              Greater than 500
            </WithStyles(MenuItem)>
          </Field>
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={true}
            label="Language"
            multiple={true}
            name="languages"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={true}
            id="quality-indicators"
            label="Quality indicators"
            multiple={true}
            name="qualityIndicators"
            placeholder="Quality indicators"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
      </WithStyles(Grid)>
    </StandardCard>
  </WithStyles(Grid)>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <StandardCard
      title="Grant details"
    >
      <Field
        component={[Function]}
        disableDeleteAllGrants={false}
        disabled={true}
        name="grants"
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
  </WithStyles(Grid)>
</Fragment>
`;

exports[`Component NtroFields should render contribution statement fields as well 1`] = `
<Fragment>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <StandardCard
      help={
        Object {
          "buttonLabel": "CLOSE",
          "text": <React.Fragment>
            <h3>
              Creator research statement
            </h3>
            <p>
              For more information about the research statement, click
              <b>
                <a
                  href="https://guides.library.uq.edu.au/for-researchers/uqespace-publications-datasets/ntro-submission-requirements#s-lg-box-20836548"
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                  target="_blank"
                >
                  here
                </a>
              </b>
            </p>
          </React.Fragment>,
          "title": "Author/Creator research statement",
        }
      }
      title="Author/Creator research statement"
    >
      <WithStyles(Grid)
        container={true}
        spacing={1}
      >
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <WithStyles(Typography)>
            Select the option that best describes the significance of the work.
          </WithStyles(Typography)>
          <Field
            SelectDisplayProps={
              Object {
                "id": "significance",
              }
            }
            component={[Function]}
            disabled={false}
            label={
              <span>
                Scale/Significance of work*
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                  (not for public view)
                </span>
              </span>
            }
            name="significance"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          >
            <WithStyles(MenuItem)
              key="454027"
              value={454027}
            >
              Minor
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              key="454026"
              value={454026}
            >
              Major
            </WithStyles(MenuItem)>
          </Field>
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          style={
            Object {
              "marginTop": 24,
            }
          }
          xs={12}
        >
          <Field
            component={[Function]}
            description="Remember to include substantiation of your major or minor scale/significance claim above."
            disabled={false}
            fullWidth={true}
            maxValue={2000}
            name="impactStatement"
            required={true}
            title={
              <span>
                Creator research statement*. Include Background, Contribution and Significance
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                  (not for public view)
                </span>
              </span>
            }
            validate={
              Array [
                [Function],
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
      </WithStyles(Grid)>
    </StandardCard>
  </WithStyles(Grid)>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <StandardCard
      help={
        Object {
          "buttonLabel": "CLOSE",
          "text": <React.Fragment>
            <h3>
              Quality indicators
            </h3>
            <p>
              For more information about each quality indicator option, click

              <b>
                <a
                  href="https://guides.library.uq.edu.au/for-researchers/uqespace-publications-datasets/ntro-submission-requirements#s-lg-box-20836609"
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                  target="_blank"
                >
                  here
                </a>
              </b>
            </p>
          </React.Fragment>,
          "title": "NTRO data",
        }
      }
      title="NTRO data"
    >
      <WithStyles(Grid)
        container={true}
        spacing={2}
      >
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={[Function]}
            description="Enter a brief description of the work"
            disabled={false}
            fullWidth={true}
            maxValue={800}
            name="ntroAbstract"
            title={
              <span>
                Abstract/Description*
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                  (for public view)
                </span>
              </span>
            }
            validate={
              Array [
                [Function],
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            isValid={[Function]}
            locale={
              Object {
                "form": Object {
                  "locale": Object {
                    "addButtonLabel": <span>
                      Add ISMN
                    </span>,
                    "editButtonLabel": <span>
                      Update ISMN
                    </span>,
                    "inputFieldHint": "Enter ISMN, e.g. 9790720208015",
                    "inputFieldLabel": "ISMN value",
                    "remindToAddText": <span>
                      Please press
                      <b>
                        ENTER
                      </b>
                       or click
                      <b>
                        ADD
                      </b>
                       button to add this value to the list
                    </span>,
                  },
                },
                "header": Object {
                  "locale": Object {
                    "deleteAll": "Remove all items",
                    "deleteAllConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete all items?",
                      "confirmationTitle": "Delete all",
                    },
                    "nameColumn": "ISMN",
                    "reorderColumn": "Reorder items",
                  },
                },
                "row": Object {
                  "locale": Object {
                    "deleteHint": "Remove this item",
                    "deleteRecordConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete this item?",
                      "confirmationTitle": "Delete item",
                    },
                    "editHint": "Edit this item",
                    "moveDownHint": "Move item down the order",
                    "moveUpHint": "Move item up the order",
                  },
                },
              }
            }
            maxCount={5}
            name="fez_record_search_key_ismn"
            remindToAdd={true}
            searchKey={
              Object {
                "order": "rek_ismn_order",
                "value": "rek_ismn",
              }
            }
            transformFunction={[Function]}
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            inputNormalizer={[Function]}
            isValid={[Function]}
            locale={
              Object {
                "form": Object {
                  "locale": Object {
                    "addButtonLabel": <span>
                      Add ISRC
                    </span>,
                    "editButtonLabel": <span>
                      Update ISRC
                    </span>,
                    "inputFieldHint": "Enter ISRC, e.g. US6R21320619",
                    "inputFieldLabel": "ISRC value",
                    "remindToAddText": <span>
                      Please press
                      <b>
                        ENTER
                      </b>
                       or click
                      <b>
                        ADD
                      </b>
                       button to add this value to the list
                    </span>,
                  },
                },
                "header": Object {
                  "locale": Object {
                    "deleteAll": "Remove all items",
                    "deleteAllConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete all items?",
                      "confirmationTitle": "Delete all",
                    },
                    "nameColumn": "ISRC",
                    "reorderColumn": "Reorder items",
                  },
                },
                "row": Object {
                  "locale": Object {
                    "deleteHint": "Remove this item",
                    "deleteRecordConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete this item?",
                      "confirmationTitle": "Delete item",
                    },
                    "editHint": "Edit this item",
                    "moveDownHint": "Move item down the order",
                    "moveUpHint": "Move item up the order",
                  },
                },
              }
            }
            maxCount={5}
            name="fez_record_search_key_isrc"
            remindToAdd={true}
            searchKey={
              Object {
                "order": "rek_isrc_order",
                "value": "rek_isrc",
              }
            }
            transformFunction={[Function]}
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.memo),
                "Naked": [Function],
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(WithStyles(AutoCompleteAsyncField))",
                "options": Object {
                  "defaultTheme": Object {
                    "breakpoints": Object {
                      "between": [Function],
                      "down": [Function],
                      "keys": Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ],
                      "only": [Function],
                      "up": [Function],
                      "values": Object {
                        "lg": 1280,
                        "md": 960,
                        "sm": 600,
                        "xl": 1920,
                        "xs": 0,
                      },
                      "width": [Function],
                    },
                    "direction": "ltr",
                    "mixins": Object {
                      "gutters": [Function],
                      "toolbar": Object {
                        "@media (min-width:0px) and (orientation: landscape)": Object {
                          "minHeight": 48,
                        },
                        "@media (min-width:600px)": Object {
                          "minHeight": 64,
                        },
                        "minHeight": 56,
                      },
                    },
                    "overrides": Object {},
                    "palette": Object {
                      "action": Object {
                        "active": "rgba(0, 0, 0, 0.54)",
                        "disabled": "rgba(0, 0, 0, 0.26)",
                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                        "hover": "rgba(0, 0, 0, 0.08)",
                        "hoverOpacity": 0.08,
                        "selected": "rgba(0, 0, 0, 0.14)",
                      },
                      "augmentColor": [Function],
                      "background": Object {
                        "default": "#fafafa",
                        "paper": "#fff",
                      },
                      "common": Object {
                        "black": "#000",
                        "white": "#fff",
                      },
                      "contrastThreshold": 3,
                      "divider": "rgba(0, 0, 0, 0.12)",
                      "error": Object {
                        "contrastText": "#fff",
                        "dark": "#d32f2f",
                        "light": "#e57373",
                        "main": "#f44336",
                      },
                      "getContrastText": [Function],
                      "grey": Object {
                        "100": "#f5f5f5",
                        "200": "#eeeeee",
                        "300": "#e0e0e0",
                        "400": "#bdbdbd",
                        "50": "#fafafa",
                        "500": "#9e9e9e",
                        "600": "#757575",
                        "700": "#616161",
                        "800": "#424242",
                        "900": "#212121",
                        "A100": "#d5d5d5",
                        "A200": "#aaaaaa",
                        "A400": "#303030",
                        "A700": "#616161",
                      },
                      "primary": Object {
                        "contrastText": "#fff",
                        "dark": "#303f9f",
                        "light": "#7986cb",
                        "main": "#3f51b5",
                      },
                      "secondary": Object {
                        "contrastText": "#fff",
                        "dark": "#c51162",
                        "light": "#ff4081",
                        "main": "#f50057",
                      },
                      "text": Object {
                        "disabled": "rgba(0, 0, 0, 0.38)",
                        "hint": "rgba(0, 0, 0, 0.38)",
                        "primary": "rgba(0, 0, 0, 0.87)",
                        "secondary": "rgba(0, 0, 0, 0.54)",
                      },
                      "tonalOffset": 0.2,
                      "type": "light",
                    },
                    "props": Object {},
                    "shadows": Array [
                      "none",
                      "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                      "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                      "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                    ],
                    "shape": Object {
                      "borderRadius": 4,
                    },
                    "spacing": Object {
                      "unit": 8,
                    },
                    "transitions": Object {
                      "create": [Function],
                      "duration": Object {
                        "complex": 375,
                        "enteringScreen": 225,
                        "leavingScreen": 195,
                        "short": 250,
                        "shorter": 200,
                        "shortest": 150,
                        "standard": 300,
                      },
                      "easing": Object {
                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                      },
                      "getAutoHeightDuration": [Function],
                    },
                    "typography": Object {
                      "body1": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "lineHeight": "1.46429em",
                      },
                      "body1Next": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.5,
                      },
                      "body2": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "lineHeight": "1.71429em",
                      },
                      "body2Next": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.01071em",
                        "lineHeight": 1.5,
                      },
                      "button": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "textTransform": "uppercase",
                      },
                      "buttonNext": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.02857em",
                        "lineHeight": 1.75,
                        "textTransform": "uppercase",
                      },
                      "caption": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "lineHeight": "1.375em",
                      },
                      "captionNext": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.03333em",
                        "lineHeight": 1.66,
                      },
                      "display1": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "lineHeight": "1.20588em",
                      },
                      "display2": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.8125rem",
                        "fontWeight": 400,
                        "lineHeight": "1.13333em",
                        "marginLeft": "-.02em",
                      },
                      "display3": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "-.02em",
                        "lineHeight": "1.30357em",
                        "marginLeft": "-.02em",
                      },
                      "display4": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "7rem",
                        "fontWeight": 300,
                        "letterSpacing": "-.04em",
                        "lineHeight": "1.14286em",
                        "marginLeft": "-.04em",
                      },
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": 14,
                      "fontWeightLight": 300,
                      "fontWeightMedium": 500,
                      "fontWeightRegular": 400,
                      "h1": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "6rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.01562em",
                        "lineHeight": 1,
                      },
                      "h2": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.75rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.00833em",
                        "lineHeight": 1,
                      },
                      "h3": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.04,
                      },
                      "h4": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00735em",
                        "lineHeight": 1.17,
                      },
                      "h5": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.33,
                      },
                      "h6": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.25rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.0075em",
                        "lineHeight": 1.6,
                      },
                      "headline": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "lineHeight": "1.35417em",
                      },
                      "overline": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.08333em",
                        "lineHeight": 2.66,
                        "textTransform": "uppercase",
                      },
                      "pxToRem": [Function],
                      "round": [Function],
                      "subheading": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "lineHeight": "1.5em",
                      },
                      "subtitle1": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.75,
                      },
                      "subtitle2": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.00714em",
                        "lineHeight": 1.57,
                      },
                      "title": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.3125rem",
                        "fontWeight": 500,
                        "lineHeight": "1.16667em",
                      },
                      "useNextVariants": false,
                    },
                    "zIndex": Object {
                      "appBar": 1100,
                      "drawer": 1200,
                      "mobileStepper": 1000,
                      "modal": 1300,
                      "snackbar": 1400,
                      "tooltip": 1500,
                    },
                  },
                },
                "type": [Function],
              }
            }
            disabled={false}
            floatingLabelText="Series"
            hintText="Enter the name of publication, performance, recording, or event series"
            name="fez_record_search_key_series.rek_series"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="Volume"
            name="fez_record_search_key_volume_number.rek_volume_number"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="Issue"
            name="fez_record_search_key_issue_number.rek_issue_number"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="Start page"
            name="fez_record_search_key_start_page.rek_start_page"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="End page"
            name="fez_record_search_key_end_page.rek_end_page"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            id="rek-total-pages"
            label="Total pages/Extent"
            name="fez_record_search_key_total_pages.rek_total_pages"
            placeholder="Enter total pages, size or duration of work"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="Physical description"
            name="fez_record_search_key_original_format.rek_original_format"
            placeholder="Building, Exhibition, Performance, Composition"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            SelectDisplayProps={
              Object {
                "id": "rek-audience-size",
              }
            }
            component={[Function]}
            disabled={false}
            label="Audience size"
            name="fez_record_search_key_audience_size.rek_audience_size"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          >
            <WithStyles(MenuItem)
              key="453992"
              value={453992}
            >
              Less than 100
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              key="453993"
              value={453993}
            >
              100 - 500
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              key="453994"
              value={453994}
            >
              Greater than 500
            </WithStyles(MenuItem)>
          </Field>
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            label="Language"
            multiple={true}
            name="languages"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            id="quality-indicators"
            label="Quality indicators"
            multiple={true}
            name="qualityIndicators"
            placeholder="Quality indicators"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
      </WithStyles(Grid)>
    </StandardCard>
  </WithStyles(Grid)>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <StandardCard
      title="Grant details"
    >
      <Field
        component={[Function]}
        disableDeleteAllGrants={false}
        disabled={false}
        name="grants"
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
  </WithStyles(Grid)>
</Fragment>
`;

exports[`Component NtroFields should render default view 1`] = `
<Fragment>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <StandardCard
      help={
        Object {
          "buttonLabel": "CLOSE",
          "text": <React.Fragment>
            <h3>
              Quality indicators
            </h3>
            <p>
              For more information about each quality indicator option, click

              <b>
                <a
                  href="https://guides.library.uq.edu.au/for-researchers/uqespace-publications-datasets/ntro-submission-requirements#s-lg-box-20836609"
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                  target="_blank"
                >
                  here
                </a>
              </b>
            </p>
          </React.Fragment>,
          "title": "NTRO data",
        }
      }
      title="NTRO data"
    >
      <WithStyles(Grid)
        container={true}
        spacing={2}
      >
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={[Function]}
            description="Enter a brief description of the work"
            disabled={false}
            fullWidth={true}
            maxValue={800}
            name="ntroAbstract"
            title={
              <span>
                Abstract/Description*
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                  (for public view)
                </span>
              </span>
            }
            validate={
              Array [
                [Function],
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            isValid={[Function]}
            locale={
              Object {
                "form": Object {
                  "locale": Object {
                    "addButtonLabel": <span>
                      Add ISMN
                    </span>,
                    "editButtonLabel": <span>
                      Update ISMN
                    </span>,
                    "inputFieldHint": "Enter ISMN, e.g. 9790720208015",
                    "inputFieldLabel": "ISMN value",
                    "remindToAddText": <span>
                      Please press
                      <b>
                        ENTER
                      </b>
                       or click
                      <b>
                        ADD
                      </b>
                       button to add this value to the list
                    </span>,
                  },
                },
                "header": Object {
                  "locale": Object {
                    "deleteAll": "Remove all items",
                    "deleteAllConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete all items?",
                      "confirmationTitle": "Delete all",
                    },
                    "nameColumn": "ISMN",
                    "reorderColumn": "Reorder items",
                  },
                },
                "row": Object {
                  "locale": Object {
                    "deleteHint": "Remove this item",
                    "deleteRecordConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete this item?",
                      "confirmationTitle": "Delete item",
                    },
                    "editHint": "Edit this item",
                    "moveDownHint": "Move item down the order",
                    "moveUpHint": "Move item up the order",
                  },
                },
              }
            }
            maxCount={5}
            name="fez_record_search_key_ismn"
            remindToAdd={true}
            searchKey={
              Object {
                "order": "rek_ismn_order",
                "value": "rek_ismn",
              }
            }
            transformFunction={[Function]}
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            inputNormalizer={[Function]}
            isValid={[Function]}
            locale={
              Object {
                "form": Object {
                  "locale": Object {
                    "addButtonLabel": <span>
                      Add ISRC
                    </span>,
                    "editButtonLabel": <span>
                      Update ISRC
                    </span>,
                    "inputFieldHint": "Enter ISRC, e.g. US6R21320619",
                    "inputFieldLabel": "ISRC value",
                    "remindToAddText": <span>
                      Please press
                      <b>
                        ENTER
                      </b>
                       or click
                      <b>
                        ADD
                      </b>
                       button to add this value to the list
                    </span>,
                  },
                },
                "header": Object {
                  "locale": Object {
                    "deleteAll": "Remove all items",
                    "deleteAllConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete all items?",
                      "confirmationTitle": "Delete all",
                    },
                    "nameColumn": "ISRC",
                    "reorderColumn": "Reorder items",
                  },
                },
                "row": Object {
                  "locale": Object {
                    "deleteHint": "Remove this item",
                    "deleteRecordConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete this item?",
                      "confirmationTitle": "Delete item",
                    },
                    "editHint": "Edit this item",
                    "moveDownHint": "Move item down the order",
                    "moveUpHint": "Move item up the order",
                  },
                },
              }
            }
            maxCount={5}
            name="fez_record_search_key_isrc"
            remindToAdd={true}
            searchKey={
              Object {
                "order": "rek_isrc_order",
                "value": "rek_isrc",
              }
            }
            transformFunction={[Function]}
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.memo),
                "Naked": [Function],
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(WithStyles(AutoCompleteAsyncField))",
                "options": Object {
                  "defaultTheme": Object {
                    "breakpoints": Object {
                      "between": [Function],
                      "down": [Function],
                      "keys": Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ],
                      "only": [Function],
                      "up": [Function],
                      "values": Object {
                        "lg": 1280,
                        "md": 960,
                        "sm": 600,
                        "xl": 1920,
                        "xs": 0,
                      },
                      "width": [Function],
                    },
                    "direction": "ltr",
                    "mixins": Object {
                      "gutters": [Function],
                      "toolbar": Object {
                        "@media (min-width:0px) and (orientation: landscape)": Object {
                          "minHeight": 48,
                        },
                        "@media (min-width:600px)": Object {
                          "minHeight": 64,
                        },
                        "minHeight": 56,
                      },
                    },
                    "overrides": Object {},
                    "palette": Object {
                      "action": Object {
                        "active": "rgba(0, 0, 0, 0.54)",
                        "disabled": "rgba(0, 0, 0, 0.26)",
                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                        "hover": "rgba(0, 0, 0, 0.08)",
                        "hoverOpacity": 0.08,
                        "selected": "rgba(0, 0, 0, 0.14)",
                      },
                      "augmentColor": [Function],
                      "background": Object {
                        "default": "#fafafa",
                        "paper": "#fff",
                      },
                      "common": Object {
                        "black": "#000",
                        "white": "#fff",
                      },
                      "contrastThreshold": 3,
                      "divider": "rgba(0, 0, 0, 0.12)",
                      "error": Object {
                        "contrastText": "#fff",
                        "dark": "#d32f2f",
                        "light": "#e57373",
                        "main": "#f44336",
                      },
                      "getContrastText": [Function],
                      "grey": Object {
                        "100": "#f5f5f5",
                        "200": "#eeeeee",
                        "300": "#e0e0e0",
                        "400": "#bdbdbd",
                        "50": "#fafafa",
                        "500": "#9e9e9e",
                        "600": "#757575",
                        "700": "#616161",
                        "800": "#424242",
                        "900": "#212121",
                        "A100": "#d5d5d5",
                        "A200": "#aaaaaa",
                        "A400": "#303030",
                        "A700": "#616161",
                      },
                      "primary": Object {
                        "contrastText": "#fff",
                        "dark": "#303f9f",
                        "light": "#7986cb",
                        "main": "#3f51b5",
                      },
                      "secondary": Object {
                        "contrastText": "#fff",
                        "dark": "#c51162",
                        "light": "#ff4081",
                        "main": "#f50057",
                      },
                      "text": Object {
                        "disabled": "rgba(0, 0, 0, 0.38)",
                        "hint": "rgba(0, 0, 0, 0.38)",
                        "primary": "rgba(0, 0, 0, 0.87)",
                        "secondary": "rgba(0, 0, 0, 0.54)",
                      },
                      "tonalOffset": 0.2,
                      "type": "light",
                    },
                    "props": Object {},
                    "shadows": Array [
                      "none",
                      "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                      "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                      "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                    ],
                    "shape": Object {
                      "borderRadius": 4,
                    },
                    "spacing": Object {
                      "unit": 8,
                    },
                    "transitions": Object {
                      "create": [Function],
                      "duration": Object {
                        "complex": 375,
                        "enteringScreen": 225,
                        "leavingScreen": 195,
                        "short": 250,
                        "shorter": 200,
                        "shortest": 150,
                        "standard": 300,
                      },
                      "easing": Object {
                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                      },
                      "getAutoHeightDuration": [Function],
                    },
                    "typography": Object {
                      "body1": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "lineHeight": "1.46429em",
                      },
                      "body1Next": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.5,
                      },
                      "body2": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "lineHeight": "1.71429em",
                      },
                      "body2Next": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.01071em",
                        "lineHeight": 1.5,
                      },
                      "button": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "textTransform": "uppercase",
                      },
                      "buttonNext": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.02857em",
                        "lineHeight": 1.75,
                        "textTransform": "uppercase",
                      },
                      "caption": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "lineHeight": "1.375em",
                      },
                      "captionNext": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.03333em",
                        "lineHeight": 1.66,
                      },
                      "display1": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "lineHeight": "1.20588em",
                      },
                      "display2": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.8125rem",
                        "fontWeight": 400,
                        "lineHeight": "1.13333em",
                        "marginLeft": "-.02em",
                      },
                      "display3": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "-.02em",
                        "lineHeight": "1.30357em",
                        "marginLeft": "-.02em",
                      },
                      "display4": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "7rem",
                        "fontWeight": 300,
                        "letterSpacing": "-.04em",
                        "lineHeight": "1.14286em",
                        "marginLeft": "-.04em",
                      },
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": 14,
                      "fontWeightLight": 300,
                      "fontWeightMedium": 500,
                      "fontWeightRegular": 400,
                      "h1": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "6rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.01562em",
                        "lineHeight": 1,
                      },
                      "h2": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.75rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.00833em",
                        "lineHeight": 1,
                      },
                      "h3": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.04,
                      },
                      "h4": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00735em",
                        "lineHeight": 1.17,
                      },
                      "h5": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.33,
                      },
                      "h6": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.25rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.0075em",
                        "lineHeight": 1.6,
                      },
                      "headline": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "lineHeight": "1.35417em",
                      },
                      "overline": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.08333em",
                        "lineHeight": 2.66,
                        "textTransform": "uppercase",
                      },
                      "pxToRem": [Function],
                      "round": [Function],
                      "subheading": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "lineHeight": "1.5em",
                      },
                      "subtitle1": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.75,
                      },
                      "subtitle2": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.00714em",
                        "lineHeight": 1.57,
                      },
                      "title": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.3125rem",
                        "fontWeight": 500,
                        "lineHeight": "1.16667em",
                      },
                      "useNextVariants": false,
                    },
                    "zIndex": Object {
                      "appBar": 1100,
                      "drawer": 1200,
                      "mobileStepper": 1000,
                      "modal": 1300,
                      "snackbar": 1400,
                      "tooltip": 1500,
                    },
                  },
                },
                "type": [Function],
              }
            }
            disabled={false}
            floatingLabelText="Series"
            hintText="Enter the name of publication, performance, recording, or event series"
            name="fez_record_search_key_series.rek_series"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="Volume"
            name="fez_record_search_key_volume_number.rek_volume_number"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="Issue"
            name="fez_record_search_key_issue_number.rek_issue_number"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="Start page"
            name="fez_record_search_key_start_page.rek_start_page"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="End page"
            name="fez_record_search_key_end_page.rek_end_page"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            id="rek-total-pages"
            label="Total pages/Extent"
            name="fez_record_search_key_total_pages.rek_total_pages"
            placeholder="Enter total pages, size or duration of work"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="Physical description"
            name="fez_record_search_key_original_format.rek_original_format"
            placeholder="Building, Exhibition, Performance, Composition"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            SelectDisplayProps={
              Object {
                "id": "rek-audience-size",
              }
            }
            component={[Function]}
            disabled={false}
            label="Audience size"
            name="fez_record_search_key_audience_size.rek_audience_size"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          >
            <WithStyles(MenuItem)
              key="453992"
              value={453992}
            >
              Less than 100
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              key="453993"
              value={453993}
            >
              100 - 500
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              key="453994"
              value={453994}
            >
              Greater than 500
            </WithStyles(MenuItem)>
          </Field>
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            label="Language"
            multiple={true}
            name="languages"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            id="quality-indicators"
            label="Quality indicators"
            multiple={true}
            name="qualityIndicators"
            placeholder="Quality indicators"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
      </WithStyles(Grid)>
    </StandardCard>
  </WithStyles(Grid)>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <StandardCard
      title="Grant details"
    >
      <Field
        component={[Function]}
        disableDeleteAllGrants={false}
        disabled={false}
        name="grants"
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
  </WithStyles(Grid)>
</Fragment>
`;

exports[`Component NtroFields should render with grants component hidden 1`] = `
<Fragment>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <StandardCard
      help={
        Object {
          "buttonLabel": "CLOSE",
          "text": <React.Fragment>
            <h3>
              Creator research statement
            </h3>
            <p>
              For more information about the research statement, click
              <b>
                <a
                  href="https://guides.library.uq.edu.au/for-researchers/uqespace-publications-datasets/ntro-submission-requirements#s-lg-box-20836548"
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                  target="_blank"
                >
                  here
                </a>
              </b>
            </p>
          </React.Fragment>,
          "title": "Author/Creator research statement",
        }
      }
      title="Author/Creator research statement"
    >
      <WithStyles(Grid)
        container={true}
        spacing={1}
      >
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <WithStyles(Typography)>
            Select the option that best describes the significance of the work.
          </WithStyles(Typography)>
          <Field
            SelectDisplayProps={
              Object {
                "id": "significance",
              }
            }
            component={[Function]}
            disabled={false}
            label={
              <span>
                Scale/Significance of work*
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                  (not for public view)
                </span>
              </span>
            }
            name="significance"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          >
            <WithStyles(MenuItem)
              key="454027"
              value={454027}
            >
              Minor
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              key="454026"
              value={454026}
            >
              Major
            </WithStyles(MenuItem)>
          </Field>
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          style={
            Object {
              "marginTop": 24,
            }
          }
          xs={12}
        >
          <Field
            component={[Function]}
            description="Remember to include substantiation of your major or minor scale/significance claim above."
            disabled={false}
            fullWidth={true}
            maxValue={2000}
            name="impactStatement"
            required={true}
            title={
              <span>
                Creator research statement*. Include Background, Contribution and Significance
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                  (not for public view)
                </span>
              </span>
            }
            validate={
              Array [
                [Function],
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
      </WithStyles(Grid)>
    </StandardCard>
  </WithStyles(Grid)>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <StandardCard
      help={
        Object {
          "buttonLabel": "CLOSE",
          "text": <React.Fragment>
            <h3>
              Quality indicators
            </h3>
            <p>
              For more information about each quality indicator option, click

              <b>
                <a
                  href="https://guides.library.uq.edu.au/for-researchers/uqespace-publications-datasets/ntro-submission-requirements#s-lg-box-20836609"
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                  target="_blank"
                >
                  here
                </a>
              </b>
            </p>
          </React.Fragment>,
          "title": "NTRO data",
        }
      }
      title="NTRO data"
    >
      <WithStyles(Grid)
        container={true}
        spacing={2}
      >
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={[Function]}
            description="Enter a brief description of the work"
            disabled={false}
            fullWidth={true}
            maxValue={800}
            name="ntroAbstract"
            title={
              <span>
                Abstract/Description*
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                  (for public view)
                </span>
              </span>
            }
            validate={
              Array [
                [Function],
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            isValid={[Function]}
            locale={
              Object {
                "form": Object {
                  "locale": Object {
                    "addButtonLabel": <span>
                      Add ISMN
                    </span>,
                    "editButtonLabel": <span>
                      Update ISMN
                    </span>,
                    "inputFieldHint": "Enter ISMN, e.g. 9790720208015",
                    "inputFieldLabel": "ISMN value",
                    "remindToAddText": <span>
                      Please press
                      <b>
                        ENTER
                      </b>
                       or click
                      <b>
                        ADD
                      </b>
                       button to add this value to the list
                    </span>,
                  },
                },
                "header": Object {
                  "locale": Object {
                    "deleteAll": "Remove all items",
                    "deleteAllConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete all items?",
                      "confirmationTitle": "Delete all",
                    },
                    "nameColumn": "ISMN",
                    "reorderColumn": "Reorder items",
                  },
                },
                "row": Object {
                  "locale": Object {
                    "deleteHint": "Remove this item",
                    "deleteRecordConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete this item?",
                      "confirmationTitle": "Delete item",
                    },
                    "editHint": "Edit this item",
                    "moveDownHint": "Move item down the order",
                    "moveUpHint": "Move item up the order",
                  },
                },
              }
            }
            maxCount={5}
            name="fez_record_search_key_ismn"
            remindToAdd={true}
            searchKey={
              Object {
                "order": "rek_ismn_order",
                "value": "rek_ismn",
              }
            }
            transformFunction={[Function]}
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            inputNormalizer={[Function]}
            isValid={[Function]}
            locale={
              Object {
                "form": Object {
                  "locale": Object {
                    "addButtonLabel": <span>
                      Add ISRC
                    </span>,
                    "editButtonLabel": <span>
                      Update ISRC
                    </span>,
                    "inputFieldHint": "Enter ISRC, e.g. US6R21320619",
                    "inputFieldLabel": "ISRC value",
                    "remindToAddText": <span>
                      Please press
                      <b>
                        ENTER
                      </b>
                       or click
                      <b>
                        ADD
                      </b>
                       button to add this value to the list
                    </span>,
                  },
                },
                "header": Object {
                  "locale": Object {
                    "deleteAll": "Remove all items",
                    "deleteAllConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete all items?",
                      "confirmationTitle": "Delete all",
                    },
                    "nameColumn": "ISRC",
                    "reorderColumn": "Reorder items",
                  },
                },
                "row": Object {
                  "locale": Object {
                    "deleteHint": "Remove this item",
                    "deleteRecordConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete this item?",
                      "confirmationTitle": "Delete item",
                    },
                    "editHint": "Edit this item",
                    "moveDownHint": "Move item down the order",
                    "moveUpHint": "Move item up the order",
                  },
                },
              }
            }
            maxCount={5}
            name="fez_record_search_key_isrc"
            remindToAdd={true}
            searchKey={
              Object {
                "order": "rek_isrc_order",
                "value": "rek_isrc",
              }
            }
            transformFunction={[Function]}
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.memo),
                "Naked": [Function],
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(WithStyles(AutoCompleteAsyncField))",
                "options": Object {
                  "defaultTheme": Object {
                    "breakpoints": Object {
                      "between": [Function],
                      "down": [Function],
                      "keys": Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ],
                      "only": [Function],
                      "up": [Function],
                      "values": Object {
                        "lg": 1280,
                        "md": 960,
                        "sm": 600,
                        "xl": 1920,
                        "xs": 0,
                      },
                      "width": [Function],
                    },
                    "direction": "ltr",
                    "mixins": Object {
                      "gutters": [Function],
                      "toolbar": Object {
                        "@media (min-width:0px) and (orientation: landscape)": Object {
                          "minHeight": 48,
                        },
                        "@media (min-width:600px)": Object {
                          "minHeight": 64,
                        },
                        "minHeight": 56,
                      },
                    },
                    "overrides": Object {},
                    "palette": Object {
                      "action": Object {
                        "active": "rgba(0, 0, 0, 0.54)",
                        "disabled": "rgba(0, 0, 0, 0.26)",
                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                        "hover": "rgba(0, 0, 0, 0.08)",
                        "hoverOpacity": 0.08,
                        "selected": "rgba(0, 0, 0, 0.14)",
                      },
                      "augmentColor": [Function],
                      "background": Object {
                        "default": "#fafafa",
                        "paper": "#fff",
                      },
                      "common": Object {
                        "black": "#000",
                        "white": "#fff",
                      },
                      "contrastThreshold": 3,
                      "divider": "rgba(0, 0, 0, 0.12)",
                      "error": Object {
                        "contrastText": "#fff",
                        "dark": "#d32f2f",
                        "light": "#e57373",
                        "main": "#f44336",
                      },
                      "getContrastText": [Function],
                      "grey": Object {
                        "100": "#f5f5f5",
                        "200": "#eeeeee",
                        "300": "#e0e0e0",
                        "400": "#bdbdbd",
                        "50": "#fafafa",
                        "500": "#9e9e9e",
                        "600": "#757575",
                        "700": "#616161",
                        "800": "#424242",
                        "900": "#212121",
                        "A100": "#d5d5d5",
                        "A200": "#aaaaaa",
                        "A400": "#303030",
                        "A700": "#616161",
                      },
                      "primary": Object {
                        "contrastText": "#fff",
                        "dark": "#303f9f",
                        "light": "#7986cb",
                        "main": "#3f51b5",
                      },
                      "secondary": Object {
                        "contrastText": "#fff",
                        "dark": "#c51162",
                        "light": "#ff4081",
                        "main": "#f50057",
                      },
                      "text": Object {
                        "disabled": "rgba(0, 0, 0, 0.38)",
                        "hint": "rgba(0, 0, 0, 0.38)",
                        "primary": "rgba(0, 0, 0, 0.87)",
                        "secondary": "rgba(0, 0, 0, 0.54)",
                      },
                      "tonalOffset": 0.2,
                      "type": "light",
                    },
                    "props": Object {},
                    "shadows": Array [
                      "none",
                      "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                      "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                      "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                    ],
                    "shape": Object {
                      "borderRadius": 4,
                    },
                    "spacing": Object {
                      "unit": 8,
                    },
                    "transitions": Object {
                      "create": [Function],
                      "duration": Object {
                        "complex": 375,
                        "enteringScreen": 225,
                        "leavingScreen": 195,
                        "short": 250,
                        "shorter": 200,
                        "shortest": 150,
                        "standard": 300,
                      },
                      "easing": Object {
                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                      },
                      "getAutoHeightDuration": [Function],
                    },
                    "typography": Object {
                      "body1": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "lineHeight": "1.46429em",
                      },
                      "body1Next": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.5,
                      },
                      "body2": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "lineHeight": "1.71429em",
                      },
                      "body2Next": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.01071em",
                        "lineHeight": 1.5,
                      },
                      "button": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "textTransform": "uppercase",
                      },
                      "buttonNext": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.02857em",
                        "lineHeight": 1.75,
                        "textTransform": "uppercase",
                      },
                      "caption": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "lineHeight": "1.375em",
                      },
                      "captionNext": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.03333em",
                        "lineHeight": 1.66,
                      },
                      "display1": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "lineHeight": "1.20588em",
                      },
                      "display2": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.8125rem",
                        "fontWeight": 400,
                        "lineHeight": "1.13333em",
                        "marginLeft": "-.02em",
                      },
                      "display3": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "-.02em",
                        "lineHeight": "1.30357em",
                        "marginLeft": "-.02em",
                      },
                      "display4": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "7rem",
                        "fontWeight": 300,
                        "letterSpacing": "-.04em",
                        "lineHeight": "1.14286em",
                        "marginLeft": "-.04em",
                      },
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": 14,
                      "fontWeightLight": 300,
                      "fontWeightMedium": 500,
                      "fontWeightRegular": 400,
                      "h1": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "6rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.01562em",
                        "lineHeight": 1,
                      },
                      "h2": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.75rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.00833em",
                        "lineHeight": 1,
                      },
                      "h3": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.04,
                      },
                      "h4": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00735em",
                        "lineHeight": 1.17,
                      },
                      "h5": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.33,
                      },
                      "h6": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.25rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.0075em",
                        "lineHeight": 1.6,
                      },
                      "headline": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "lineHeight": "1.35417em",
                      },
                      "overline": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.08333em",
                        "lineHeight": 2.66,
                        "textTransform": "uppercase",
                      },
                      "pxToRem": [Function],
                      "round": [Function],
                      "subheading": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "lineHeight": "1.5em",
                      },
                      "subtitle1": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.75,
                      },
                      "subtitle2": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.00714em",
                        "lineHeight": 1.57,
                      },
                      "title": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.3125rem",
                        "fontWeight": 500,
                        "lineHeight": "1.16667em",
                      },
                      "useNextVariants": false,
                    },
                    "zIndex": Object {
                      "appBar": 1100,
                      "drawer": 1200,
                      "mobileStepper": 1000,
                      "modal": 1300,
                      "snackbar": 1400,
                      "tooltip": 1500,
                    },
                  },
                },
                "type": [Function],
              }
            }
            disabled={false}
            floatingLabelText="Series"
            hintText="Enter the name of publication, performance, recording, or event series"
            name="fez_record_search_key_series.rek_series"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="Volume"
            name="fez_record_search_key_volume_number.rek_volume_number"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="Issue"
            name="fez_record_search_key_issue_number.rek_issue_number"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="Start page"
            name="fez_record_search_key_start_page.rek_start_page"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="End page"
            name="fez_record_search_key_end_page.rek_end_page"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            id="rek-total-pages"
            label="Total pages/Extent"
            name="fez_record_search_key_total_pages.rek_total_pages"
            placeholder="Enter total pages, size or duration of work"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="Physical description"
            name="fez_record_search_key_original_format.rek_original_format"
            placeholder="Building, Exhibition, Performance, Composition"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            SelectDisplayProps={
              Object {
                "id": "rek-audience-size",
              }
            }
            component={[Function]}
            disabled={false}
            label="Audience size"
            name="fez_record_search_key_audience_size.rek_audience_size"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          >
            <WithStyles(MenuItem)
              key="453992"
              value={453992}
            >
              Less than 100
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              key="453993"
              value={453993}
            >
              100 - 500
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              key="453994"
              value={453994}
            >
              Greater than 500
            </WithStyles(MenuItem)>
          </Field>
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            label="Language"
            multiple={true}
            name="languages"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            id="quality-indicators"
            label="Quality indicators"
            multiple={true}
            name="qualityIndicators"
            placeholder="Quality indicators"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
      </WithStyles(Grid)>
    </StandardCard>
  </WithStyles(Grid)>
</Fragment>
`;

exports[`Component NtroFields should show significance field even if contribution field isnt empty 1`] = `
<Fragment>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <StandardCard
      help={
        Object {
          "buttonLabel": "CLOSE",
          "text": <React.Fragment>
            <h3>
              Creator research statement
            </h3>
            <p>
              For more information about the research statement, click
              <b>
                <a
                  href="https://guides.library.uq.edu.au/for-researchers/uqespace-publications-datasets/ntro-submission-requirements#s-lg-box-20836548"
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                  target="_blank"
                >
                  here
                </a>
              </b>
            </p>
          </React.Fragment>,
          "title": "Author/Creator research statement",
        }
      }
      title="Author/Creator research statement"
    >
      <WithStyles(Grid)
        container={true}
        spacing={1}
      >
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <WithStyles(Typography)>
            Select the option that best describes the significance of the work.
          </WithStyles(Typography)>
          <Field
            SelectDisplayProps={
              Object {
                "id": "significance",
              }
            }
            component={[Function]}
            disabled={false}
            label={
              <span>
                Scale/Significance of work*
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                  (not for public view)
                </span>
              </span>
            }
            name="significance"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          >
            <WithStyles(MenuItem)
              key="454027"
              value={454027}
            >
              Minor
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              key="454026"
              value={454026}
            >
              Major
            </WithStyles(MenuItem)>
          </Field>
        </WithStyles(Grid)>
      </WithStyles(Grid)>
    </StandardCard>
  </WithStyles(Grid)>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <StandardCard
      help={
        Object {
          "buttonLabel": "CLOSE",
          "text": <React.Fragment>
            <h3>
              Quality indicators
            </h3>
            <p>
              For more information about each quality indicator option, click

              <b>
                <a
                  href="https://guides.library.uq.edu.au/for-researchers/uqespace-publications-datasets/ntro-submission-requirements#s-lg-box-20836609"
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                  target="_blank"
                >
                  here
                </a>
              </b>
            </p>
          </React.Fragment>,
          "title": "NTRO data",
        }
      }
      title="NTRO data"
    >
      <WithStyles(Grid)
        container={true}
        spacing={2}
      >
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={[Function]}
            description="Enter a brief description of the work"
            disabled={false}
            fullWidth={true}
            maxValue={800}
            name="ntroAbstract"
            title={
              <span>
                Abstract/Description*
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                  (for public view)
                </span>
              </span>
            }
            validate={
              Array [
                [Function],
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            isValid={[Function]}
            locale={
              Object {
                "form": Object {
                  "locale": Object {
                    "addButtonLabel": <span>
                      Add ISMN
                    </span>,
                    "editButtonLabel": <span>
                      Update ISMN
                    </span>,
                    "inputFieldHint": "Enter ISMN, e.g. 9790720208015",
                    "inputFieldLabel": "ISMN value",
                    "remindToAddText": <span>
                      Please press
                      <b>
                        ENTER
                      </b>
                       or click
                      <b>
                        ADD
                      </b>
                       button to add this value to the list
                    </span>,
                  },
                },
                "header": Object {
                  "locale": Object {
                    "deleteAll": "Remove all items",
                    "deleteAllConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete all items?",
                      "confirmationTitle": "Delete all",
                    },
                    "nameColumn": "ISMN",
                    "reorderColumn": "Reorder items",
                  },
                },
                "row": Object {
                  "locale": Object {
                    "deleteHint": "Remove this item",
                    "deleteRecordConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete this item?",
                      "confirmationTitle": "Delete item",
                    },
                    "editHint": "Edit this item",
                    "moveDownHint": "Move item down the order",
                    "moveUpHint": "Move item up the order",
                  },
                },
              }
            }
            maxCount={5}
            name="fez_record_search_key_ismn"
            remindToAdd={true}
            searchKey={
              Object {
                "order": "rek_ismn_order",
                "value": "rek_ismn",
              }
            }
            transformFunction={[Function]}
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            inputNormalizer={[Function]}
            isValid={[Function]}
            locale={
              Object {
                "form": Object {
                  "locale": Object {
                    "addButtonLabel": <span>
                      Add ISRC
                    </span>,
                    "editButtonLabel": <span>
                      Update ISRC
                    </span>,
                    "inputFieldHint": "Enter ISRC, e.g. US6R21320619",
                    "inputFieldLabel": "ISRC value",
                    "remindToAddText": <span>
                      Please press
                      <b>
                        ENTER
                      </b>
                       or click
                      <b>
                        ADD
                      </b>
                       button to add this value to the list
                    </span>,
                  },
                },
                "header": Object {
                  "locale": Object {
                    "deleteAll": "Remove all items",
                    "deleteAllConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete all items?",
                      "confirmationTitle": "Delete all",
                    },
                    "nameColumn": "ISRC",
                    "reorderColumn": "Reorder items",
                  },
                },
                "row": Object {
                  "locale": Object {
                    "deleteHint": "Remove this item",
                    "deleteRecordConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete this item?",
                      "confirmationTitle": "Delete item",
                    },
                    "editHint": "Edit this item",
                    "moveDownHint": "Move item down the order",
                    "moveUpHint": "Move item up the order",
                  },
                },
              }
            }
            maxCount={5}
            name="fez_record_search_key_isrc"
            remindToAdd={true}
            searchKey={
              Object {
                "order": "rek_isrc_order",
                "value": "rek_isrc",
              }
            }
            transformFunction={[Function]}
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.memo),
                "Naked": [Function],
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(WithStyles(AutoCompleteAsyncField))",
                "options": Object {
                  "defaultTheme": Object {
                    "breakpoints": Object {
                      "between": [Function],
                      "down": [Function],
                      "keys": Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ],
                      "only": [Function],
                      "up": [Function],
                      "values": Object {
                        "lg": 1280,
                        "md": 960,
                        "sm": 600,
                        "xl": 1920,
                        "xs": 0,
                      },
                      "width": [Function],
                    },
                    "direction": "ltr",
                    "mixins": Object {
                      "gutters": [Function],
                      "toolbar": Object {
                        "@media (min-width:0px) and (orientation: landscape)": Object {
                          "minHeight": 48,
                        },
                        "@media (min-width:600px)": Object {
                          "minHeight": 64,
                        },
                        "minHeight": 56,
                      },
                    },
                    "overrides": Object {},
                    "palette": Object {
                      "action": Object {
                        "active": "rgba(0, 0, 0, 0.54)",
                        "disabled": "rgba(0, 0, 0, 0.26)",
                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                        "hover": "rgba(0, 0, 0, 0.08)",
                        "hoverOpacity": 0.08,
                        "selected": "rgba(0, 0, 0, 0.14)",
                      },
                      "augmentColor": [Function],
                      "background": Object {
                        "default": "#fafafa",
                        "paper": "#fff",
                      },
                      "common": Object {
                        "black": "#000",
                        "white": "#fff",
                      },
                      "contrastThreshold": 3,
                      "divider": "rgba(0, 0, 0, 0.12)",
                      "error": Object {
                        "contrastText": "#fff",
                        "dark": "#d32f2f",
                        "light": "#e57373",
                        "main": "#f44336",
                      },
                      "getContrastText": [Function],
                      "grey": Object {
                        "100": "#f5f5f5",
                        "200": "#eeeeee",
                        "300": "#e0e0e0",
                        "400": "#bdbdbd",
                        "50": "#fafafa",
                        "500": "#9e9e9e",
                        "600": "#757575",
                        "700": "#616161",
                        "800": "#424242",
                        "900": "#212121",
                        "A100": "#d5d5d5",
                        "A200": "#aaaaaa",
                        "A400": "#303030",
                        "A700": "#616161",
                      },
                      "primary": Object {
                        "contrastText": "#fff",
                        "dark": "#303f9f",
                        "light": "#7986cb",
                        "main": "#3f51b5",
                      },
                      "secondary": Object {
                        "contrastText": "#fff",
                        "dark": "#c51162",
                        "light": "#ff4081",
                        "main": "#f50057",
                      },
                      "text": Object {
                        "disabled": "rgba(0, 0, 0, 0.38)",
                        "hint": "rgba(0, 0, 0, 0.38)",
                        "primary": "rgba(0, 0, 0, 0.87)",
                        "secondary": "rgba(0, 0, 0, 0.54)",
                      },
                      "tonalOffset": 0.2,
                      "type": "light",
                    },
                    "props": Object {},
                    "shadows": Array [
                      "none",
                      "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                      "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                      "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                      "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                      "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                      "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                      "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                      "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                      "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                      "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                      "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                      "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                      "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                      "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                      "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                      "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                      "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                      "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                      "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                      "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                      "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                    ],
                    "shape": Object {
                      "borderRadius": 4,
                    },
                    "spacing": Object {
                      "unit": 8,
                    },
                    "transitions": Object {
                      "create": [Function],
                      "duration": Object {
                        "complex": 375,
                        "enteringScreen": 225,
                        "leavingScreen": 195,
                        "short": 250,
                        "shorter": 200,
                        "shortest": 150,
                        "standard": 300,
                      },
                      "easing": Object {
                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                      },
                      "getAutoHeightDuration": [Function],
                    },
                    "typography": Object {
                      "body1": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "lineHeight": "1.46429em",
                      },
                      "body1Next": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.5,
                      },
                      "body2": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "lineHeight": "1.71429em",
                      },
                      "body2Next": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.01071em",
                        "lineHeight": 1.5,
                      },
                      "button": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "textTransform": "uppercase",
                      },
                      "buttonNext": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.02857em",
                        "lineHeight": 1.75,
                        "textTransform": "uppercase",
                      },
                      "caption": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "lineHeight": "1.375em",
                      },
                      "captionNext": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.03333em",
                        "lineHeight": 1.66,
                      },
                      "display1": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "lineHeight": "1.20588em",
                      },
                      "display2": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.8125rem",
                        "fontWeight": 400,
                        "lineHeight": "1.13333em",
                        "marginLeft": "-.02em",
                      },
                      "display3": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "-.02em",
                        "lineHeight": "1.30357em",
                        "marginLeft": "-.02em",
                      },
                      "display4": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "7rem",
                        "fontWeight": 300,
                        "letterSpacing": "-.04em",
                        "lineHeight": "1.14286em",
                        "marginLeft": "-.04em",
                      },
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": 14,
                      "fontWeightLight": 300,
                      "fontWeightMedium": 500,
                      "fontWeightRegular": 400,
                      "h1": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "6rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.01562em",
                        "lineHeight": 1,
                      },
                      "h2": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.75rem",
                        "fontWeight": 300,
                        "letterSpacing": "-0.00833em",
                        "lineHeight": 1,
                      },
                      "h3": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.04,
                      },
                      "h4": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00735em",
                        "lineHeight": 1.17,
                      },
                      "h5": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "letterSpacing": "0em",
                        "lineHeight": 1.33,
                      },
                      "h6": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.25rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.0075em",
                        "lineHeight": 1.6,
                      },
                      "headline": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 400,
                        "lineHeight": "1.35417em",
                      },
                      "overline": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.08333em",
                        "lineHeight": 2.66,
                        "textTransform": "uppercase",
                      },
                      "pxToRem": [Function],
                      "round": [Function],
                      "subheading": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "lineHeight": "1.5em",
                      },
                      "subtitle1": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 400,
                        "letterSpacing": "0.00938em",
                        "lineHeight": 1.75,
                      },
                      "subtitle2": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 500,
                        "letterSpacing": "0.00714em",
                        "lineHeight": 1.57,
                      },
                      "title": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.3125rem",
                        "fontWeight": 500,
                        "lineHeight": "1.16667em",
                      },
                      "useNextVariants": false,
                    },
                    "zIndex": Object {
                      "appBar": 1100,
                      "drawer": 1200,
                      "mobileStepper": 1000,
                      "modal": 1300,
                      "snackbar": 1400,
                      "tooltip": 1500,
                    },
                  },
                },
                "type": [Function],
              }
            }
            disabled={false}
            floatingLabelText="Series"
            hintText="Enter the name of publication, performance, recording, or event series"
            name="fez_record_search_key_series.rek_series"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="Volume"
            name="fez_record_search_key_volume_number.rek_volume_number"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="Issue"
            name="fez_record_search_key_issue_number.rek_issue_number"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="Start page"
            name="fez_record_search_key_start_page.rek_start_page"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={3}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="End page"
            name="fez_record_search_key_end_page.rek_end_page"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            id="rek-total-pages"
            label="Total pages/Extent"
            name="fez_record_search_key_total_pages.rek_total_pages"
            placeholder="Enter total pages, size or duration of work"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="Physical description"
            name="fez_record_search_key_original_format.rek_original_format"
            placeholder="Building, Exhibition, Performance, Composition"
            type="text"
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            SelectDisplayProps={
              Object {
                "id": "rek-audience-size",
              }
            }
            component={[Function]}
            disabled={false}
            label="Audience size"
            name="fez_record_search_key_audience_size.rek_audience_size"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          >
            <WithStyles(MenuItem)
              key="453992"
              value={453992}
            >
              Less than 100
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              key="453993"
              value={453993}
            >
              100 - 500
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              key="453994"
              value={453994}
            >
              Greater than 500
            </WithStyles(MenuItem)>
          </Field>
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            label="Language"
            multiple={true}
            name="languages"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
        <WithStyles(Grid)
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            component={[Function]}
            disabled={false}
            id="quality-indicators"
            label="Quality indicators"
            multiple={true}
            name="qualityIndicators"
            placeholder="Quality indicators"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(Grid)>
      </WithStyles(Grid)>
    </StandardCard>
  </WithStyles(Grid)>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <StandardCard
      title="Grant details"
    >
      <Field
        component={[Function]}
        disableDeleteAllGrants={false}
        disabled={false}
        name="grants"
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
  </WithStyles(Grid)>
</Fragment>
`;
