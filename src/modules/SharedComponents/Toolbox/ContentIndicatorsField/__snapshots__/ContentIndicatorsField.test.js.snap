// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContentIndicatorsField component should mark dropdown as disabled when all indicators have been selected 1`] = `
<GenericSelectField
  disabled={true}
  error={false}
  errorText=""
  hideLabel={false}
  itemsList={
    Array [
      Object {
        "disabled": false,
        "text": "Scholarship of Teaching and Learning",
        "value": 454079,
      },
      Object {
        "disabled": false,
        "text": "Protocol",
        "value": 454080,
      },
      Object {
        "disabled": false,
        "text": "Case Study",
        "value": 454081,
      },
    ]
  }
  locale={
    Object {
      "label": undefined,
    }
  }
  meta={
    Object {
      "initial": Immutable.List [
        Object {
          "text": "Scholarship of Teaching and Learning",
          "value": 454079,
        },
        Object {
          "text": "Protocol",
          "value": 454080,
        },
        Object {
          "text": "Case Study",
          "value": 454081,
        },
      ],
    }
  }
  selectedValue={Array []}
/>
`;

exports[`ContentIndicatorsField component should render default view 1`] = `
<GenericSelectField
  disabled={false}
  error={false}
  errorText=""
  hideLabel={false}
  itemsList={
    Array [
      Object {
        "disabled": false,
        "text": "Scholarship of Teaching and Learning",
        "value": 454079,
      },
      Object {
        "disabled": false,
        "text": "Protocol",
        "value": 454080,
      },
      Object {
        "disabled": false,
        "text": "Case Study",
        "value": 454081,
      },
    ]
  }
  locale={
    Object {
      "label": undefined,
    }
  }
  selectedValue={Array []}
/>
`;

exports[`ContentIndicatorsField component should render with given field props 1`] = `
<GenericSelectField
  disabled={false}
  error={true}
  errorText="Test error"
  hideLabel={false}
  input={
    Object {
      "onChange": [MockFunction],
      "value": Array [
        454079,
        454080,
      ],
    }
  }
  itemsList={
    Array [
      Object {
        "disabled": false,
        "text": "Scholarship of Teaching and Learning",
        "value": 454079,
      },
      Object {
        "disabled": false,
        "text": "Protocol",
        "value": 454080,
      },
      Object {
        "disabled": false,
        "text": "Case Study",
        "value": 454081,
      },
    ]
  }
  label="Test label"
  locale={
    Object {
      "label": "Test label",
    }
  }
  meta={
    Object {
      "error": "Test error",
    }
  }
  onChange={[MockFunction]}
  placeholder="Test placeholder"
  selectedValue={
    Array [
      454079,
      454080,
    ]
  }
/>
`;

exports[`ContentIndicatorsField component should render with given field props 2`] = `
<GenericSelectField
  disabled={false}
  error={true}
  errorText="Test error"
  hideLabel={false}
  input={
    Object {
      "value": Immutable.List [
        454079,
        454080,
      ],
    }
  }
  itemsList={
    Array [
      Object {
        "disabled": false,
        "text": "Scholarship of Teaching and Learning",
        "value": 454079,
      },
      Object {
        "disabled": false,
        "text": "Protocol",
        "value": 454080,
      },
      Object {
        "disabled": false,
        "text": "Case Study",
        "value": 454081,
      },
    ]
  }
  label="Test label"
  locale={
    Object {
      "label": "Test label",
    }
  }
  meta={
    Object {
      "error": "Test error",
    }
  }
  placeholder="Test placeholder"
  selectedValue={
    Array [
      454079,
      454080,
    ]
  }
/>
`;
