// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AutoCompleteAsyncField component should call filter function on itemsList 1`] = `
<div
  className="root"
>
  <label
    hidden={true}
    id="Test-label"
  >
    Test
  </label>
  <Downshift
    aria-label="Test"
    defaultHighlightedIndex={null}
    defaultInputValue="test 1"
    defaultIsOpen={false}
    defaultSelectedItem={null}
    environment={[Window]}
    getA11yStatusMessage={[Function]}
    id="Test"
    itemToString={[MockFunction]}
    onChange={[MockFunction]}
    onInputValueChange={[Function]}
    onOuterClick={[Function]}
    onSelect={[Function]}
    onStateChange={[Function]}
    onUserAction={[Function]}
    scrollIntoView={[Function]}
    selectedItem={null}
    selectedItemChanged={[Function]}
    stateReducer={[Function]}
    suppressRefError={false}
  >
    <Component />
  </Downshift>
</div>
`;

exports[`AutoCompleteAsyncField component should call filter function on itemsList 2`] = `
<Downshift
  aria-label="Test"
  defaultHighlightedIndex={null}
  defaultInputValue="test 1"
  defaultIsOpen={false}
  defaultSelectedItem={null}
  environment={[Window]}
  getA11yStatusMessage={[Function]}
  id="Test"
  itemToString={[MockFunction]}
  onChange={[MockFunction]}
  onInputValueChange={[Function]}
  onOuterClick={[Function]}
  onSelect={[Function]}
  onStateChange={[Function]}
  onUserAction={[Function]}
  scrollIntoView={[Function]}
  selectedItem={null}
  selectedItemChanged={[Function]}
  stateReducer={[Function]}
  suppressRefError={false}
>
  <Component />
</Downshift>
`;

exports[`AutoCompleteAsyncField component should call filter function on itemsList 3`] = `
<div
  className="container"
>
  <WithStyles(Grid)
    alignContent="flex-end"
    alignItems="flex-end"
    container={true}
    spacing={16}
  >
    <WithStyles(Grid)
      item={true}
      xs={true}
    >
      <WithStyles(TextFieldWrapper)
        InputProps={
          Object {
            "classes": Object {
              "root": "inputRoot",
            },
            "inputRef": [Function],
            "onChange": [Function],
          }
        }
        disabled={false}
        error={true}
        errorText="This field is required"
        fullWidth={true}
        id="Test-input"
        placeholder={null}
        required={true}
        value="tes"
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
  <div>
    <Popper
      disablePortal={true}
      id="downshift-popper"
      open={true}
      placement="bottom-start"
      transition={false}
    >
      <WithStyles(Paper)
        className="paper"
        square={true}
        style={
          Object {
            "width": null,
          }
        }
      >
        <WithStyles(MenuItem)
          button={true}
          key="UQ:123"
          selected={false}
          style={
            Object {
              "fontWeight": 400,
              "height": "auto",
              "whiteSpace": "normal",
            }
          }
        >
          <MenuItemComponent
            suggestion={
              Object {
                "id": "UQ:123",
                "value": "test 1",
              }
            }
          />
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          button={true}
          key="UQ:456"
          selected={false}
          style={
            Object {
              "fontWeight": 400,
              "height": "auto",
              "whiteSpace": "normal",
            }
          }
        >
          <MenuItemComponent
            suggestion={
              Object {
                "id": "UQ:456",
                "value": "test 2",
              }
            }
          />
        </WithStyles(MenuItem)>
      </WithStyles(Paper)>
    </Popper>
  </div>
</div>
`;

exports[`AutoCompleteAsyncField component should call filter function on itemsList 4`] = `
<div
  className="container"
>
  <WithStyles(Grid)
    alignContent="flex-end"
    alignItems="flex-end"
    container={true}
    spacing={16}
  >
    <WithStyles(Grid)
      item={true}
      xs={true}
    >
      <WithStyles(TextFieldWrapper)
        InputProps={
          Object {
            "classes": Object {
              "root": "inputRoot",
            },
            "inputRef": [Function],
          }
        }
        disabled={false}
        error={true}
        errorText="This field is required"
        fullWidth={true}
        id="Test-input"
        placeholder={null}
        required={true}
        value="UQ:123"
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
  <div>
    <Popper
      disablePortal={true}
      id="downshift-popper"
      open={true}
      placement="bottom-start"
      transition={false}
    >
      <WithStyles(Paper)
        className="paper"
        square={true}
        style={
          Object {
            "width": null,
          }
        }
      >
        <WithStyles(MenuItem)
          button={true}
          key="UQ:123"
          selected={false}
          style={
            Object {
              "fontWeight": 400,
              "height": "auto",
              "whiteSpace": "normal",
            }
          }
        >
          <MenuItemComponent
            suggestion={
              Object {
                "id": "UQ:123",
                "value": "test 1",
              }
            }
          />
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          button={true}
          key="UQ:456"
          selected={false}
          style={
            Object {
              "fontWeight": 400,
              "height": "auto",
              "whiteSpace": "normal",
            }
          }
        >
          <MenuItemComponent
            suggestion={
              Object {
                "id": "UQ:456",
                "value": "test 2",
              }
            }
          />
        </WithStyles(MenuItem)>
      </WithStyles(Paper)>
    </Popper>
  </div>
</div>
`;

exports[`AutoCompleteAsyncField component should call filter function on itemsList 5`] = `
<MenuItem
  button={true}
  classes={
    Object {
      "gutters": "MuiMenuItem-gutters-216",
      "root": "MuiMenuItem-root-215",
      "selected": "MuiMenuItem-selected-217",
    }
  }
  component="li"
  disableGutters={false}
  role="menuitem"
  selected={false}
  style={
    Object {
      "fontWeight": 400,
      "height": "auto",
      "whiteSpace": "normal",
    }
  }
>
  <MenuItemComponent
    suggestion={
      Object {
        "id": "UQ:123",
        "value": "test 1",
      }
    }
  />
</MenuItem>
`;

exports[`AutoCompleteAsyncField component should call filter function on itemsList 6`] = `
<WithStyles(ListItemText)
  primary="test 1"
  primaryTypographyProps={
    Object {
      "variant": "body1",
    }
  }
  secondary="UQ:123"
  secondaryTypographyProps={
    Object {
      "variant": "body2",
    }
  }
/>
`;

exports[`AutoCompleteAsyncField component should call filter function on itemsList 7`] = `
<WithStyles(FormControl)
  classes={Object {}}
  disabled={false}
  error={true}
  fullWidth={true}
  required={true}
  variant="standard"
>
  <WithStyles(Input)
    aria-describedby="Test-input-helper-text"
    classes={
      Object {
        "root": "inputRoot",
      }
    }
    fullWidth={true}
    id="Test-input"
    inputProps={
      Object {
        "aria-label": undefined,
        "aria-labelledby": "Test-input-label",
        "id": "Test-input",
        "label": undefined,
      }
    }
    inputRef={[Function]}
    placeholder={null}
    value="UQ:123"
  />
  <WithStyles(WithFormControlContext(FormHelperText))
    id="Test-input-helper-text"
  >
    This field is required
  </WithStyles(WithFormControlContext(FormHelperText))>
</WithStyles(FormControl)>
`;

exports[`AutoCompleteAsyncField component should call filter function on itemsList 8`] = `
<div
  className="container"
>
  <WithStyles(Grid)
    alignContent="flex-end"
    alignItems="flex-end"
    container={true}
    spacing={16}
  >
    <WithStyles(Grid)
      item={true}
      xs={true}
    >
      <WithStyles(TextFieldWrapper)
        InputProps={
          Object {
            "classes": Object {
              "root": "inputRoot",
            },
            "inputRef": [Function],
          }
        }
        disabled={false}
        error={true}
        errorText="This field is required"
        fullWidth={true}
        id="Test-input"
        placeholder={null}
        required={true}
        value="123"
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
  <div>
    <Popper
      disablePortal={true}
      id="downshift-popper"
      open={true}
      placement="bottom-start"
      transition={false}
    >
      <WithStyles(Paper)
        className="paper"
        square={true}
        style={
          Object {
            "width": null,
          }
        }
      >
        <WithStyles(MenuItem)
          button={true}
          key="UQ:123"
          selected={false}
          style={
            Object {
              "fontWeight": 500,
              "height": "auto",
              "whiteSpace": "normal",
            }
          }
        >
          <MenuItemComponent
            suggestion={
              Object {
                "id": "UQ:123",
                "value": "test 1",
              }
            }
          />
        </WithStyles(MenuItem)>
        <WithStyles(MenuItem)
          button={true}
          key="UQ:456"
          selected={true}
          style={
            Object {
              "fontWeight": 400,
              "height": "auto",
              "whiteSpace": "normal",
            }
          }
        >
          <MenuItemComponent
            suggestion={
              Object {
                "id": "UQ:456",
                "value": "test 2",
              }
            }
          />
        </WithStyles(MenuItem)>
      </WithStyles(Paper)>
    </Popper>
  </div>
</div>
`;

exports[`AutoCompleteAsyncField component should call given filter function on itemsList 1`] = `
<div
  className="root"
>
  <label
    hidden={true}
    id="autosuggest-label"
  />
  <Downshift
    aria-label="autosuggest"
    defaultHighlightedIndex={null}
    defaultInputValue=""
    defaultIsOpen={false}
    defaultSelectedItem={null}
    environment={[Window]}
    getA11yStatusMessage={[Function]}
    id="autosuggest"
    itemToString={[MockFunction]}
    onChange={[MockFunction]}
    onInputValueChange={[Function]}
    onOuterClick={[Function]}
    onSelect={[Function]}
    onStateChange={[Function]}
    onUserAction={[Function]}
    scrollIntoView={[Function]}
    selectedItemChanged={[Function]}
    stateReducer={[Function]}
    suppressRefError={false}
  >
    <Component />
  </Downshift>
</div>
`;

exports[`AutoCompleteAsyncField component should have a proper style generator 1`] = `
Object {
  "chip": Object {
    "margin": "4px 2px",
  },
  "container": Object {
    "flexGrow": 1,
    "position": "relative",
  },
  "inputRoot": Object {
    "flexWrap": "wrap",
  },
  "noWrap": Object {
    "flexWrap": "unset",
  },
  "paper": Object {
    "maxHeight": 250,
    "overflowY": "scroll",
    "position": "absolute",
    "zIndex": 999,
  },
  "root": Object {
    "flexGrow": 1,
  },
}
`;

exports[`AutoCompleteAsyncField component should render 1`] = `
<div
  className="root"
>
  <label
    hidden={true}
    id="autosuggest-label"
  />
  <Downshift
    aria-label="autosuggest"
    defaultHighlightedIndex={null}
    defaultInputValue=""
    defaultIsOpen={false}
    defaultSelectedItem={null}
    environment={[Window]}
    getA11yStatusMessage={[Function]}
    id="autosuggest"
    itemToString={[MockFunction]}
    onChange={[MockFunction]}
    onInputValueChange={[Function]}
    onOuterClick={[Function]}
    onSelect={[Function]}
    onStateChange={[Function]}
    onUserAction={[Function]}
    scrollIntoView={[Function]}
    selectedItemChanged={[Function]}
    stateReducer={[Function]}
    suppressRefError={false}
  >
    <Component />
  </Downshift>
</div>
`;

exports[`AutoCompleteAsyncField component should render a spinner while loading 1`] = `
<CircularProgress
  classes={
    Object {
      "circle": "MuiCircularProgress-circle-211",
      "circleDisableShrink": "MuiCircularProgress-circleDisableShrink-214",
      "circleIndeterminate": "MuiCircularProgress-circleIndeterminate-213",
      "circleStatic": "MuiCircularProgress-circleStatic-212",
      "colorPrimary": "MuiCircularProgress-colorPrimary-208",
      "colorSecondary": "MuiCircularProgress-colorSecondary-209",
      "indeterminate": "MuiCircularProgress-indeterminate-207",
      "root": "MuiCircularProgress-root-205",
      "static": "MuiCircularProgress-static-206",
      "svg": "MuiCircularProgress-svg-210",
    }
  }
  color="primary"
  disableShrink={false}
  size={16}
  thickness={3.6}
  value={0}
  variant="indeterminate"
>
  <div
    className="MuiCircularProgress-root-205 MuiCircularProgress-colorPrimary-208 MuiCircularProgress-indeterminate-207"
    role="progressbar"
    style={
      Object {
        "height": 16,
        "width": 16,
      }
    }
  >
    <svg
      className="MuiCircularProgress-svg-210"
      viewBox="22 22 44 44"
    >
      <circle
        className="MuiCircularProgress-circle-211 MuiCircularProgress-circleIndeterminate-213"
        cx={44}
        cy={44}
        fill="none"
        r={20.2}
        strokeWidth={3.6}
        style={Object {}}
      />
    </svg>
  </div>
</CircularProgress>
`;

exports[`AutoCompleteAsyncField component should render as required field 1`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Immutable.Map {},
          },
          Object {
            "type": "return",
            "value": Immutable.Map {},
          },
        ],
      },
      "subscribe": [MockFunction] {
        "calls": Array [
          Array [
            [Function],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <MuiThemeProviderOld
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "graphs": Object {
              "color1": "#d72865",
              "color2": "#1e7d94",
              "color3": "#49075E",
              "color4": "#468fcc",
              "color5": "#f28620",
              "color6": "#333333",
              "color7": "#595959",
            },
            "hexToRGBA": [Function],
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {
              "MUIDataTable": Object {
                "paper": Object {
                  "boxShadow": "none",
                  "margin": 0,
                  "padding": 0,
                },
              },
              "MuiFormLabel": Object {
                "root": Object {
                  "overflow": "hidden",
                  "textOverflow": "ellipsis",
                  "whiteSpace": "nowrap",
                  "width": "100%",
                },
              },
              "MuiMenuItem": Object {
                "root": Object {
                  "&$selected": Object {
                    "backgroundColor": "#4085C6 !important",
                    "color": "#FFFFFF",
                  },
                },
              },
            },
            "palette": Object {
              "accent": Object {
                "dark": "#2a557d",
                "light": "#54acff",
                "main": "#316799",
              },
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#790000",
                "light": "#ff0000",
                "main": "#c80000",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#3b1a59",
                "gradient": Object {
                  "diagonal": Object {
                    "background": "linear-gradient(135deg, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                  "horizontal": Object {
                    "background": "linear-gradient(to right, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                },
                "light": "#962A8B",
                "main": "#51247A",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#333333",
                "light": "#f2f2f2",
                "main": "#595959",
              },
              "success": Object {
                "dark": "#005000",
                "light": "#00a700",
                "main": "#007200",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
              "warning": Object {
                "dark": "#542400",
                "light": "#ff9a57",
                "main": "#bf5000",
              },
              "white": Object {
                "main": "#FFFFFF",
              },
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "status": Object {
              "danger": "#f44336",
              "warning": "#ff9800",
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body1Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "body2Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "buttonNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "captionNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 300,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 300,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 200,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 200,
              "fontWeightMedium": 400,
              "fontWeightRegular": 300,
              "h1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 200,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1,
              },
              "h2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 200,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1,
              },
              "h3": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.04,
              },
              "h4": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.17,
              },
              "h5": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.33,
              },
              "h6": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 400,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "lineHeight": "1.35417em",
              },
              "overline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "lineHeight": "1.5em",
              },
              "subtitle1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
              "suppressDeprecationWarnings": true,
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.3125rem",
                "fontWeight": 400,
                "lineHeight": "1.16667em",
              },
              "useNextVariants": true,
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
      >
        <MuiPickersUtilsProvider
          utils={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
        >
          <AutoCompleteAsyncField
            MenuItemComponent={[Function]}
            allowFreeText={false}
            async={true}
            category={null}
            classes={
              Object {
                "container": "container",
                "inputRoot": "inputRoot",
                "paper": "paper",
                "root": "root",
              }
            }
            disabled={false}
            error={false}
            filter={[Function]}
            floatingLabelText=""
            hintText={null}
            itemToString={[MockFunction]}
            itemsList={Array []}
            itemsListLoading={false}
            loadSuggestions={[MockFunction]}
            maxResults={7}
            onChange={[MockFunction]}
            openOnFocus={false}
            required={true}
            selectedItem={
              Array [
                Object {
                  "id": 1,
                  "value": "Test",
                },
              ]
            }
            selectedValue={null}
            showChips={true}
            showClear={true}
          >
            <div
              className="root"
            >
              <label
                hidden={true}
                id="autosuggest-label"
              />
              <Downshift
                aria-label="autosuggest"
                defaultHighlightedIndex={null}
                defaultInputValue=""
                defaultIsOpen={false}
                defaultSelectedItem={null}
                environment={[Window]}
                getA11yStatusMessage={[Function]}
                id="autosuggest"
                itemToString={[MockFunction]}
                onChange={[MockFunction]}
                onInputValueChange={[Function]}
                onOuterClick={[Function]}
                onSelect={[Function]}
                onStateChange={[Function]}
                onUserAction={[Function]}
                scrollIntoView={[Function]}
                selectedItemChanged={[Function]}
                stateReducer={[Function]}
                suppressRefError={false}
              >
                <div
                  aria-expanded={false}
                  aria-haspopup="listbox"
                  aria-labelledby="autosuggest-label"
                  aria-owns={null}
                  className="container"
                  role="combobox"
                >
                  <WithStyles(Grid)
                    alignContent="flex-end"
                    alignItems="flex-end"
                    container={true}
                    spacing={16}
                  >
                    <Grid
                      alignContent="flex-end"
                      alignItems="flex-end"
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                          "container": "MuiGrid-container-1",
                          "direction-xs-column": "MuiGrid-direction-xs-column-4",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                          "grid-lg-1": "MuiGrid-grid-lg-1-72",
                          "grid-lg-10": "MuiGrid-grid-lg-10-81",
                          "grid-lg-11": "MuiGrid-grid-lg-11-82",
                          "grid-lg-12": "MuiGrid-grid-lg-12-83",
                          "grid-lg-2": "MuiGrid-grid-lg-2-73",
                          "grid-lg-3": "MuiGrid-grid-lg-3-74",
                          "grid-lg-4": "MuiGrid-grid-lg-4-75",
                          "grid-lg-5": "MuiGrid-grid-lg-5-76",
                          "grid-lg-6": "MuiGrid-grid-lg-6-77",
                          "grid-lg-7": "MuiGrid-grid-lg-7-78",
                          "grid-lg-8": "MuiGrid-grid-lg-8-79",
                          "grid-lg-9": "MuiGrid-grid-lg-9-80",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                          "grid-lg-true": "MuiGrid-grid-lg-true-71",
                          "grid-md-1": "MuiGrid-grid-md-1-58",
                          "grid-md-10": "MuiGrid-grid-md-10-67",
                          "grid-md-11": "MuiGrid-grid-md-11-68",
                          "grid-md-12": "MuiGrid-grid-md-12-69",
                          "grid-md-2": "MuiGrid-grid-md-2-59",
                          "grid-md-3": "MuiGrid-grid-md-3-60",
                          "grid-md-4": "MuiGrid-grid-md-4-61",
                          "grid-md-5": "MuiGrid-grid-md-5-62",
                          "grid-md-6": "MuiGrid-grid-md-6-63",
                          "grid-md-7": "MuiGrid-grid-md-7-64",
                          "grid-md-8": "MuiGrid-grid-md-8-65",
                          "grid-md-9": "MuiGrid-grid-md-9-66",
                          "grid-md-auto": "MuiGrid-grid-md-auto-56",
                          "grid-md-true": "MuiGrid-grid-md-true-57",
                          "grid-sm-1": "MuiGrid-grid-sm-1-44",
                          "grid-sm-10": "MuiGrid-grid-sm-10-53",
                          "grid-sm-11": "MuiGrid-grid-sm-11-54",
                          "grid-sm-12": "MuiGrid-grid-sm-12-55",
                          "grid-sm-2": "MuiGrid-grid-sm-2-45",
                          "grid-sm-3": "MuiGrid-grid-sm-3-46",
                          "grid-sm-4": "MuiGrid-grid-sm-4-47",
                          "grid-sm-5": "MuiGrid-grid-sm-5-48",
                          "grid-sm-6": "MuiGrid-grid-sm-6-49",
                          "grid-sm-7": "MuiGrid-grid-sm-7-50",
                          "grid-sm-8": "MuiGrid-grid-sm-8-51",
                          "grid-sm-9": "MuiGrid-grid-sm-9-52",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                          "grid-sm-true": "MuiGrid-grid-sm-true-43",
                          "grid-xl-1": "MuiGrid-grid-xl-1-86",
                          "grid-xl-10": "MuiGrid-grid-xl-10-95",
                          "grid-xl-11": "MuiGrid-grid-xl-11-96",
                          "grid-xl-12": "MuiGrid-grid-xl-12-97",
                          "grid-xl-2": "MuiGrid-grid-xl-2-87",
                          "grid-xl-3": "MuiGrid-grid-xl-3-88",
                          "grid-xl-4": "MuiGrid-grid-xl-4-89",
                          "grid-xl-5": "MuiGrid-grid-xl-5-90",
                          "grid-xl-6": "MuiGrid-grid-xl-6-91",
                          "grid-xl-7": "MuiGrid-grid-xl-7-92",
                          "grid-xl-8": "MuiGrid-grid-xl-8-93",
                          "grid-xl-9": "MuiGrid-grid-xl-9-94",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                          "grid-xl-true": "MuiGrid-grid-xl-true-85",
                          "grid-xs-1": "MuiGrid-grid-xs-1-30",
                          "grid-xs-10": "MuiGrid-grid-xs-10-39",
                          "grid-xs-11": "MuiGrid-grid-xs-11-40",
                          "grid-xs-12": "MuiGrid-grid-xs-12-41",
                          "grid-xs-2": "MuiGrid-grid-xs-2-31",
                          "grid-xs-3": "MuiGrid-grid-xs-3-32",
                          "grid-xs-4": "MuiGrid-grid-xs-4-33",
                          "grid-xs-5": "MuiGrid-grid-xs-5-34",
                          "grid-xs-6": "MuiGrid-grid-xs-6-35",
                          "grid-xs-7": "MuiGrid-grid-xs-7-36",
                          "grid-xs-8": "MuiGrid-grid-xs-8-37",
                          "grid-xs-9": "MuiGrid-grid-xs-9-38",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                          "grid-xs-true": "MuiGrid-grid-xs-true-29",
                          "item": "MuiGrid-item-2",
                          "justify-xs-center": "MuiGrid-justify-xs-center-18",
                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                          "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                          "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                          "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                          "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                        }
                      }
                      component="div"
                      container={true}
                      direction="row"
                      item={false}
                      justify="flex-start"
                      lg={false}
                      md={false}
                      sm={false}
                      spacing={16}
                      wrap="wrap"
                      xl={false}
                      xs={false}
                      zeroMinWidth={false}
                    >
                      <div
                        className="MuiGrid-container-1 MuiGrid-spacing-xs-16-24 MuiGrid-align-items-xs-flex-end-11 MuiGrid-align-content-xs-flex-end-15"
                      >
                        <WithStyles(Grid)
                          item={true}
                          xs={true}
                        >
                          <Grid
                            alignContent="stretch"
                            alignItems="stretch"
                            classes={
                              Object {
                                "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                                "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                                "container": "MuiGrid-container-1",
                                "direction-xs-column": "MuiGrid-direction-xs-column-4",
                                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                                "grid-lg-1": "MuiGrid-grid-lg-1-72",
                                "grid-lg-10": "MuiGrid-grid-lg-10-81",
                                "grid-lg-11": "MuiGrid-grid-lg-11-82",
                                "grid-lg-12": "MuiGrid-grid-lg-12-83",
                                "grid-lg-2": "MuiGrid-grid-lg-2-73",
                                "grid-lg-3": "MuiGrid-grid-lg-3-74",
                                "grid-lg-4": "MuiGrid-grid-lg-4-75",
                                "grid-lg-5": "MuiGrid-grid-lg-5-76",
                                "grid-lg-6": "MuiGrid-grid-lg-6-77",
                                "grid-lg-7": "MuiGrid-grid-lg-7-78",
                                "grid-lg-8": "MuiGrid-grid-lg-8-79",
                                "grid-lg-9": "MuiGrid-grid-lg-9-80",
                                "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                                "grid-lg-true": "MuiGrid-grid-lg-true-71",
                                "grid-md-1": "MuiGrid-grid-md-1-58",
                                "grid-md-10": "MuiGrid-grid-md-10-67",
                                "grid-md-11": "MuiGrid-grid-md-11-68",
                                "grid-md-12": "MuiGrid-grid-md-12-69",
                                "grid-md-2": "MuiGrid-grid-md-2-59",
                                "grid-md-3": "MuiGrid-grid-md-3-60",
                                "grid-md-4": "MuiGrid-grid-md-4-61",
                                "grid-md-5": "MuiGrid-grid-md-5-62",
                                "grid-md-6": "MuiGrid-grid-md-6-63",
                                "grid-md-7": "MuiGrid-grid-md-7-64",
                                "grid-md-8": "MuiGrid-grid-md-8-65",
                                "grid-md-9": "MuiGrid-grid-md-9-66",
                                "grid-md-auto": "MuiGrid-grid-md-auto-56",
                                "grid-md-true": "MuiGrid-grid-md-true-57",
                                "grid-sm-1": "MuiGrid-grid-sm-1-44",
                                "grid-sm-10": "MuiGrid-grid-sm-10-53",
                                "grid-sm-11": "MuiGrid-grid-sm-11-54",
                                "grid-sm-12": "MuiGrid-grid-sm-12-55",
                                "grid-sm-2": "MuiGrid-grid-sm-2-45",
                                "grid-sm-3": "MuiGrid-grid-sm-3-46",
                                "grid-sm-4": "MuiGrid-grid-sm-4-47",
                                "grid-sm-5": "MuiGrid-grid-sm-5-48",
                                "grid-sm-6": "MuiGrid-grid-sm-6-49",
                                "grid-sm-7": "MuiGrid-grid-sm-7-50",
                                "grid-sm-8": "MuiGrid-grid-sm-8-51",
                                "grid-sm-9": "MuiGrid-grid-sm-9-52",
                                "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                                "grid-sm-true": "MuiGrid-grid-sm-true-43",
                                "grid-xl-1": "MuiGrid-grid-xl-1-86",
                                "grid-xl-10": "MuiGrid-grid-xl-10-95",
                                "grid-xl-11": "MuiGrid-grid-xl-11-96",
                                "grid-xl-12": "MuiGrid-grid-xl-12-97",
                                "grid-xl-2": "MuiGrid-grid-xl-2-87",
                                "grid-xl-3": "MuiGrid-grid-xl-3-88",
                                "grid-xl-4": "MuiGrid-grid-xl-4-89",
                                "grid-xl-5": "MuiGrid-grid-xl-5-90",
                                "grid-xl-6": "MuiGrid-grid-xl-6-91",
                                "grid-xl-7": "MuiGrid-grid-xl-7-92",
                                "grid-xl-8": "MuiGrid-grid-xl-8-93",
                                "grid-xl-9": "MuiGrid-grid-xl-9-94",
                                "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                                "grid-xl-true": "MuiGrid-grid-xl-true-85",
                                "grid-xs-1": "MuiGrid-grid-xs-1-30",
                                "grid-xs-10": "MuiGrid-grid-xs-10-39",
                                "grid-xs-11": "MuiGrid-grid-xs-11-40",
                                "grid-xs-12": "MuiGrid-grid-xs-12-41",
                                "grid-xs-2": "MuiGrid-grid-xs-2-31",
                                "grid-xs-3": "MuiGrid-grid-xs-3-32",
                                "grid-xs-4": "MuiGrid-grid-xs-4-33",
                                "grid-xs-5": "MuiGrid-grid-xs-5-34",
                                "grid-xs-6": "MuiGrid-grid-xs-6-35",
                                "grid-xs-7": "MuiGrid-grid-xs-7-36",
                                "grid-xs-8": "MuiGrid-grid-xs-8-37",
                                "grid-xs-9": "MuiGrid-grid-xs-9-38",
                                "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                                "grid-xs-true": "MuiGrid-grid-xs-true-29",
                                "item": "MuiGrid-item-2",
                                "justify-xs-center": "MuiGrid-justify-xs-center-18",
                                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                                "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                                "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                                "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                                "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                                "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                                "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                                "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                                "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                              }
                            }
                            component="div"
                            container={false}
                            direction="row"
                            item={true}
                            justify="flex-start"
                            lg={false}
                            md={false}
                            sm={false}
                            spacing={0}
                            wrap="wrap"
                            xl={false}
                            xs={true}
                            zeroMinWidth={false}
                          >
                            <div
                              className="MuiGrid-item-2 MuiGrid-grid-xs-true-29"
                            >
                              <WithStyles(TextFieldWrapper)
                                InputProps={
                                  Object {
                                    "aria-activedescendant": null,
                                    "aria-autocomplete": "list",
                                    "aria-controls": null,
                                    "aria-labelledby": "autosuggest-label",
                                    "autoComplete": "off",
                                    "classes": Object {
                                      "root": undefined,
                                    },
                                    "endAdornment": <WithStyles(WithFormControlContext(InputAdornment))
                                      position="end"
                                    >
                                      <WithStyles(IconButton)
                                        aria-label="Clear"
                                        id="clear-input"
                                        onClick={[Function]}
                                      >
                                        <pure(ClearIcon) />
                                      </WithStyles(IconButton)>
                                    </WithStyles(WithFormControlContext(InputAdornment))>,
                                    "id": "autosuggest-input",
                                    "inputRef": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onKeyDown": [Function],
                                    "startAdornment": Array [
                                      <WithStyles(Chip)
                                        label="Test"
                                        onDelete={[Function]}
                                        tabIndex={-1}
                                      />,
                                    ],
                                    "value": "",
                                  }
                                }
                                disabled={false}
                                error={false}
                                errorText=""
                                fullWidth={true}
                                id="autosuggest-input"
                                label="autosuggest"
                                placeholder={null}
                                required={true}
                                value=""
                              >
                                <TextFieldWrapper
                                  InputProps={
                                    Object {
                                      "aria-activedescendant": null,
                                      "aria-autocomplete": "list",
                                      "aria-controls": null,
                                      "aria-labelledby": "autosuggest-label",
                                      "autoComplete": "off",
                                      "classes": Object {
                                        "root": undefined,
                                      },
                                      "endAdornment": <WithStyles(WithFormControlContext(InputAdornment))
                                        position="end"
                                      >
                                        <WithStyles(IconButton)
                                          aria-label="Clear"
                                          id="clear-input"
                                          onClick={[Function]}
                                        >
                                          <pure(ClearIcon) />
                                        </WithStyles(IconButton)>
                                      </WithStyles(WithFormControlContext(InputAdornment))>,
                                      "id": "autosuggest-input",
                                      "inputRef": [Function],
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onKeyDown": [Function],
                                      "startAdornment": Array [
                                        <WithStyles(Chip)
                                          label="Test"
                                          onDelete={[Function]}
                                          tabIndex={-1}
                                        />,
                                      ],
                                      "value": "",
                                    }
                                  }
                                  classes={Object {}}
                                  disabled={false}
                                  error={false}
                                  errorText=""
                                  fullWidth={true}
                                  id="autosuggest-input"
                                  label="autosuggest"
                                  placeholder={null}
                                  required={true}
                                  value=""
                                >
                                  <TextField
                                    InputLabelProps={
                                      Object {
                                        "hidden": false,
                                        "htmlFor": "autosuggest-input",
                                        "id": "autosuggest-input-label",
                                        "shrink": undefined,
                                      }
                                    }
                                    InputProps={
                                      Object {
                                        "aria-activedescendant": null,
                                        "aria-autocomplete": "list",
                                        "aria-controls": null,
                                        "aria-labelledby": "autosuggest-label",
                                        "autoComplete": "off",
                                        "classes": Object {
                                          "root": undefined,
                                        },
                                        "endAdornment": <WithStyles(WithFormControlContext(InputAdornment))
                                          position="end"
                                        >
                                          <WithStyles(IconButton)
                                            aria-label="Clear"
                                            id="clear-input"
                                            onClick={[Function]}
                                          >
                                            <pure(ClearIcon) />
                                          </WithStyles(IconButton)>
                                        </WithStyles(WithFormControlContext(InputAdornment))>,
                                        "id": "autosuggest-input",
                                        "inputRef": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onKeyDown": [Function],
                                        "startAdornment": Array [
                                          <WithStyles(Chip)
                                            label="Test"
                                            onDelete={[Function]}
                                            tabIndex={-1}
                                          />,
                                        ],
                                        "value": "",
                                      }
                                    }
                                    classes={Object {}}
                                    disabled={false}
                                    error={false}
                                    fullWidth={true}
                                    id="autosuggest-input"
                                    inputProps={
                                      Object {
                                        "aria-label": "autosuggest",
                                        "aria-labelledby": "autosuggest-input-label",
                                        "id": "autosuggest-input",
                                        "label": "autosuggest",
                                      }
                                    }
                                    label="autosuggest"
                                    placeholder={null}
                                    required={true}
                                    select={false}
                                    value=""
                                    variant="standard"
                                  >
                                    <WithStyles(FormControl)
                                      classes={Object {}}
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      required={true}
                                      variant="standard"
                                    >
                                      <FormControl
                                        classes={
                                          Object {
                                            "fullWidth": "MuiFormControl-fullWidth-101",
                                            "marginDense": "MuiFormControl-marginDense-100",
                                            "marginNormal": "MuiFormControl-marginNormal-99",
                                            "root": "MuiFormControl-root-98",
                                          }
                                        }
                                        component="div"
                                        disabled={false}
                                        error={false}
                                        fullWidth={true}
                                        margin="none"
                                        required={true}
                                        variant="standard"
                                      >
                                        <div
                                          className="MuiFormControl-root-98 MuiFormControl-fullWidth-101"
                                        >
                                          <WithStyles(WithFormControlContext(InputLabel))
                                            hidden={false}
                                            htmlFor="autosuggest-input"
                                            id="autosuggest-input-label"
                                          >
                                            <WithFormControlContext(InputLabel)
                                              classes={
                                                Object {
                                                  "animated": "MuiInputLabel-animated-110",
                                                  "disabled": "MuiInputLabel-disabled-104",
                                                  "error": "MuiInputLabel-error-105",
                                                  "filled": "MuiInputLabel-filled-111",
                                                  "focused": "MuiInputLabel-focused-103",
                                                  "formControl": "MuiInputLabel-formControl-107",
                                                  "marginDense": "MuiInputLabel-marginDense-108",
                                                  "outlined": "MuiInputLabel-outlined-112",
                                                  "required": "MuiInputLabel-required-106",
                                                  "root": "MuiInputLabel-root-102",
                                                  "shrink": "MuiInputLabel-shrink-109",
                                                }
                                              }
                                              hidden={false}
                                              htmlFor="autosuggest-input"
                                              id="autosuggest-input-label"
                                            >
                                              <InputLabel
                                                classes={
                                                  Object {
                                                    "animated": "MuiInputLabel-animated-110",
                                                    "disabled": "MuiInputLabel-disabled-104",
                                                    "error": "MuiInputLabel-error-105",
                                                    "filled": "MuiInputLabel-filled-111",
                                                    "focused": "MuiInputLabel-focused-103",
                                                    "formControl": "MuiInputLabel-formControl-107",
                                                    "marginDense": "MuiInputLabel-marginDense-108",
                                                    "outlined": "MuiInputLabel-outlined-112",
                                                    "required": "MuiInputLabel-required-106",
                                                    "root": "MuiInputLabel-root-102",
                                                    "shrink": "MuiInputLabel-shrink-109",
                                                  }
                                                }
                                                disableAnimation={false}
                                                hidden={false}
                                                htmlFor="autosuggest-input"
                                                id="autosuggest-input-label"
                                                muiFormControl={
                                                  Object {
                                                    "adornedStart": true,
                                                    "disabled": false,
                                                    "error": false,
                                                    "filled": false,
                                                    "focused": false,
                                                    "margin": "none",
                                                    "onBlur": [Function],
                                                    "onEmpty": [Function],
                                                    "onFilled": [Function],
                                                    "onFocus": [Function],
                                                    "required": true,
                                                    "variant": "standard",
                                                  }
                                                }
                                              >
                                                <WithStyles(WithFormControlContext(FormLabel))
                                                  className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110 MuiInputLabel-shrink-109"
                                                  classes={
                                                    Object {
                                                      "disabled": "MuiInputLabel-disabled-104",
                                                      "error": "MuiInputLabel-error-105",
                                                      "focused": "MuiInputLabel-focused-103",
                                                      "required": "MuiInputLabel-required-106",
                                                    }
                                                  }
                                                  data-shrink={true}
                                                  hidden={false}
                                                  htmlFor="autosuggest-input"
                                                  id="autosuggest-input-label"
                                                >
                                                  <WithFormControlContext(FormLabel)
                                                    className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110 MuiInputLabel-shrink-109"
                                                    classes={
                                                      Object {
                                                        "asterisk": "MuiFormLabel-asterisk-119",
                                                        "disabled": "MuiFormLabel-disabled-115 MuiInputLabel-disabled-104",
                                                        "error": "MuiFormLabel-error-116 MuiInputLabel-error-105",
                                                        "filled": "MuiFormLabel-filled-117",
                                                        "focused": "MuiFormLabel-focused-114 MuiInputLabel-focused-103",
                                                        "required": "MuiFormLabel-required-118 MuiInputLabel-required-106",
                                                        "root": "MuiFormLabel-root-113",
                                                      }
                                                    }
                                                    data-shrink={true}
                                                    hidden={false}
                                                    htmlFor="autosuggest-input"
                                                    id="autosuggest-input-label"
                                                  >
                                                    <FormLabel
                                                      className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110 MuiInputLabel-shrink-109"
                                                      classes={
                                                        Object {
                                                          "asterisk": "MuiFormLabel-asterisk-119",
                                                          "disabled": "MuiFormLabel-disabled-115 MuiInputLabel-disabled-104",
                                                          "error": "MuiFormLabel-error-116 MuiInputLabel-error-105",
                                                          "filled": "MuiFormLabel-filled-117",
                                                          "focused": "MuiFormLabel-focused-114 MuiInputLabel-focused-103",
                                                          "required": "MuiFormLabel-required-118 MuiInputLabel-required-106",
                                                          "root": "MuiFormLabel-root-113",
                                                        }
                                                      }
                                                      component="label"
                                                      data-shrink={true}
                                                      hidden={false}
                                                      htmlFor="autosuggest-input"
                                                      id="autosuggest-input-label"
                                                      muiFormControl={
                                                        Object {
                                                          "adornedStart": true,
                                                          "disabled": false,
                                                          "error": false,
                                                          "filled": false,
                                                          "focused": false,
                                                          "margin": "none",
                                                          "onBlur": [Function],
                                                          "onEmpty": [Function],
                                                          "onFilled": [Function],
                                                          "onFocus": [Function],
                                                          "required": true,
                                                          "variant": "standard",
                                                        }
                                                      }
                                                    >
                                                      <label
                                                        className="MuiFormLabel-root-113 MuiFormLabel-required-118 MuiInputLabel-required-106 MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110 MuiInputLabel-shrink-109"
                                                        data-shrink={true}
                                                        hidden={false}
                                                        htmlFor="autosuggest-input"
                                                        id="autosuggest-input-label"
                                                      >
                                                        autosuggest
                                                        <span
                                                          className="MuiFormLabel-asterisk-119"
                                                        >
                                                           *
                                                        </span>
                                                      </label>
                                                    </FormLabel>
                                                  </WithFormControlContext(FormLabel)>
                                                </WithStyles(WithFormControlContext(FormLabel))>
                                              </InputLabel>
                                            </WithFormControlContext(InputLabel)>
                                          </WithStyles(WithFormControlContext(InputLabel))>
                                          <WithStyles(Input)
                                            aria-activedescendant={null}
                                            aria-autocomplete="list"
                                            aria-controls={null}
                                            aria-labelledby="autosuggest-label"
                                            autoComplete="off"
                                            classes={
                                              Object {
                                                "root": undefined,
                                              }
                                            }
                                            endAdornment={
                                              <WithStyles(WithFormControlContext(InputAdornment))
                                                position="end"
                                              >
                                                <WithStyles(IconButton)
                                                  aria-label="Clear"
                                                  id="clear-input"
                                                  onClick={[Function]}
                                                >
                                                  <pure(ClearIcon) />
                                                </WithStyles(IconButton)>
                                              </WithStyles(WithFormControlContext(InputAdornment))>
                                            }
                                            fullWidth={true}
                                            id="autosuggest-input"
                                            inputProps={
                                              Object {
                                                "aria-label": "autosuggest",
                                                "aria-labelledby": "autosuggest-input-label",
                                                "id": "autosuggest-input",
                                                "label": "autosuggest",
                                              }
                                            }
                                            inputRef={[Function]}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder={null}
                                            startAdornment={
                                              Array [
                                                <WithStyles(Chip)
                                                  label="Test"
                                                  onDelete={[Function]}
                                                  tabIndex={-1}
                                                />,
                                              ]
                                            }
                                            value=""
                                          >
                                            <Input
                                              aria-activedescendant={null}
                                              aria-autocomplete="list"
                                              aria-controls={null}
                                              aria-labelledby="autosuggest-label"
                                              autoComplete="off"
                                              classes={
                                                Object {
                                                  "disabled": "MuiInput-disabled-123",
                                                  "error": "MuiInput-error-125",
                                                  "focused": "MuiInput-focused-122",
                                                  "formControl": "MuiInput-formControl-121",
                                                  "fullWidth": "MuiInput-fullWidth-127",
                                                  "input": "MuiInput-input-128",
                                                  "inputMarginDense": "MuiInput-inputMarginDense-129",
                                                  "inputMultiline": "MuiInput-inputMultiline-130",
                                                  "inputType": "MuiInput-inputType-131",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch-132",
                                                  "multiline": "MuiInput-multiline-126",
                                                  "root": "MuiInput-root-120",
                                                  "underline": "MuiInput-underline-124",
                                                }
                                              }
                                              endAdornment={
                                                <WithStyles(WithFormControlContext(InputAdornment))
                                                  position="end"
                                                >
                                                  <WithStyles(IconButton)
                                                    aria-label="Clear"
                                                    id="clear-input"
                                                    onClick={[Function]}
                                                  >
                                                    <pure(ClearIcon) />
                                                  </WithStyles(IconButton)>
                                                </WithStyles(WithFormControlContext(InputAdornment))>
                                              }
                                              fullWidth={true}
                                              id="autosuggest-input"
                                              inputProps={
                                                Object {
                                                  "aria-label": "autosuggest",
                                                  "aria-labelledby": "autosuggest-input-label",
                                                  "id": "autosuggest-input",
                                                  "label": "autosuggest",
                                                }
                                              }
                                              inputRef={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onKeyDown={[Function]}
                                              placeholder={null}
                                              startAdornment={
                                                Array [
                                                  <WithStyles(Chip)
                                                    label="Test"
                                                    onDelete={[Function]}
                                                    tabIndex={-1}
                                                  />,
                                                ]
                                              }
                                              value=""
                                            >
                                              <WithStyles(WithFormControlContext(InputBase))
                                                aria-activedescendant={null}
                                                aria-autocomplete="list"
                                                aria-controls={null}
                                                aria-labelledby="autosuggest-label"
                                                autoComplete="off"
                                                classes={
                                                  Object {
                                                    "disabled": "MuiInput-disabled-123",
                                                    "error": "MuiInput-error-125",
                                                    "focused": "MuiInput-focused-122",
                                                    "formControl": "MuiInput-formControl-121",
                                                    "fullWidth": "MuiInput-fullWidth-127",
                                                    "input": "MuiInput-input-128",
                                                    "inputMarginDense": "MuiInput-inputMarginDense-129",
                                                    "inputMultiline": "MuiInput-inputMultiline-130",
                                                    "inputType": "MuiInput-inputType-131",
                                                    "inputTypeSearch": "MuiInput-inputTypeSearch-132",
                                                    "multiline": "MuiInput-multiline-126",
                                                    "root": "MuiInput-root-120 MuiInput-underline-124",
                                                    "underline": null,
                                                  }
                                                }
                                                endAdornment={
                                                  <WithStyles(WithFormControlContext(InputAdornment))
                                                    position="end"
                                                  >
                                                    <WithStyles(IconButton)
                                                      aria-label="Clear"
                                                      id="clear-input"
                                                      onClick={[Function]}
                                                    >
                                                      <pure(ClearIcon) />
                                                    </WithStyles(IconButton)>
                                                  </WithStyles(WithFormControlContext(InputAdornment))>
                                                }
                                                fullWidth={true}
                                                id="autosuggest-input"
                                                inputComponent="input"
                                                inputProps={
                                                  Object {
                                                    "aria-label": "autosuggest",
                                                    "aria-labelledby": "autosuggest-input-label",
                                                    "id": "autosuggest-input",
                                                    "label": "autosuggest",
                                                  }
                                                }
                                                inputRef={[Function]}
                                                multiline={false}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onKeyDown={[Function]}
                                                placeholder={null}
                                                startAdornment={
                                                  Array [
                                                    <WithStyles(Chip)
                                                      label="Test"
                                                      onDelete={[Function]}
                                                      tabIndex={-1}
                                                    />,
                                                  ]
                                                }
                                                type="text"
                                                value=""
                                              >
                                                <WithFormControlContext(InputBase)
                                                  aria-activedescendant={null}
                                                  aria-autocomplete="list"
                                                  aria-controls={null}
                                                  aria-labelledby="autosuggest-label"
                                                  autoComplete="off"
                                                  classes={
                                                    Object {
                                                      "adornedEnd": "MuiInputBase-adornedEnd-138",
                                                      "adornedStart": "MuiInputBase-adornedStart-137",
                                                      "disabled": "MuiInputBase-disabled-136 MuiInput-disabled-123",
                                                      "error": "MuiInputBase-error-139 MuiInput-error-125",
                                                      "focused": "MuiInputBase-focused-135 MuiInput-focused-122",
                                                      "formControl": "MuiInputBase-formControl-134 MuiInput-formControl-121",
                                                      "fullWidth": "MuiInputBase-fullWidth-142 MuiInput-fullWidth-127",
                                                      "input": "MuiInputBase-input-143 MuiInput-input-128",
                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-149",
                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart-148",
                                                      "inputMarginDense": "MuiInputBase-inputMarginDense-144 MuiInput-inputMarginDense-129",
                                                      "inputMultiline": "MuiInputBase-inputMultiline-145 MuiInput-inputMultiline-130",
                                                      "inputType": "MuiInputBase-inputType-146 MuiInput-inputType-131",
                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch-147 MuiInput-inputTypeSearch-132",
                                                      "marginDense": "MuiInputBase-marginDense-140",
                                                      "multiline": "MuiInputBase-multiline-141 MuiInput-multiline-126",
                                                      "root": "MuiInputBase-root-133 MuiInput-root-120 MuiInput-underline-124",
                                                    }
                                                  }
                                                  endAdornment={
                                                    <WithStyles(WithFormControlContext(InputAdornment))
                                                      position="end"
                                                    >
                                                      <WithStyles(IconButton)
                                                        aria-label="Clear"
                                                        id="clear-input"
                                                        onClick={[Function]}
                                                      >
                                                        <pure(ClearIcon) />
                                                      </WithStyles(IconButton)>
                                                    </WithStyles(WithFormControlContext(InputAdornment))>
                                                  }
                                                  fullWidth={true}
                                                  id="autosuggest-input"
                                                  inputComponent="input"
                                                  inputProps={
                                                    Object {
                                                      "aria-label": "autosuggest",
                                                      "aria-labelledby": "autosuggest-input-label",
                                                      "id": "autosuggest-input",
                                                      "label": "autosuggest",
                                                    }
                                                  }
                                                  inputRef={[Function]}
                                                  multiline={false}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder={null}
                                                  startAdornment={
                                                    Array [
                                                      <WithStyles(Chip)
                                                        label="Test"
                                                        onDelete={[Function]}
                                                        tabIndex={-1}
                                                      />,
                                                    ]
                                                  }
                                                  type="text"
                                                  value=""
                                                >
                                                  <InputBase
                                                    aria-activedescendant={null}
                                                    aria-autocomplete="list"
                                                    aria-controls={null}
                                                    aria-labelledby="autosuggest-label"
                                                    autoComplete="off"
                                                    classes={
                                                      Object {
                                                        "adornedEnd": "MuiInputBase-adornedEnd-138",
                                                        "adornedStart": "MuiInputBase-adornedStart-137",
                                                        "disabled": "MuiInputBase-disabled-136 MuiInput-disabled-123",
                                                        "error": "MuiInputBase-error-139 MuiInput-error-125",
                                                        "focused": "MuiInputBase-focused-135 MuiInput-focused-122",
                                                        "formControl": "MuiInputBase-formControl-134 MuiInput-formControl-121",
                                                        "fullWidth": "MuiInputBase-fullWidth-142 MuiInput-fullWidth-127",
                                                        "input": "MuiInputBase-input-143 MuiInput-input-128",
                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-149",
                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart-148",
                                                        "inputMarginDense": "MuiInputBase-inputMarginDense-144 MuiInput-inputMarginDense-129",
                                                        "inputMultiline": "MuiInputBase-inputMultiline-145 MuiInput-inputMultiline-130",
                                                        "inputType": "MuiInputBase-inputType-146 MuiInput-inputType-131",
                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch-147 MuiInput-inputTypeSearch-132",
                                                        "marginDense": "MuiInputBase-marginDense-140",
                                                        "multiline": "MuiInputBase-multiline-141 MuiInput-multiline-126",
                                                        "root": "MuiInputBase-root-133 MuiInput-root-120 MuiInput-underline-124",
                                                      }
                                                    }
                                                    endAdornment={
                                                      <WithStyles(WithFormControlContext(InputAdornment))
                                                        position="end"
                                                      >
                                                        <WithStyles(IconButton)
                                                          aria-label="Clear"
                                                          id="clear-input"
                                                          onClick={[Function]}
                                                        >
                                                          <pure(ClearIcon) />
                                                        </WithStyles(IconButton)>
                                                      </WithStyles(WithFormControlContext(InputAdornment))>
                                                    }
                                                    fullWidth={true}
                                                    id="autosuggest-input"
                                                    inputComponent="input"
                                                    inputProps={
                                                      Object {
                                                        "aria-label": "autosuggest",
                                                        "aria-labelledby": "autosuggest-input-label",
                                                        "id": "autosuggest-input",
                                                        "label": "autosuggest",
                                                      }
                                                    }
                                                    inputRef={[Function]}
                                                    muiFormControl={
                                                      Object {
                                                        "adornedStart": true,
                                                        "disabled": false,
                                                        "error": false,
                                                        "filled": false,
                                                        "focused": false,
                                                        "margin": "none",
                                                        "onBlur": [Function],
                                                        "onEmpty": [Function],
                                                        "onFilled": [Function],
                                                        "onFocus": [Function],
                                                        "required": true,
                                                        "variant": "standard",
                                                      }
                                                    }
                                                    multiline={false}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder={null}
                                                    startAdornment={
                                                      Array [
                                                        <WithStyles(Chip)
                                                          label="Test"
                                                          onDelete={[Function]}
                                                          tabIndex={-1}
                                                        />,
                                                      ]
                                                    }
                                                    type="text"
                                                    value=""
                                                  >
                                                    <div
                                                      aria-activedescendant={null}
                                                      aria-autocomplete="list"
                                                      aria-controls={null}
                                                      aria-labelledby="autosuggest-label"
                                                      className="MuiInputBase-root-133 MuiInput-root-120 MuiInput-underline-124 MuiInputBase-fullWidth-142 MuiInput-fullWidth-127 MuiInputBase-formControl-134 MuiInput-formControl-121 MuiInputBase-adornedStart-137 MuiInputBase-adornedEnd-138"
                                                      onClick={[Function]}
                                                    >
                                                      <WithStyles(Chip)
                                                        key="1"
                                                        label="Test"
                                                        onDelete={[Function]}
                                                        tabIndex={-1}
                                                      >
                                                        <Chip
                                                          classes={
                                                            Object {
                                                              "avatar": "MuiChip-avatar-162",
                                                              "avatarChildren": "MuiChip-avatarChildren-165",
                                                              "avatarColorPrimary": "MuiChip-avatarColorPrimary-163",
                                                              "avatarColorSecondary": "MuiChip-avatarColorSecondary-164",
                                                              "clickable": "MuiChip-clickable-153",
                                                              "clickableColorPrimary": "MuiChip-clickableColorPrimary-154",
                                                              "clickableColorSecondary": "MuiChip-clickableColorSecondary-155",
                                                              "colorPrimary": "MuiChip-colorPrimary-151",
                                                              "colorSecondary": "MuiChip-colorSecondary-152",
                                                              "deletable": "MuiChip-deletable-156",
                                                              "deletableColorPrimary": "MuiChip-deletableColorPrimary-157",
                                                              "deletableColorSecondary": "MuiChip-deletableColorSecondary-158",
                                                              "deleteIcon": "MuiChip-deleteIcon-170",
                                                              "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary-171",
                                                              "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary-172",
                                                              "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary-173",
                                                              "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary-174",
                                                              "icon": "MuiChip-icon-166",
                                                              "iconColorPrimary": "MuiChip-iconColorPrimary-167",
                                                              "iconColorSecondary": "MuiChip-iconColorSecondary-168",
                                                              "label": "MuiChip-label-169",
                                                              "outlined": "MuiChip-outlined-159",
                                                              "outlinedPrimary": "MuiChip-outlinedPrimary-160",
                                                              "outlinedSecondary": "MuiChip-outlinedSecondary-161",
                                                              "root": "MuiChip-root-150",
                                                            }
                                                          }
                                                          color="default"
                                                          component="div"
                                                          label="Test"
                                                          onDelete={[Function]}
                                                          tabIndex={-1}
                                                          variant="default"
                                                        >
                                                          <div
                                                            className="MuiChip-root-150 MuiChip-deletable-156"
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            role="button"
                                                            tabIndex={-1}
                                                          >
                                                            <span
                                                              className="MuiChip-label-169"
                                                            >
                                                              Test
                                                            </span>
                                                            <pure(Cancel)
                                                              className="MuiChip-deleteIcon-170"
                                                              onClick={[Function]}
                                                            >
                                                              <Cancel
                                                                className="MuiChip-deleteIcon-170"
                                                                onClick={[Function]}
                                                              >
                                                                <WithStyles(SvgIcon)
                                                                  className="MuiChip-deleteIcon-170"
                                                                  onClick={[Function]}
                                                                >
                                                                  <SvgIcon
                                                                    className="MuiChip-deleteIcon-170"
                                                                    classes={
                                                                      Object {
                                                                        "colorAction": "MuiSvgIcon-colorAction-178",
                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-180",
                                                                        "colorError": "MuiSvgIcon-colorError-179",
                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-176",
                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-177",
                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-181",
                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-183",
                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-182",
                                                                        "root": "MuiSvgIcon-root-175",
                                                                      }
                                                                    }
                                                                    color="inherit"
                                                                    component="svg"
                                                                    fontSize="default"
                                                                    onClick={[Function]}
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <svg
                                                                      aria-hidden="true"
                                                                      className="MuiSvgIcon-root-175 MuiChip-deleteIcon-170"
                                                                      focusable="false"
                                                                      onClick={[Function]}
                                                                      role="presentation"
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
                                                                      />
                                                                    </svg>
                                                                  </SvgIcon>
                                                                </WithStyles(SvgIcon)>
                                                              </Cancel>
                                                            </pure(Cancel)>
                                                          </div>
                                                        </Chip>
                                                      </WithStyles(Chip)>
                                                      <input
                                                        aria-invalid={false}
                                                        aria-label="autosuggest"
                                                        aria-labelledby="autosuggest-input-label"
                                                        autoComplete="off"
                                                        className="MuiInputBase-input-143 MuiInput-input-128 MuiInputBase-inputAdornedStart-148 MuiInputBase-inputAdornedEnd-149"
                                                        disabled={false}
                                                        id="autosuggest-input"
                                                        label="autosuggest"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder={null}
                                                        required={true}
                                                        type="text"
                                                        value=""
                                                      />
                                                      <WithStyles(WithFormControlContext(InputAdornment))
                                                        position="end"
                                                      >
                                                        <WithFormControlContext(InputAdornment)
                                                          classes={
                                                            Object {
                                                              "disablePointerEvents": "MuiInputAdornment-disablePointerEvents-188",
                                                              "filled": "MuiInputAdornment-filled-185",
                                                              "positionEnd": "MuiInputAdornment-positionEnd-187",
                                                              "positionStart": "MuiInputAdornment-positionStart-186",
                                                              "root": "MuiInputAdornment-root-184",
                                                            }
                                                          }
                                                          position="end"
                                                        >
                                                          <InputAdornment
                                                            classes={
                                                              Object {
                                                                "disablePointerEvents": "MuiInputAdornment-disablePointerEvents-188",
                                                                "filled": "MuiInputAdornment-filled-185",
                                                                "positionEnd": "MuiInputAdornment-positionEnd-187",
                                                                "positionStart": "MuiInputAdornment-positionStart-186",
                                                                "root": "MuiInputAdornment-root-184",
                                                              }
                                                            }
                                                            component="div"
                                                            disablePointerEvents={false}
                                                            disableTypography={false}
                                                            muiFormControl={
                                                              Object {
                                                                "adornedStart": true,
                                                                "disabled": false,
                                                                "error": false,
                                                                "filled": false,
                                                                "focused": false,
                                                                "margin": "none",
                                                                "onBlur": [Function],
                                                                "onEmpty": [Function],
                                                                "onFilled": [Function],
                                                                "onFocus": [Function],
                                                                "required": true,
                                                                "variant": "standard",
                                                              }
                                                            }
                                                            position="end"
                                                          >
                                                            <div
                                                              className="MuiInputAdornment-root-184 MuiInputAdornment-positionEnd-187"
                                                            >
                                                              <WithStyles(IconButton)
                                                                aria-label="Clear"
                                                                id="clear-input"
                                                                onClick={[Function]}
                                                              >
                                                                <IconButton
                                                                  aria-label="Clear"
                                                                  classes={
                                                                    Object {
                                                                      "colorInherit": "MuiIconButton-colorInherit-190",
                                                                      "colorPrimary": "MuiIconButton-colorPrimary-191",
                                                                      "colorSecondary": "MuiIconButton-colorSecondary-192",
                                                                      "disabled": "MuiIconButton-disabled-193",
                                                                      "label": "MuiIconButton-label-194",
                                                                      "root": "MuiIconButton-root-189",
                                                                    }
                                                                  }
                                                                  color="default"
                                                                  disabled={false}
                                                                  id="clear-input"
                                                                  onClick={[Function]}
                                                                >
                                                                  <WithStyles(ButtonBase)
                                                                    aria-label="Clear"
                                                                    centerRipple={true}
                                                                    className="MuiIconButton-root-189"
                                                                    disabled={false}
                                                                    focusRipple={true}
                                                                    id="clear-input"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <ButtonBase
                                                                      aria-label="Clear"
                                                                      centerRipple={true}
                                                                      className="MuiIconButton-root-189"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "MuiButtonBase-disabled-196",
                                                                          "focusVisible": "MuiButtonBase-focusVisible-197",
                                                                          "root": "MuiButtonBase-root-195",
                                                                        }
                                                                      }
                                                                      component="button"
                                                                      disableRipple={false}
                                                                      disableTouchRipple={false}
                                                                      disabled={false}
                                                                      focusRipple={true}
                                                                      id="clear-input"
                                                                      onClick={[Function]}
                                                                      tabIndex="0"
                                                                      type="button"
                                                                    >
                                                                      <button
                                                                        aria-label="Clear"
                                                                        className="MuiButtonBase-root-195 MuiIconButton-root-189"
                                                                        disabled={false}
                                                                        id="clear-input"
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onContextMenu={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        tabIndex="0"
                                                                        type="button"
                                                                      >
                                                                        <span
                                                                          className="MuiIconButton-label-194"
                                                                        >
                                                                          <pure(ClearIcon)>
                                                                            <ClearIcon>
                                                                              <WithStyles(SvgIcon)>
                                                                                <SvgIcon
                                                                                  classes={
                                                                                    Object {
                                                                                      "colorAction": "MuiSvgIcon-colorAction-178",
                                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled-180",
                                                                                      "colorError": "MuiSvgIcon-colorError-179",
                                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary-176",
                                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary-177",
                                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-181",
                                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-183",
                                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-182",
                                                                                      "root": "MuiSvgIcon-root-175",
                                                                                    }
                                                                                  }
                                                                                  color="inherit"
                                                                                  component="svg"
                                                                                  fontSize="default"
                                                                                  viewBox="0 0 24 24"
                                                                                >
                                                                                  <svg
                                                                                    aria-hidden="true"
                                                                                    className="MuiSvgIcon-root-175"
                                                                                    focusable="false"
                                                                                    role="presentation"
                                                                                    viewBox="0 0 24 24"
                                                                                  >
                                                                                    <path
                                                                                      d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                                    />
                                                                                    <path
                                                                                      d="M0 0h24v24H0z"
                                                                                      fill="none"
                                                                                    />
                                                                                  </svg>
                                                                                </SvgIcon>
                                                                              </WithStyles(SvgIcon)>
                                                                            </ClearIcon>
                                                                          </pure(ClearIcon)>
                                                                        </span>
                                                                        <NoSsr
                                                                          defer={false}
                                                                          fallback={null}
                                                                        >
                                                                          <WithStyles(TouchRipple)
                                                                            center={true}
                                                                            innerRef={[Function]}
                                                                          >
                                                                            <TouchRipple
                                                                              center={true}
                                                                              classes={
                                                                                Object {
                                                                                  "child": "MuiTouchRipple-child-202",
                                                                                  "childLeaving": "MuiTouchRipple-childLeaving-203",
                                                                                  "childPulsate": "MuiTouchRipple-childPulsate-204",
                                                                                  "ripple": "MuiTouchRipple-ripple-199",
                                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate-201",
                                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible-200",
                                                                                  "root": "MuiTouchRipple-root-198",
                                                                                }
                                                                              }
                                                                            >
                                                                              <TransitionGroup
                                                                                childFactory={[Function]}
                                                                                className="MuiTouchRipple-root-198"
                                                                                component="span"
                                                                                enter={true}
                                                                                exit={true}
                                                                              >
                                                                                <span
                                                                                  className="MuiTouchRipple-root-198"
                                                                                />
                                                                              </TransitionGroup>
                                                                            </TouchRipple>
                                                                          </WithStyles(TouchRipple)>
                                                                        </NoSsr>
                                                                      </button>
                                                                    </ButtonBase>
                                                                  </WithStyles(ButtonBase)>
                                                                </IconButton>
                                                              </WithStyles(IconButton)>
                                                            </div>
                                                          </InputAdornment>
                                                        </WithFormControlContext(InputAdornment)>
                                                      </WithStyles(WithFormControlContext(InputAdornment))>
                                                    </div>
                                                  </InputBase>
                                                </WithFormControlContext(InputBase)>
                                              </WithStyles(WithFormControlContext(InputBase))>
                                            </Input>
                                          </WithStyles(Input)>
                                        </div>
                                      </FormControl>
                                    </WithStyles(FormControl)>
                                  </TextField>
                                </TextFieldWrapper>
                              </WithStyles(TextFieldWrapper)>
                            </div>
                          </Grid>
                        </WithStyles(Grid)>
                      </div>
                    </Grid>
                  </WithStyles(Grid)>
                </div>
              </Downshift>
            </div>
          </AutoCompleteAsyncField>
        </MuiPickersUtilsProvider>
      </MuiThemeProviderOld>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`AutoCompleteAsyncField component should render autosuggest field and call action creator 1`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Immutable.Map {},
          },
          Object {
            "type": "return",
            "value": Immutable.Map {},
          },
        ],
      },
      "subscribe": [MockFunction] {
        "calls": Array [
          Array [
            [Function],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <MuiThemeProviderOld
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "graphs": Object {
              "color1": "#d72865",
              "color2": "#1e7d94",
              "color3": "#49075E",
              "color4": "#468fcc",
              "color5": "#f28620",
              "color6": "#333333",
              "color7": "#595959",
            },
            "hexToRGBA": [Function],
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {
              "MUIDataTable": Object {
                "paper": Object {
                  "boxShadow": "none",
                  "margin": 0,
                  "padding": 0,
                },
              },
              "MuiFormLabel": Object {
                "root": Object {
                  "overflow": "hidden",
                  "textOverflow": "ellipsis",
                  "whiteSpace": "nowrap",
                  "width": "100%",
                },
              },
              "MuiMenuItem": Object {
                "root": Object {
                  "&$selected": Object {
                    "backgroundColor": "#4085C6 !important",
                    "color": "#FFFFFF",
                  },
                },
              },
            },
            "palette": Object {
              "accent": Object {
                "dark": "#2a557d",
                "light": "#54acff",
                "main": "#316799",
              },
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#790000",
                "light": "#ff0000",
                "main": "#c80000",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#3b1a59",
                "gradient": Object {
                  "diagonal": Object {
                    "background": "linear-gradient(135deg, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                  "horizontal": Object {
                    "background": "linear-gradient(to right, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                },
                "light": "#962A8B",
                "main": "#51247A",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#333333",
                "light": "#f2f2f2",
                "main": "#595959",
              },
              "success": Object {
                "dark": "#005000",
                "light": "#00a700",
                "main": "#007200",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
              "warning": Object {
                "dark": "#542400",
                "light": "#ff9a57",
                "main": "#bf5000",
              },
              "white": Object {
                "main": "#FFFFFF",
              },
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "status": Object {
              "danger": "#f44336",
              "warning": "#ff9800",
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body1Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "body2Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "buttonNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "captionNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 300,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 300,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 200,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 200,
              "fontWeightMedium": 400,
              "fontWeightRegular": 300,
              "h1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 200,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1,
              },
              "h2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 200,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1,
              },
              "h3": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.04,
              },
              "h4": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.17,
              },
              "h5": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.33,
              },
              "h6": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 400,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "lineHeight": "1.35417em",
              },
              "overline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "lineHeight": "1.5em",
              },
              "subtitle1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
              "suppressDeprecationWarnings": true,
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.3125rem",
                "fontWeight": 400,
                "lineHeight": "1.16667em",
              },
              "useNextVariants": true,
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
      >
        <MuiPickersUtilsProvider
          utils={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
        >
          <AutoCompleteAsyncField
            MenuItemComponent={[Function]}
            allowFreeText={false}
            async={false}
            category={null}
            classes={
              Object {
                "container": "container",
                "inputRoot": "inputRoot",
                "paper": "paper",
                "root": "root",
              }
            }
            disabled={false}
            error={false}
            filter={[Function]}
            floatingLabelText=""
            hintText={null}
            itemToString={[MockFunction]}
            itemsList={Array []}
            itemsListLoading={false}
            loadSuggestions={
              [MockFunction] {
                "calls": Array [
                  Array [
                    null,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              }
            }
            maxResults={7}
            onChange={[MockFunction]}
            openOnFocus={false}
            required={false}
            selectedValue={null}
            showClear={false}
          >
            <div
              className="root"
            >
              <label
                hidden={true}
                id="autosuggest-label"
              />
              <Downshift
                aria-label="autosuggest"
                defaultHighlightedIndex={null}
                defaultInputValue=""
                defaultIsOpen={false}
                defaultSelectedItem={null}
                environment={[Window]}
                getA11yStatusMessage={[Function]}
                id="autosuggest"
                itemToString={[MockFunction]}
                onChange={[MockFunction]}
                onInputValueChange={[Function]}
                onOuterClick={[Function]}
                onSelect={[Function]}
                onStateChange={[Function]}
                onUserAction={[Function]}
                scrollIntoView={[Function]}
                selectedItemChanged={[Function]}
                stateReducer={[Function]}
                suppressRefError={false}
              >
                <div
                  aria-expanded={false}
                  aria-haspopup="listbox"
                  aria-labelledby="autosuggest-label"
                  aria-owns={null}
                  className="container"
                  role="combobox"
                >
                  <WithStyles(Grid)
                    alignContent="flex-end"
                    alignItems="flex-end"
                    container={true}
                    spacing={16}
                  >
                    <Grid
                      alignContent="flex-end"
                      alignItems="flex-end"
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                          "container": "MuiGrid-container-1",
                          "direction-xs-column": "MuiGrid-direction-xs-column-4",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                          "grid-lg-1": "MuiGrid-grid-lg-1-72",
                          "grid-lg-10": "MuiGrid-grid-lg-10-81",
                          "grid-lg-11": "MuiGrid-grid-lg-11-82",
                          "grid-lg-12": "MuiGrid-grid-lg-12-83",
                          "grid-lg-2": "MuiGrid-grid-lg-2-73",
                          "grid-lg-3": "MuiGrid-grid-lg-3-74",
                          "grid-lg-4": "MuiGrid-grid-lg-4-75",
                          "grid-lg-5": "MuiGrid-grid-lg-5-76",
                          "grid-lg-6": "MuiGrid-grid-lg-6-77",
                          "grid-lg-7": "MuiGrid-grid-lg-7-78",
                          "grid-lg-8": "MuiGrid-grid-lg-8-79",
                          "grid-lg-9": "MuiGrid-grid-lg-9-80",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                          "grid-lg-true": "MuiGrid-grid-lg-true-71",
                          "grid-md-1": "MuiGrid-grid-md-1-58",
                          "grid-md-10": "MuiGrid-grid-md-10-67",
                          "grid-md-11": "MuiGrid-grid-md-11-68",
                          "grid-md-12": "MuiGrid-grid-md-12-69",
                          "grid-md-2": "MuiGrid-grid-md-2-59",
                          "grid-md-3": "MuiGrid-grid-md-3-60",
                          "grid-md-4": "MuiGrid-grid-md-4-61",
                          "grid-md-5": "MuiGrid-grid-md-5-62",
                          "grid-md-6": "MuiGrid-grid-md-6-63",
                          "grid-md-7": "MuiGrid-grid-md-7-64",
                          "grid-md-8": "MuiGrid-grid-md-8-65",
                          "grid-md-9": "MuiGrid-grid-md-9-66",
                          "grid-md-auto": "MuiGrid-grid-md-auto-56",
                          "grid-md-true": "MuiGrid-grid-md-true-57",
                          "grid-sm-1": "MuiGrid-grid-sm-1-44",
                          "grid-sm-10": "MuiGrid-grid-sm-10-53",
                          "grid-sm-11": "MuiGrid-grid-sm-11-54",
                          "grid-sm-12": "MuiGrid-grid-sm-12-55",
                          "grid-sm-2": "MuiGrid-grid-sm-2-45",
                          "grid-sm-3": "MuiGrid-grid-sm-3-46",
                          "grid-sm-4": "MuiGrid-grid-sm-4-47",
                          "grid-sm-5": "MuiGrid-grid-sm-5-48",
                          "grid-sm-6": "MuiGrid-grid-sm-6-49",
                          "grid-sm-7": "MuiGrid-grid-sm-7-50",
                          "grid-sm-8": "MuiGrid-grid-sm-8-51",
                          "grid-sm-9": "MuiGrid-grid-sm-9-52",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                          "grid-sm-true": "MuiGrid-grid-sm-true-43",
                          "grid-xl-1": "MuiGrid-grid-xl-1-86",
                          "grid-xl-10": "MuiGrid-grid-xl-10-95",
                          "grid-xl-11": "MuiGrid-grid-xl-11-96",
                          "grid-xl-12": "MuiGrid-grid-xl-12-97",
                          "grid-xl-2": "MuiGrid-grid-xl-2-87",
                          "grid-xl-3": "MuiGrid-grid-xl-3-88",
                          "grid-xl-4": "MuiGrid-grid-xl-4-89",
                          "grid-xl-5": "MuiGrid-grid-xl-5-90",
                          "grid-xl-6": "MuiGrid-grid-xl-6-91",
                          "grid-xl-7": "MuiGrid-grid-xl-7-92",
                          "grid-xl-8": "MuiGrid-grid-xl-8-93",
                          "grid-xl-9": "MuiGrid-grid-xl-9-94",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                          "grid-xl-true": "MuiGrid-grid-xl-true-85",
                          "grid-xs-1": "MuiGrid-grid-xs-1-30",
                          "grid-xs-10": "MuiGrid-grid-xs-10-39",
                          "grid-xs-11": "MuiGrid-grid-xs-11-40",
                          "grid-xs-12": "MuiGrid-grid-xs-12-41",
                          "grid-xs-2": "MuiGrid-grid-xs-2-31",
                          "grid-xs-3": "MuiGrid-grid-xs-3-32",
                          "grid-xs-4": "MuiGrid-grid-xs-4-33",
                          "grid-xs-5": "MuiGrid-grid-xs-5-34",
                          "grid-xs-6": "MuiGrid-grid-xs-6-35",
                          "grid-xs-7": "MuiGrid-grid-xs-7-36",
                          "grid-xs-8": "MuiGrid-grid-xs-8-37",
                          "grid-xs-9": "MuiGrid-grid-xs-9-38",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                          "grid-xs-true": "MuiGrid-grid-xs-true-29",
                          "item": "MuiGrid-item-2",
                          "justify-xs-center": "MuiGrid-justify-xs-center-18",
                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                          "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                          "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                          "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                          "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                        }
                      }
                      component="div"
                      container={true}
                      direction="row"
                      item={false}
                      justify="flex-start"
                      lg={false}
                      md={false}
                      sm={false}
                      spacing={16}
                      wrap="wrap"
                      xl={false}
                      xs={false}
                      zeroMinWidth={false}
                    >
                      <div
                        className="MuiGrid-container-1 MuiGrid-spacing-xs-16-24 MuiGrid-align-items-xs-flex-end-11 MuiGrid-align-content-xs-flex-end-15"
                      >
                        <WithStyles(Grid)
                          item={true}
                          xs={true}
                        >
                          <Grid
                            alignContent="stretch"
                            alignItems="stretch"
                            classes={
                              Object {
                                "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                                "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                                "container": "MuiGrid-container-1",
                                "direction-xs-column": "MuiGrid-direction-xs-column-4",
                                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                                "grid-lg-1": "MuiGrid-grid-lg-1-72",
                                "grid-lg-10": "MuiGrid-grid-lg-10-81",
                                "grid-lg-11": "MuiGrid-grid-lg-11-82",
                                "grid-lg-12": "MuiGrid-grid-lg-12-83",
                                "grid-lg-2": "MuiGrid-grid-lg-2-73",
                                "grid-lg-3": "MuiGrid-grid-lg-3-74",
                                "grid-lg-4": "MuiGrid-grid-lg-4-75",
                                "grid-lg-5": "MuiGrid-grid-lg-5-76",
                                "grid-lg-6": "MuiGrid-grid-lg-6-77",
                                "grid-lg-7": "MuiGrid-grid-lg-7-78",
                                "grid-lg-8": "MuiGrid-grid-lg-8-79",
                                "grid-lg-9": "MuiGrid-grid-lg-9-80",
                                "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                                "grid-lg-true": "MuiGrid-grid-lg-true-71",
                                "grid-md-1": "MuiGrid-grid-md-1-58",
                                "grid-md-10": "MuiGrid-grid-md-10-67",
                                "grid-md-11": "MuiGrid-grid-md-11-68",
                                "grid-md-12": "MuiGrid-grid-md-12-69",
                                "grid-md-2": "MuiGrid-grid-md-2-59",
                                "grid-md-3": "MuiGrid-grid-md-3-60",
                                "grid-md-4": "MuiGrid-grid-md-4-61",
                                "grid-md-5": "MuiGrid-grid-md-5-62",
                                "grid-md-6": "MuiGrid-grid-md-6-63",
                                "grid-md-7": "MuiGrid-grid-md-7-64",
                                "grid-md-8": "MuiGrid-grid-md-8-65",
                                "grid-md-9": "MuiGrid-grid-md-9-66",
                                "grid-md-auto": "MuiGrid-grid-md-auto-56",
                                "grid-md-true": "MuiGrid-grid-md-true-57",
                                "grid-sm-1": "MuiGrid-grid-sm-1-44",
                                "grid-sm-10": "MuiGrid-grid-sm-10-53",
                                "grid-sm-11": "MuiGrid-grid-sm-11-54",
                                "grid-sm-12": "MuiGrid-grid-sm-12-55",
                                "grid-sm-2": "MuiGrid-grid-sm-2-45",
                                "grid-sm-3": "MuiGrid-grid-sm-3-46",
                                "grid-sm-4": "MuiGrid-grid-sm-4-47",
                                "grid-sm-5": "MuiGrid-grid-sm-5-48",
                                "grid-sm-6": "MuiGrid-grid-sm-6-49",
                                "grid-sm-7": "MuiGrid-grid-sm-7-50",
                                "grid-sm-8": "MuiGrid-grid-sm-8-51",
                                "grid-sm-9": "MuiGrid-grid-sm-9-52",
                                "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                                "grid-sm-true": "MuiGrid-grid-sm-true-43",
                                "grid-xl-1": "MuiGrid-grid-xl-1-86",
                                "grid-xl-10": "MuiGrid-grid-xl-10-95",
                                "grid-xl-11": "MuiGrid-grid-xl-11-96",
                                "grid-xl-12": "MuiGrid-grid-xl-12-97",
                                "grid-xl-2": "MuiGrid-grid-xl-2-87",
                                "grid-xl-3": "MuiGrid-grid-xl-3-88",
                                "grid-xl-4": "MuiGrid-grid-xl-4-89",
                                "grid-xl-5": "MuiGrid-grid-xl-5-90",
                                "grid-xl-6": "MuiGrid-grid-xl-6-91",
                                "grid-xl-7": "MuiGrid-grid-xl-7-92",
                                "grid-xl-8": "MuiGrid-grid-xl-8-93",
                                "grid-xl-9": "MuiGrid-grid-xl-9-94",
                                "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                                "grid-xl-true": "MuiGrid-grid-xl-true-85",
                                "grid-xs-1": "MuiGrid-grid-xs-1-30",
                                "grid-xs-10": "MuiGrid-grid-xs-10-39",
                                "grid-xs-11": "MuiGrid-grid-xs-11-40",
                                "grid-xs-12": "MuiGrid-grid-xs-12-41",
                                "grid-xs-2": "MuiGrid-grid-xs-2-31",
                                "grid-xs-3": "MuiGrid-grid-xs-3-32",
                                "grid-xs-4": "MuiGrid-grid-xs-4-33",
                                "grid-xs-5": "MuiGrid-grid-xs-5-34",
                                "grid-xs-6": "MuiGrid-grid-xs-6-35",
                                "grid-xs-7": "MuiGrid-grid-xs-7-36",
                                "grid-xs-8": "MuiGrid-grid-xs-8-37",
                                "grid-xs-9": "MuiGrid-grid-xs-9-38",
                                "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                                "grid-xs-true": "MuiGrid-grid-xs-true-29",
                                "item": "MuiGrid-item-2",
                                "justify-xs-center": "MuiGrid-justify-xs-center-18",
                                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                                "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                                "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                                "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                                "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                                "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                                "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                                "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                                "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                              }
                            }
                            component="div"
                            container={false}
                            direction="row"
                            item={true}
                            justify="flex-start"
                            lg={false}
                            md={false}
                            sm={false}
                            spacing={0}
                            wrap="wrap"
                            xl={false}
                            xs={true}
                            zeroMinWidth={false}
                          >
                            <div
                              className="MuiGrid-item-2 MuiGrid-grid-xs-true-29"
                            >
                              <WithStyles(TextFieldWrapper)
                                InputProps={
                                  Object {
                                    "aria-activedescendant": null,
                                    "aria-autocomplete": "list",
                                    "aria-controls": null,
                                    "aria-labelledby": "autosuggest-label",
                                    "autoComplete": "off",
                                    "classes": Object {
                                      "root": "inputRoot",
                                    },
                                    "id": "autosuggest-input",
                                    "inputRef": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onKeyDown": [Function],
                                    "value": "",
                                  }
                                }
                                disabled={false}
                                error={false}
                                errorText=""
                                fullWidth={true}
                                id="autosuggest-input"
                                label="autosuggest"
                                placeholder={null}
                                required={false}
                                value=""
                              >
                                <TextFieldWrapper
                                  InputProps={
                                    Object {
                                      "aria-activedescendant": null,
                                      "aria-autocomplete": "list",
                                      "aria-controls": null,
                                      "aria-labelledby": "autosuggest-label",
                                      "autoComplete": "off",
                                      "classes": Object {
                                        "root": "inputRoot",
                                      },
                                      "id": "autosuggest-input",
                                      "inputRef": [Function],
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onKeyDown": [Function],
                                      "value": "",
                                    }
                                  }
                                  classes={Object {}}
                                  disabled={false}
                                  error={false}
                                  errorText=""
                                  fullWidth={true}
                                  id="autosuggest-input"
                                  label="autosuggest"
                                  placeholder={null}
                                  required={false}
                                  value=""
                                >
                                  <TextField
                                    InputLabelProps={
                                      Object {
                                        "hidden": false,
                                        "htmlFor": "autosuggest-input",
                                        "id": "autosuggest-input-label",
                                        "shrink": undefined,
                                      }
                                    }
                                    InputProps={
                                      Object {
                                        "aria-activedescendant": null,
                                        "aria-autocomplete": "list",
                                        "aria-controls": null,
                                        "aria-labelledby": "autosuggest-label",
                                        "autoComplete": "off",
                                        "classes": Object {
                                          "root": "inputRoot",
                                        },
                                        "id": "autosuggest-input",
                                        "inputRef": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onKeyDown": [Function],
                                        "value": "",
                                      }
                                    }
                                    classes={Object {}}
                                    disabled={false}
                                    error={false}
                                    fullWidth={true}
                                    id="autosuggest-input"
                                    inputProps={
                                      Object {
                                        "aria-label": "autosuggest",
                                        "aria-labelledby": "autosuggest-input-label",
                                        "id": "autosuggest-input",
                                        "label": "autosuggest",
                                      }
                                    }
                                    label="autosuggest"
                                    placeholder={null}
                                    required={false}
                                    select={false}
                                    value=""
                                    variant="standard"
                                  >
                                    <WithStyles(FormControl)
                                      classes={Object {}}
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      required={false}
                                      variant="standard"
                                    >
                                      <FormControl
                                        classes={
                                          Object {
                                            "fullWidth": "MuiFormControl-fullWidth-101",
                                            "marginDense": "MuiFormControl-marginDense-100",
                                            "marginNormal": "MuiFormControl-marginNormal-99",
                                            "root": "MuiFormControl-root-98",
                                          }
                                        }
                                        component="div"
                                        disabled={false}
                                        error={false}
                                        fullWidth={true}
                                        margin="none"
                                        required={false}
                                        variant="standard"
                                      >
                                        <div
                                          className="MuiFormControl-root-98 MuiFormControl-fullWidth-101"
                                        >
                                          <WithStyles(WithFormControlContext(InputLabel))
                                            hidden={false}
                                            htmlFor="autosuggest-input"
                                            id="autosuggest-input-label"
                                          >
                                            <WithFormControlContext(InputLabel)
                                              classes={
                                                Object {
                                                  "animated": "MuiInputLabel-animated-110",
                                                  "disabled": "MuiInputLabel-disabled-104",
                                                  "error": "MuiInputLabel-error-105",
                                                  "filled": "MuiInputLabel-filled-111",
                                                  "focused": "MuiInputLabel-focused-103",
                                                  "formControl": "MuiInputLabel-formControl-107",
                                                  "marginDense": "MuiInputLabel-marginDense-108",
                                                  "outlined": "MuiInputLabel-outlined-112",
                                                  "required": "MuiInputLabel-required-106",
                                                  "root": "MuiInputLabel-root-102",
                                                  "shrink": "MuiInputLabel-shrink-109",
                                                }
                                              }
                                              hidden={false}
                                              htmlFor="autosuggest-input"
                                              id="autosuggest-input-label"
                                            >
                                              <InputLabel
                                                classes={
                                                  Object {
                                                    "animated": "MuiInputLabel-animated-110",
                                                    "disabled": "MuiInputLabel-disabled-104",
                                                    "error": "MuiInputLabel-error-105",
                                                    "filled": "MuiInputLabel-filled-111",
                                                    "focused": "MuiInputLabel-focused-103",
                                                    "formControl": "MuiInputLabel-formControl-107",
                                                    "marginDense": "MuiInputLabel-marginDense-108",
                                                    "outlined": "MuiInputLabel-outlined-112",
                                                    "required": "MuiInputLabel-required-106",
                                                    "root": "MuiInputLabel-root-102",
                                                    "shrink": "MuiInputLabel-shrink-109",
                                                  }
                                                }
                                                disableAnimation={false}
                                                hidden={false}
                                                htmlFor="autosuggest-input"
                                                id="autosuggest-input-label"
                                                muiFormControl={
                                                  Object {
                                                    "adornedStart": false,
                                                    "disabled": false,
                                                    "error": false,
                                                    "filled": false,
                                                    "focused": false,
                                                    "margin": "none",
                                                    "onBlur": [Function],
                                                    "onEmpty": [Function],
                                                    "onFilled": [Function],
                                                    "onFocus": [Function],
                                                    "required": false,
                                                    "variant": "standard",
                                                  }
                                                }
                                              >
                                                <WithStyles(WithFormControlContext(FormLabel))
                                                  className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                  classes={
                                                    Object {
                                                      "disabled": "MuiInputLabel-disabled-104",
                                                      "error": "MuiInputLabel-error-105",
                                                      "focused": "MuiInputLabel-focused-103",
                                                      "required": "MuiInputLabel-required-106",
                                                    }
                                                  }
                                                  data-shrink={false}
                                                  hidden={false}
                                                  htmlFor="autosuggest-input"
                                                  id="autosuggest-input-label"
                                                >
                                                  <WithFormControlContext(FormLabel)
                                                    className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                    classes={
                                                      Object {
                                                        "asterisk": "MuiFormLabel-asterisk-119",
                                                        "disabled": "MuiFormLabel-disabled-115 MuiInputLabel-disabled-104",
                                                        "error": "MuiFormLabel-error-116 MuiInputLabel-error-105",
                                                        "filled": "MuiFormLabel-filled-117",
                                                        "focused": "MuiFormLabel-focused-114 MuiInputLabel-focused-103",
                                                        "required": "MuiFormLabel-required-118 MuiInputLabel-required-106",
                                                        "root": "MuiFormLabel-root-113",
                                                      }
                                                    }
                                                    data-shrink={false}
                                                    hidden={false}
                                                    htmlFor="autosuggest-input"
                                                    id="autosuggest-input-label"
                                                  >
                                                    <FormLabel
                                                      className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                      classes={
                                                        Object {
                                                          "asterisk": "MuiFormLabel-asterisk-119",
                                                          "disabled": "MuiFormLabel-disabled-115 MuiInputLabel-disabled-104",
                                                          "error": "MuiFormLabel-error-116 MuiInputLabel-error-105",
                                                          "filled": "MuiFormLabel-filled-117",
                                                          "focused": "MuiFormLabel-focused-114 MuiInputLabel-focused-103",
                                                          "required": "MuiFormLabel-required-118 MuiInputLabel-required-106",
                                                          "root": "MuiFormLabel-root-113",
                                                        }
                                                      }
                                                      component="label"
                                                      data-shrink={false}
                                                      hidden={false}
                                                      htmlFor="autosuggest-input"
                                                      id="autosuggest-input-label"
                                                      muiFormControl={
                                                        Object {
                                                          "adornedStart": false,
                                                          "disabled": false,
                                                          "error": false,
                                                          "filled": false,
                                                          "focused": false,
                                                          "margin": "none",
                                                          "onBlur": [Function],
                                                          "onEmpty": [Function],
                                                          "onFilled": [Function],
                                                          "onFocus": [Function],
                                                          "required": false,
                                                          "variant": "standard",
                                                        }
                                                      }
                                                    >
                                                      <label
                                                        className="MuiFormLabel-root-113 MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                        data-shrink={false}
                                                        hidden={false}
                                                        htmlFor="autosuggest-input"
                                                        id="autosuggest-input-label"
                                                      >
                                                        autosuggest
                                                      </label>
                                                    </FormLabel>
                                                  </WithFormControlContext(FormLabel)>
                                                </WithStyles(WithFormControlContext(FormLabel))>
                                              </InputLabel>
                                            </WithFormControlContext(InputLabel)>
                                          </WithStyles(WithFormControlContext(InputLabel))>
                                          <WithStyles(Input)
                                            aria-activedescendant={null}
                                            aria-autocomplete="list"
                                            aria-controls={null}
                                            aria-labelledby="autosuggest-label"
                                            autoComplete="off"
                                            classes={
                                              Object {
                                                "root": "inputRoot",
                                              }
                                            }
                                            fullWidth={true}
                                            id="autosuggest-input"
                                            inputProps={
                                              Object {
                                                "aria-label": "autosuggest",
                                                "aria-labelledby": "autosuggest-input-label",
                                                "id": "autosuggest-input",
                                                "label": "autosuggest",
                                              }
                                            }
                                            inputRef={[Function]}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder={null}
                                            value=""
                                          >
                                            <Input
                                              aria-activedescendant={null}
                                              aria-autocomplete="list"
                                              aria-controls={null}
                                              aria-labelledby="autosuggest-label"
                                              autoComplete="off"
                                              classes={
                                                Object {
                                                  "disabled": "MuiInput-disabled-123",
                                                  "error": "MuiInput-error-125",
                                                  "focused": "MuiInput-focused-122",
                                                  "formControl": "MuiInput-formControl-121",
                                                  "fullWidth": "MuiInput-fullWidth-127",
                                                  "input": "MuiInput-input-128",
                                                  "inputMarginDense": "MuiInput-inputMarginDense-129",
                                                  "inputMultiline": "MuiInput-inputMultiline-130",
                                                  "inputType": "MuiInput-inputType-131",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch-132",
                                                  "multiline": "MuiInput-multiline-126",
                                                  "root": "MuiInput-root-120 inputRoot",
                                                  "underline": "MuiInput-underline-124",
                                                }
                                              }
                                              fullWidth={true}
                                              id="autosuggest-input"
                                              inputProps={
                                                Object {
                                                  "aria-label": "autosuggest",
                                                  "aria-labelledby": "autosuggest-input-label",
                                                  "id": "autosuggest-input",
                                                  "label": "autosuggest",
                                                }
                                              }
                                              inputRef={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onKeyDown={[Function]}
                                              placeholder={null}
                                              value=""
                                            >
                                              <WithStyles(WithFormControlContext(InputBase))
                                                aria-activedescendant={null}
                                                aria-autocomplete="list"
                                                aria-controls={null}
                                                aria-labelledby="autosuggest-label"
                                                autoComplete="off"
                                                classes={
                                                  Object {
                                                    "disabled": "MuiInput-disabled-123",
                                                    "error": "MuiInput-error-125",
                                                    "focused": "MuiInput-focused-122",
                                                    "formControl": "MuiInput-formControl-121",
                                                    "fullWidth": "MuiInput-fullWidth-127",
                                                    "input": "MuiInput-input-128",
                                                    "inputMarginDense": "MuiInput-inputMarginDense-129",
                                                    "inputMultiline": "MuiInput-inputMultiline-130",
                                                    "inputType": "MuiInput-inputType-131",
                                                    "inputTypeSearch": "MuiInput-inputTypeSearch-132",
                                                    "multiline": "MuiInput-multiline-126",
                                                    "root": "MuiInput-root-120 inputRoot MuiInput-underline-124",
                                                    "underline": null,
                                                  }
                                                }
                                                fullWidth={true}
                                                id="autosuggest-input"
                                                inputComponent="input"
                                                inputProps={
                                                  Object {
                                                    "aria-label": "autosuggest",
                                                    "aria-labelledby": "autosuggest-input-label",
                                                    "id": "autosuggest-input",
                                                    "label": "autosuggest",
                                                  }
                                                }
                                                inputRef={[Function]}
                                                multiline={false}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onKeyDown={[Function]}
                                                placeholder={null}
                                                type="text"
                                                value=""
                                              >
                                                <WithFormControlContext(InputBase)
                                                  aria-activedescendant={null}
                                                  aria-autocomplete="list"
                                                  aria-controls={null}
                                                  aria-labelledby="autosuggest-label"
                                                  autoComplete="off"
                                                  classes={
                                                    Object {
                                                      "adornedEnd": "MuiInputBase-adornedEnd-138",
                                                      "adornedStart": "MuiInputBase-adornedStart-137",
                                                      "disabled": "MuiInputBase-disabled-136 MuiInput-disabled-123",
                                                      "error": "MuiInputBase-error-139 MuiInput-error-125",
                                                      "focused": "MuiInputBase-focused-135 MuiInput-focused-122",
                                                      "formControl": "MuiInputBase-formControl-134 MuiInput-formControl-121",
                                                      "fullWidth": "MuiInputBase-fullWidth-142 MuiInput-fullWidth-127",
                                                      "input": "MuiInputBase-input-143 MuiInput-input-128",
                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-149",
                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart-148",
                                                      "inputMarginDense": "MuiInputBase-inputMarginDense-144 MuiInput-inputMarginDense-129",
                                                      "inputMultiline": "MuiInputBase-inputMultiline-145 MuiInput-inputMultiline-130",
                                                      "inputType": "MuiInputBase-inputType-146 MuiInput-inputType-131",
                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch-147 MuiInput-inputTypeSearch-132",
                                                      "marginDense": "MuiInputBase-marginDense-140",
                                                      "multiline": "MuiInputBase-multiline-141 MuiInput-multiline-126",
                                                      "root": "MuiInputBase-root-133 MuiInput-root-120 inputRoot MuiInput-underline-124",
                                                    }
                                                  }
                                                  fullWidth={true}
                                                  id="autosuggest-input"
                                                  inputComponent="input"
                                                  inputProps={
                                                    Object {
                                                      "aria-label": "autosuggest",
                                                      "aria-labelledby": "autosuggest-input-label",
                                                      "id": "autosuggest-input",
                                                      "label": "autosuggest",
                                                    }
                                                  }
                                                  inputRef={[Function]}
                                                  multiline={false}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder={null}
                                                  type="text"
                                                  value=""
                                                >
                                                  <InputBase
                                                    aria-activedescendant={null}
                                                    aria-autocomplete="list"
                                                    aria-controls={null}
                                                    aria-labelledby="autosuggest-label"
                                                    autoComplete="off"
                                                    classes={
                                                      Object {
                                                        "adornedEnd": "MuiInputBase-adornedEnd-138",
                                                        "adornedStart": "MuiInputBase-adornedStart-137",
                                                        "disabled": "MuiInputBase-disabled-136 MuiInput-disabled-123",
                                                        "error": "MuiInputBase-error-139 MuiInput-error-125",
                                                        "focused": "MuiInputBase-focused-135 MuiInput-focused-122",
                                                        "formControl": "MuiInputBase-formControl-134 MuiInput-formControl-121",
                                                        "fullWidth": "MuiInputBase-fullWidth-142 MuiInput-fullWidth-127",
                                                        "input": "MuiInputBase-input-143 MuiInput-input-128",
                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-149",
                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart-148",
                                                        "inputMarginDense": "MuiInputBase-inputMarginDense-144 MuiInput-inputMarginDense-129",
                                                        "inputMultiline": "MuiInputBase-inputMultiline-145 MuiInput-inputMultiline-130",
                                                        "inputType": "MuiInputBase-inputType-146 MuiInput-inputType-131",
                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch-147 MuiInput-inputTypeSearch-132",
                                                        "marginDense": "MuiInputBase-marginDense-140",
                                                        "multiline": "MuiInputBase-multiline-141 MuiInput-multiline-126",
                                                        "root": "MuiInputBase-root-133 MuiInput-root-120 inputRoot MuiInput-underline-124",
                                                      }
                                                    }
                                                    fullWidth={true}
                                                    id="autosuggest-input"
                                                    inputComponent="input"
                                                    inputProps={
                                                      Object {
                                                        "aria-label": "autosuggest",
                                                        "aria-labelledby": "autosuggest-input-label",
                                                        "id": "autosuggest-input",
                                                        "label": "autosuggest",
                                                      }
                                                    }
                                                    inputRef={[Function]}
                                                    muiFormControl={
                                                      Object {
                                                        "adornedStart": false,
                                                        "disabled": false,
                                                        "error": false,
                                                        "filled": false,
                                                        "focused": false,
                                                        "margin": "none",
                                                        "onBlur": [Function],
                                                        "onEmpty": [Function],
                                                        "onFilled": [Function],
                                                        "onFocus": [Function],
                                                        "required": false,
                                                        "variant": "standard",
                                                      }
                                                    }
                                                    multiline={false}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder={null}
                                                    type="text"
                                                    value=""
                                                  >
                                                    <div
                                                      aria-activedescendant={null}
                                                      aria-autocomplete="list"
                                                      aria-controls={null}
                                                      aria-labelledby="autosuggest-label"
                                                      className="MuiInputBase-root-133 MuiInput-root-120 inputRoot MuiInput-underline-124 MuiInputBase-fullWidth-142 MuiInput-fullWidth-127 MuiInputBase-formControl-134 MuiInput-formControl-121"
                                                      onClick={[Function]}
                                                    >
                                                      <input
                                                        aria-invalid={false}
                                                        aria-label="autosuggest"
                                                        aria-labelledby="autosuggest-input-label"
                                                        autoComplete="off"
                                                        className="MuiInputBase-input-143 MuiInput-input-128"
                                                        disabled={false}
                                                        id="autosuggest-input"
                                                        label="autosuggest"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder={null}
                                                        required={false}
                                                        type="text"
                                                        value=""
                                                      />
                                                    </div>
                                                  </InputBase>
                                                </WithFormControlContext(InputBase)>
                                              </WithStyles(WithFormControlContext(InputBase))>
                                            </Input>
                                          </WithStyles(Input)>
                                        </div>
                                      </FormControl>
                                    </WithStyles(FormControl)>
                                  </TextField>
                                </TextFieldWrapper>
                              </WithStyles(TextFieldWrapper)>
                            </div>
                          </Grid>
                        </WithStyles(Grid)>
                      </div>
                    </Grid>
                  </WithStyles(Grid)>
                </div>
              </Downshift>
            </div>
          </AutoCompleteAsyncField>
        </MuiPickersUtilsProvider>
      </MuiThemeProviderOld>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`AutoCompleteAsyncField component should render default MenuItemComponent 1`] = `
<WithStyles(MenuItem)
  button={true}
  selected={true}
  style={
    Object {
      "fontWeight": 400,
      "height": "auto",
      "whiteSpace": "normal",
    }
  }
>
  <MenuItemComponent
    suggestion={
      Object {
        "value": "Testing menu item",
      }
    }
  />
</WithStyles(MenuItem)>
`;

exports[`AutoCompleteAsyncField component should render default MenuItemComponent 2`] = `
<div
  className="root"
>
  <label
    hidden={true}
    id="autosuggest-label"
  />
  <Downshift
    aria-label="autosuggest"
    defaultHighlightedIndex={null}
    defaultInputValue=""
    defaultIsOpen={false}
    defaultSelectedItem={null}
    environment={[Window]}
    getA11yStatusMessage={[Function]}
    id="autosuggest"
    itemToString={[MockFunction]}
    onChange={[MockFunction]}
    onInputValueChange={[Function]}
    onOuterClick={[Function]}
    onSelect={[Function]}
    onStateChange={[Function]}
    onUserAction={[Function]}
    scrollIntoView={[Function]}
    selectedItemChanged={[Function]}
    stateReducer={[Function]}
    suppressRefError={false}
  >
    <Component />
  </Downshift>
</div>
`;

exports[`AutoCompleteAsyncField component should render default MenuItemComponent with array 1`] = `
<WithStyles(MenuItem)
  button={true}
  selected={true}
  style={
    Object {
      "fontWeight": 400,
      "height": "auto",
      "whiteSpace": "normal",
    }
  }
>
  <MenuItemComponent
    suggestion={
      Object {
        "value": "Testing menu item",
      }
    }
  />
</WithStyles(MenuItem)>
`;

exports[`AutoCompleteAsyncField component should render default MenuItemComponent with array 2`] = `
<div
  className="root"
>
  <label
    hidden={true}
    id="autosuggest-label"
  />
  <Downshift
    aria-label="autosuggest"
    defaultHighlightedIndex={null}
    defaultInputValue=""
    defaultIsOpen={false}
    defaultSelectedItem={null}
    environment={[Window]}
    getA11yStatusMessage={[Function]}
    id="autosuggest"
    itemToString={[MockFunction]}
    onChange={[MockFunction]}
    onInputValueChange={[Function]}
    onOuterClick={[Function]}
    onSelect={[Function]}
    onStateChange={[Function]}
    onUserAction={[Function]}
    scrollIntoView={[Function]}
    selectedItemChanged={[Function]}
    stateReducer={[Function]}
    suppressRefError={false}
  >
    <Component />
  </Downshift>
</div>
`;

exports[`AutoCompleteAsyncField component should render items list on focusing on input 1`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Immutable.Map {},
          },
          Object {
            "type": "return",
            "value": Immutable.Map {},
          },
        ],
      },
      "subscribe": [MockFunction] {
        "calls": Array [
          Array [
            [Function],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <MuiThemeProviderOld
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "graphs": Object {
              "color1": "#d72865",
              "color2": "#1e7d94",
              "color3": "#49075E",
              "color4": "#468fcc",
              "color5": "#f28620",
              "color6": "#333333",
              "color7": "#595959",
            },
            "hexToRGBA": [Function],
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {
              "MUIDataTable": Object {
                "paper": Object {
                  "boxShadow": "none",
                  "margin": 0,
                  "padding": 0,
                },
              },
              "MuiFormLabel": Object {
                "root": Object {
                  "overflow": "hidden",
                  "textOverflow": "ellipsis",
                  "whiteSpace": "nowrap",
                  "width": "100%",
                },
              },
              "MuiMenuItem": Object {
                "root": Object {
                  "&$selected": Object {
                    "backgroundColor": "#4085C6 !important",
                    "color": "#FFFFFF",
                  },
                },
              },
            },
            "palette": Object {
              "accent": Object {
                "dark": "#2a557d",
                "light": "#54acff",
                "main": "#316799",
              },
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#790000",
                "light": "#ff0000",
                "main": "#c80000",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#3b1a59",
                "gradient": Object {
                  "diagonal": Object {
                    "background": "linear-gradient(135deg, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                  "horizontal": Object {
                    "background": "linear-gradient(to right, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                },
                "light": "#962A8B",
                "main": "#51247A",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#333333",
                "light": "#f2f2f2",
                "main": "#595959",
              },
              "success": Object {
                "dark": "#005000",
                "light": "#00a700",
                "main": "#007200",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
              "warning": Object {
                "dark": "#542400",
                "light": "#ff9a57",
                "main": "#bf5000",
              },
              "white": Object {
                "main": "#FFFFFF",
              },
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "status": Object {
              "danger": "#f44336",
              "warning": "#ff9800",
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body1Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "body2Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "buttonNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "captionNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 300,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 300,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 200,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 200,
              "fontWeightMedium": 400,
              "fontWeightRegular": 300,
              "h1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 200,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1,
              },
              "h2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 200,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1,
              },
              "h3": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.04,
              },
              "h4": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.17,
              },
              "h5": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.33,
              },
              "h6": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 400,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "lineHeight": "1.35417em",
              },
              "overline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "lineHeight": "1.5em",
              },
              "subtitle1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
              "suppressDeprecationWarnings": true,
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.3125rem",
                "fontWeight": 400,
                "lineHeight": "1.16667em",
              },
              "useNextVariants": true,
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
      >
        <MuiPickersUtilsProvider
          utils={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
        >
          <AutoCompleteAsyncField
            MenuItemComponent={[Function]}
            allowFreeText={false}
            async={false}
            category={null}
            classes={
              Object {
                "container": "container",
                "inputRoot": "inputRoot",
                "paper": "paper",
                "root": "root",
              }
            }
            disabled={false}
            error={false}
            filter={[Function]}
            floatingLabelText="Test"
            hideLabel={true}
            hintText={null}
            itemToString={[MockFunction]}
            itemsList={
              Array [
                Object {
                  "id": 1,
                  "value": "test",
                },
                Object {
                  "id": 2,
                  "value": "testing",
                },
                Object {
                  "id": 3,
                  "value": "tested",
                },
              ]
            }
            itemsListLoading={false}
            loadSuggestions={
              [MockFunction] {
                "calls": Array [
                  Array [
                    null,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              }
            }
            maxResults={7}
            onChange={[MockFunction]}
            openOnFocus={true}
            required={false}
            selectedValue={null}
            showClear={false}
          >
            <div
              className="root"
            >
              <label
                hidden={true}
                id="Test-label"
              >
                Test
              </label>
              <Downshift
                aria-label="Test"
                defaultHighlightedIndex={null}
                defaultInputValue=""
                defaultIsOpen={false}
                defaultSelectedItem={null}
                environment={[Window]}
                getA11yStatusMessage={[Function]}
                id="Test"
                itemToString={[MockFunction]}
                onChange={[MockFunction]}
                onInputValueChange={[Function]}
                onOuterClick={[Function]}
                onSelect={[Function]}
                onStateChange={[Function]}
                onUserAction={[Function]}
                scrollIntoView={[Function]}
                selectedItemChanged={[Function]}
                stateReducer={[Function]}
                suppressRefError={false}
              >
                <div
                  aria-expanded={false}
                  aria-haspopup="listbox"
                  aria-labelledby="Test-label"
                  aria-owns={null}
                  className="container"
                  role="combobox"
                >
                  <WithStyles(Grid)
                    alignContent="flex-end"
                    alignItems="flex-end"
                    container={true}
                    spacing={16}
                  >
                    <Grid
                      alignContent="flex-end"
                      alignItems="flex-end"
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                          "container": "MuiGrid-container-1",
                          "direction-xs-column": "MuiGrid-direction-xs-column-4",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                          "grid-lg-1": "MuiGrid-grid-lg-1-72",
                          "grid-lg-10": "MuiGrid-grid-lg-10-81",
                          "grid-lg-11": "MuiGrid-grid-lg-11-82",
                          "grid-lg-12": "MuiGrid-grid-lg-12-83",
                          "grid-lg-2": "MuiGrid-grid-lg-2-73",
                          "grid-lg-3": "MuiGrid-grid-lg-3-74",
                          "grid-lg-4": "MuiGrid-grid-lg-4-75",
                          "grid-lg-5": "MuiGrid-grid-lg-5-76",
                          "grid-lg-6": "MuiGrid-grid-lg-6-77",
                          "grid-lg-7": "MuiGrid-grid-lg-7-78",
                          "grid-lg-8": "MuiGrid-grid-lg-8-79",
                          "grid-lg-9": "MuiGrid-grid-lg-9-80",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                          "grid-lg-true": "MuiGrid-grid-lg-true-71",
                          "grid-md-1": "MuiGrid-grid-md-1-58",
                          "grid-md-10": "MuiGrid-grid-md-10-67",
                          "grid-md-11": "MuiGrid-grid-md-11-68",
                          "grid-md-12": "MuiGrid-grid-md-12-69",
                          "grid-md-2": "MuiGrid-grid-md-2-59",
                          "grid-md-3": "MuiGrid-grid-md-3-60",
                          "grid-md-4": "MuiGrid-grid-md-4-61",
                          "grid-md-5": "MuiGrid-grid-md-5-62",
                          "grid-md-6": "MuiGrid-grid-md-6-63",
                          "grid-md-7": "MuiGrid-grid-md-7-64",
                          "grid-md-8": "MuiGrid-grid-md-8-65",
                          "grid-md-9": "MuiGrid-grid-md-9-66",
                          "grid-md-auto": "MuiGrid-grid-md-auto-56",
                          "grid-md-true": "MuiGrid-grid-md-true-57",
                          "grid-sm-1": "MuiGrid-grid-sm-1-44",
                          "grid-sm-10": "MuiGrid-grid-sm-10-53",
                          "grid-sm-11": "MuiGrid-grid-sm-11-54",
                          "grid-sm-12": "MuiGrid-grid-sm-12-55",
                          "grid-sm-2": "MuiGrid-grid-sm-2-45",
                          "grid-sm-3": "MuiGrid-grid-sm-3-46",
                          "grid-sm-4": "MuiGrid-grid-sm-4-47",
                          "grid-sm-5": "MuiGrid-grid-sm-5-48",
                          "grid-sm-6": "MuiGrid-grid-sm-6-49",
                          "grid-sm-7": "MuiGrid-grid-sm-7-50",
                          "grid-sm-8": "MuiGrid-grid-sm-8-51",
                          "grid-sm-9": "MuiGrid-grid-sm-9-52",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                          "grid-sm-true": "MuiGrid-grid-sm-true-43",
                          "grid-xl-1": "MuiGrid-grid-xl-1-86",
                          "grid-xl-10": "MuiGrid-grid-xl-10-95",
                          "grid-xl-11": "MuiGrid-grid-xl-11-96",
                          "grid-xl-12": "MuiGrid-grid-xl-12-97",
                          "grid-xl-2": "MuiGrid-grid-xl-2-87",
                          "grid-xl-3": "MuiGrid-grid-xl-3-88",
                          "grid-xl-4": "MuiGrid-grid-xl-4-89",
                          "grid-xl-5": "MuiGrid-grid-xl-5-90",
                          "grid-xl-6": "MuiGrid-grid-xl-6-91",
                          "grid-xl-7": "MuiGrid-grid-xl-7-92",
                          "grid-xl-8": "MuiGrid-grid-xl-8-93",
                          "grid-xl-9": "MuiGrid-grid-xl-9-94",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                          "grid-xl-true": "MuiGrid-grid-xl-true-85",
                          "grid-xs-1": "MuiGrid-grid-xs-1-30",
                          "grid-xs-10": "MuiGrid-grid-xs-10-39",
                          "grid-xs-11": "MuiGrid-grid-xs-11-40",
                          "grid-xs-12": "MuiGrid-grid-xs-12-41",
                          "grid-xs-2": "MuiGrid-grid-xs-2-31",
                          "grid-xs-3": "MuiGrid-grid-xs-3-32",
                          "grid-xs-4": "MuiGrid-grid-xs-4-33",
                          "grid-xs-5": "MuiGrid-grid-xs-5-34",
                          "grid-xs-6": "MuiGrid-grid-xs-6-35",
                          "grid-xs-7": "MuiGrid-grid-xs-7-36",
                          "grid-xs-8": "MuiGrid-grid-xs-8-37",
                          "grid-xs-9": "MuiGrid-grid-xs-9-38",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                          "grid-xs-true": "MuiGrid-grid-xs-true-29",
                          "item": "MuiGrid-item-2",
                          "justify-xs-center": "MuiGrid-justify-xs-center-18",
                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                          "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                          "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                          "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                          "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                        }
                      }
                      component="div"
                      container={true}
                      direction="row"
                      item={false}
                      justify="flex-start"
                      lg={false}
                      md={false}
                      sm={false}
                      spacing={16}
                      wrap="wrap"
                      xl={false}
                      xs={false}
                      zeroMinWidth={false}
                    >
                      <div
                        className="MuiGrid-container-1 MuiGrid-spacing-xs-16-24 MuiGrid-align-items-xs-flex-end-11 MuiGrid-align-content-xs-flex-end-15"
                      >
                        <WithStyles(Grid)
                          item={true}
                          xs={true}
                        >
                          <Grid
                            alignContent="stretch"
                            alignItems="stretch"
                            classes={
                              Object {
                                "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                                "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                                "container": "MuiGrid-container-1",
                                "direction-xs-column": "MuiGrid-direction-xs-column-4",
                                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                                "grid-lg-1": "MuiGrid-grid-lg-1-72",
                                "grid-lg-10": "MuiGrid-grid-lg-10-81",
                                "grid-lg-11": "MuiGrid-grid-lg-11-82",
                                "grid-lg-12": "MuiGrid-grid-lg-12-83",
                                "grid-lg-2": "MuiGrid-grid-lg-2-73",
                                "grid-lg-3": "MuiGrid-grid-lg-3-74",
                                "grid-lg-4": "MuiGrid-grid-lg-4-75",
                                "grid-lg-5": "MuiGrid-grid-lg-5-76",
                                "grid-lg-6": "MuiGrid-grid-lg-6-77",
                                "grid-lg-7": "MuiGrid-grid-lg-7-78",
                                "grid-lg-8": "MuiGrid-grid-lg-8-79",
                                "grid-lg-9": "MuiGrid-grid-lg-9-80",
                                "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                                "grid-lg-true": "MuiGrid-grid-lg-true-71",
                                "grid-md-1": "MuiGrid-grid-md-1-58",
                                "grid-md-10": "MuiGrid-grid-md-10-67",
                                "grid-md-11": "MuiGrid-grid-md-11-68",
                                "grid-md-12": "MuiGrid-grid-md-12-69",
                                "grid-md-2": "MuiGrid-grid-md-2-59",
                                "grid-md-3": "MuiGrid-grid-md-3-60",
                                "grid-md-4": "MuiGrid-grid-md-4-61",
                                "grid-md-5": "MuiGrid-grid-md-5-62",
                                "grid-md-6": "MuiGrid-grid-md-6-63",
                                "grid-md-7": "MuiGrid-grid-md-7-64",
                                "grid-md-8": "MuiGrid-grid-md-8-65",
                                "grid-md-9": "MuiGrid-grid-md-9-66",
                                "grid-md-auto": "MuiGrid-grid-md-auto-56",
                                "grid-md-true": "MuiGrid-grid-md-true-57",
                                "grid-sm-1": "MuiGrid-grid-sm-1-44",
                                "grid-sm-10": "MuiGrid-grid-sm-10-53",
                                "grid-sm-11": "MuiGrid-grid-sm-11-54",
                                "grid-sm-12": "MuiGrid-grid-sm-12-55",
                                "grid-sm-2": "MuiGrid-grid-sm-2-45",
                                "grid-sm-3": "MuiGrid-grid-sm-3-46",
                                "grid-sm-4": "MuiGrid-grid-sm-4-47",
                                "grid-sm-5": "MuiGrid-grid-sm-5-48",
                                "grid-sm-6": "MuiGrid-grid-sm-6-49",
                                "grid-sm-7": "MuiGrid-grid-sm-7-50",
                                "grid-sm-8": "MuiGrid-grid-sm-8-51",
                                "grid-sm-9": "MuiGrid-grid-sm-9-52",
                                "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                                "grid-sm-true": "MuiGrid-grid-sm-true-43",
                                "grid-xl-1": "MuiGrid-grid-xl-1-86",
                                "grid-xl-10": "MuiGrid-grid-xl-10-95",
                                "grid-xl-11": "MuiGrid-grid-xl-11-96",
                                "grid-xl-12": "MuiGrid-grid-xl-12-97",
                                "grid-xl-2": "MuiGrid-grid-xl-2-87",
                                "grid-xl-3": "MuiGrid-grid-xl-3-88",
                                "grid-xl-4": "MuiGrid-grid-xl-4-89",
                                "grid-xl-5": "MuiGrid-grid-xl-5-90",
                                "grid-xl-6": "MuiGrid-grid-xl-6-91",
                                "grid-xl-7": "MuiGrid-grid-xl-7-92",
                                "grid-xl-8": "MuiGrid-grid-xl-8-93",
                                "grid-xl-9": "MuiGrid-grid-xl-9-94",
                                "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                                "grid-xl-true": "MuiGrid-grid-xl-true-85",
                                "grid-xs-1": "MuiGrid-grid-xs-1-30",
                                "grid-xs-10": "MuiGrid-grid-xs-10-39",
                                "grid-xs-11": "MuiGrid-grid-xs-11-40",
                                "grid-xs-12": "MuiGrid-grid-xs-12-41",
                                "grid-xs-2": "MuiGrid-grid-xs-2-31",
                                "grid-xs-3": "MuiGrid-grid-xs-3-32",
                                "grid-xs-4": "MuiGrid-grid-xs-4-33",
                                "grid-xs-5": "MuiGrid-grid-xs-5-34",
                                "grid-xs-6": "MuiGrid-grid-xs-6-35",
                                "grid-xs-7": "MuiGrid-grid-xs-7-36",
                                "grid-xs-8": "MuiGrid-grid-xs-8-37",
                                "grid-xs-9": "MuiGrid-grid-xs-9-38",
                                "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                                "grid-xs-true": "MuiGrid-grid-xs-true-29",
                                "item": "MuiGrid-item-2",
                                "justify-xs-center": "MuiGrid-justify-xs-center-18",
                                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                                "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                                "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                                "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                                "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                                "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                                "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                                "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                                "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                              }
                            }
                            component="div"
                            container={false}
                            direction="row"
                            item={true}
                            justify="flex-start"
                            lg={false}
                            md={false}
                            sm={false}
                            spacing={0}
                            wrap="wrap"
                            xl={false}
                            xs={true}
                            zeroMinWidth={false}
                          >
                            <div
                              className="MuiGrid-item-2 MuiGrid-grid-xs-true-29"
                            >
                              <WithStyles(TextFieldWrapper)
                                InputProps={
                                  Object {
                                    "aria-activedescendant": null,
                                    "aria-autocomplete": "list",
                                    "aria-controls": null,
                                    "aria-labelledby": "Test-label",
                                    "autoComplete": "off",
                                    "classes": Object {
                                      "root": "inputRoot",
                                    },
                                    "id": "Test-input",
                                    "inputRef": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onKeyDown": [Function],
                                    "value": "",
                                  }
                                }
                                disabled={false}
                                error={false}
                                errorText=""
                                fullWidth={true}
                                id="Test-input"
                                placeholder={null}
                                required={false}
                                value=""
                              >
                                <TextFieldWrapper
                                  InputProps={
                                    Object {
                                      "aria-activedescendant": null,
                                      "aria-autocomplete": "list",
                                      "aria-controls": null,
                                      "aria-labelledby": "Test-label",
                                      "autoComplete": "off",
                                      "classes": Object {
                                        "root": "inputRoot",
                                      },
                                      "id": "Test-input",
                                      "inputRef": [Function],
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onKeyDown": [Function],
                                      "value": "",
                                    }
                                  }
                                  classes={Object {}}
                                  disabled={false}
                                  error={false}
                                  errorText=""
                                  fullWidth={true}
                                  id="Test-input"
                                  placeholder={null}
                                  required={false}
                                  value=""
                                >
                                  <TextField
                                    InputLabelProps={
                                      Object {
                                        "hidden": false,
                                        "htmlFor": "Test-input",
                                        "id": "Test-input-label",
                                        "shrink": undefined,
                                      }
                                    }
                                    InputProps={
                                      Object {
                                        "aria-activedescendant": null,
                                        "aria-autocomplete": "list",
                                        "aria-controls": null,
                                        "aria-labelledby": "Test-label",
                                        "autoComplete": "off",
                                        "classes": Object {
                                          "root": "inputRoot",
                                        },
                                        "id": "Test-input",
                                        "inputRef": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onKeyDown": [Function],
                                        "value": "",
                                      }
                                    }
                                    classes={Object {}}
                                    disabled={false}
                                    error={false}
                                    fullWidth={true}
                                    id="Test-input"
                                    inputProps={
                                      Object {
                                        "aria-label": undefined,
                                        "aria-labelledby": "Test-input-label",
                                        "id": "Test-input",
                                        "label": undefined,
                                      }
                                    }
                                    placeholder={null}
                                    required={false}
                                    select={false}
                                    value=""
                                    variant="standard"
                                  >
                                    <WithStyles(FormControl)
                                      classes={Object {}}
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      required={false}
                                      variant="standard"
                                    >
                                      <FormControl
                                        classes={
                                          Object {
                                            "fullWidth": "MuiFormControl-fullWidth-101",
                                            "marginDense": "MuiFormControl-marginDense-100",
                                            "marginNormal": "MuiFormControl-marginNormal-99",
                                            "root": "MuiFormControl-root-98",
                                          }
                                        }
                                        component="div"
                                        disabled={false}
                                        error={false}
                                        fullWidth={true}
                                        margin="none"
                                        required={false}
                                        variant="standard"
                                      >
                                        <div
                                          className="MuiFormControl-root-98 MuiFormControl-fullWidth-101"
                                        >
                                          <WithStyles(Input)
                                            aria-activedescendant={null}
                                            aria-autocomplete="list"
                                            aria-controls={null}
                                            aria-labelledby="Test-label"
                                            autoComplete="off"
                                            classes={
                                              Object {
                                                "root": "inputRoot",
                                              }
                                            }
                                            fullWidth={true}
                                            id="Test-input"
                                            inputProps={
                                              Object {
                                                "aria-label": undefined,
                                                "aria-labelledby": "Test-input-label",
                                                "id": "Test-input",
                                                "label": undefined,
                                              }
                                            }
                                            inputRef={[Function]}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder={null}
                                            value=""
                                          >
                                            <Input
                                              aria-activedescendant={null}
                                              aria-autocomplete="list"
                                              aria-controls={null}
                                              aria-labelledby="Test-label"
                                              autoComplete="off"
                                              classes={
                                                Object {
                                                  "disabled": "MuiInput-disabled-123",
                                                  "error": "MuiInput-error-125",
                                                  "focused": "MuiInput-focused-122",
                                                  "formControl": "MuiInput-formControl-121",
                                                  "fullWidth": "MuiInput-fullWidth-127",
                                                  "input": "MuiInput-input-128",
                                                  "inputMarginDense": "MuiInput-inputMarginDense-129",
                                                  "inputMultiline": "MuiInput-inputMultiline-130",
                                                  "inputType": "MuiInput-inputType-131",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch-132",
                                                  "multiline": "MuiInput-multiline-126",
                                                  "root": "MuiInput-root-120 inputRoot",
                                                  "underline": "MuiInput-underline-124",
                                                }
                                              }
                                              fullWidth={true}
                                              id="Test-input"
                                              inputProps={
                                                Object {
                                                  "aria-label": undefined,
                                                  "aria-labelledby": "Test-input-label",
                                                  "id": "Test-input",
                                                  "label": undefined,
                                                }
                                              }
                                              inputRef={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onKeyDown={[Function]}
                                              placeholder={null}
                                              value=""
                                            >
                                              <WithStyles(WithFormControlContext(InputBase))
                                                aria-activedescendant={null}
                                                aria-autocomplete="list"
                                                aria-controls={null}
                                                aria-labelledby="Test-label"
                                                autoComplete="off"
                                                classes={
                                                  Object {
                                                    "disabled": "MuiInput-disabled-123",
                                                    "error": "MuiInput-error-125",
                                                    "focused": "MuiInput-focused-122",
                                                    "formControl": "MuiInput-formControl-121",
                                                    "fullWidth": "MuiInput-fullWidth-127",
                                                    "input": "MuiInput-input-128",
                                                    "inputMarginDense": "MuiInput-inputMarginDense-129",
                                                    "inputMultiline": "MuiInput-inputMultiline-130",
                                                    "inputType": "MuiInput-inputType-131",
                                                    "inputTypeSearch": "MuiInput-inputTypeSearch-132",
                                                    "multiline": "MuiInput-multiline-126",
                                                    "root": "MuiInput-root-120 inputRoot MuiInput-underline-124",
                                                    "underline": null,
                                                  }
                                                }
                                                fullWidth={true}
                                                id="Test-input"
                                                inputComponent="input"
                                                inputProps={
                                                  Object {
                                                    "aria-label": undefined,
                                                    "aria-labelledby": "Test-input-label",
                                                    "id": "Test-input",
                                                    "label": undefined,
                                                  }
                                                }
                                                inputRef={[Function]}
                                                multiline={false}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onKeyDown={[Function]}
                                                placeholder={null}
                                                type="text"
                                                value=""
                                              >
                                                <WithFormControlContext(InputBase)
                                                  aria-activedescendant={null}
                                                  aria-autocomplete="list"
                                                  aria-controls={null}
                                                  aria-labelledby="Test-label"
                                                  autoComplete="off"
                                                  classes={
                                                    Object {
                                                      "adornedEnd": "MuiInputBase-adornedEnd-138",
                                                      "adornedStart": "MuiInputBase-adornedStart-137",
                                                      "disabled": "MuiInputBase-disabled-136 MuiInput-disabled-123",
                                                      "error": "MuiInputBase-error-139 MuiInput-error-125",
                                                      "focused": "MuiInputBase-focused-135 MuiInput-focused-122",
                                                      "formControl": "MuiInputBase-formControl-134 MuiInput-formControl-121",
                                                      "fullWidth": "MuiInputBase-fullWidth-142 MuiInput-fullWidth-127",
                                                      "input": "MuiInputBase-input-143 MuiInput-input-128",
                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-149",
                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart-148",
                                                      "inputMarginDense": "MuiInputBase-inputMarginDense-144 MuiInput-inputMarginDense-129",
                                                      "inputMultiline": "MuiInputBase-inputMultiline-145 MuiInput-inputMultiline-130",
                                                      "inputType": "MuiInputBase-inputType-146 MuiInput-inputType-131",
                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch-147 MuiInput-inputTypeSearch-132",
                                                      "marginDense": "MuiInputBase-marginDense-140",
                                                      "multiline": "MuiInputBase-multiline-141 MuiInput-multiline-126",
                                                      "root": "MuiInputBase-root-133 MuiInput-root-120 inputRoot MuiInput-underline-124",
                                                    }
                                                  }
                                                  fullWidth={true}
                                                  id="Test-input"
                                                  inputComponent="input"
                                                  inputProps={
                                                    Object {
                                                      "aria-label": undefined,
                                                      "aria-labelledby": "Test-input-label",
                                                      "id": "Test-input",
                                                      "label": undefined,
                                                    }
                                                  }
                                                  inputRef={[Function]}
                                                  multiline={false}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder={null}
                                                  type="text"
                                                  value=""
                                                >
                                                  <InputBase
                                                    aria-activedescendant={null}
                                                    aria-autocomplete="list"
                                                    aria-controls={null}
                                                    aria-labelledby="Test-label"
                                                    autoComplete="off"
                                                    classes={
                                                      Object {
                                                        "adornedEnd": "MuiInputBase-adornedEnd-138",
                                                        "adornedStart": "MuiInputBase-adornedStart-137",
                                                        "disabled": "MuiInputBase-disabled-136 MuiInput-disabled-123",
                                                        "error": "MuiInputBase-error-139 MuiInput-error-125",
                                                        "focused": "MuiInputBase-focused-135 MuiInput-focused-122",
                                                        "formControl": "MuiInputBase-formControl-134 MuiInput-formControl-121",
                                                        "fullWidth": "MuiInputBase-fullWidth-142 MuiInput-fullWidth-127",
                                                        "input": "MuiInputBase-input-143 MuiInput-input-128",
                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-149",
                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart-148",
                                                        "inputMarginDense": "MuiInputBase-inputMarginDense-144 MuiInput-inputMarginDense-129",
                                                        "inputMultiline": "MuiInputBase-inputMultiline-145 MuiInput-inputMultiline-130",
                                                        "inputType": "MuiInputBase-inputType-146 MuiInput-inputType-131",
                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch-147 MuiInput-inputTypeSearch-132",
                                                        "marginDense": "MuiInputBase-marginDense-140",
                                                        "multiline": "MuiInputBase-multiline-141 MuiInput-multiline-126",
                                                        "root": "MuiInputBase-root-133 MuiInput-root-120 inputRoot MuiInput-underline-124",
                                                      }
                                                    }
                                                    fullWidth={true}
                                                    id="Test-input"
                                                    inputComponent="input"
                                                    inputProps={
                                                      Object {
                                                        "aria-label": undefined,
                                                        "aria-labelledby": "Test-input-label",
                                                        "id": "Test-input",
                                                        "label": undefined,
                                                      }
                                                    }
                                                    inputRef={[Function]}
                                                    muiFormControl={
                                                      Object {
                                                        "adornedStart": false,
                                                        "disabled": false,
                                                        "error": false,
                                                        "filled": false,
                                                        "focused": false,
                                                        "margin": "none",
                                                        "onBlur": [Function],
                                                        "onEmpty": [Function],
                                                        "onFilled": [Function],
                                                        "onFocus": [Function],
                                                        "required": false,
                                                        "variant": "standard",
                                                      }
                                                    }
                                                    multiline={false}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder={null}
                                                    type="text"
                                                    value=""
                                                  >
                                                    <div
                                                      aria-activedescendant={null}
                                                      aria-autocomplete="list"
                                                      aria-controls={null}
                                                      aria-labelledby="Test-label"
                                                      className="MuiInputBase-root-133 MuiInput-root-120 inputRoot MuiInput-underline-124 MuiInputBase-fullWidth-142 MuiInput-fullWidth-127 MuiInputBase-formControl-134 MuiInput-formControl-121"
                                                      onClick={[Function]}
                                                    >
                                                      <input
                                                        aria-invalid={false}
                                                        aria-labelledby="Test-input-label"
                                                        autoComplete="off"
                                                        className="MuiInputBase-input-143 MuiInput-input-128"
                                                        disabled={false}
                                                        id="Test-input"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder={null}
                                                        required={false}
                                                        type="text"
                                                        value=""
                                                      />
                                                    </div>
                                                  </InputBase>
                                                </WithFormControlContext(InputBase)>
                                              </WithStyles(WithFormControlContext(InputBase))>
                                            </Input>
                                          </WithStyles(Input)>
                                        </div>
                                      </FormControl>
                                    </WithStyles(FormControl)>
                                  </TextField>
                                </TextFieldWrapper>
                              </WithStyles(TextFieldWrapper)>
                            </div>
                          </Grid>
                        </WithStyles(Grid)>
                      </div>
                    </Grid>
                  </WithStyles(Grid)>
                </div>
              </Downshift>
            </div>
          </AutoCompleteAsyncField>
        </MuiPickersUtilsProvider>
      </MuiThemeProviderOld>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`AutoCompleteAsyncField component should render items list on focusing on input 2`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Immutable.Map {},
          },
          Object {
            "type": "return",
            "value": Immutable.Map {},
          },
        ],
      },
      "subscribe": [MockFunction] {
        "calls": Array [
          Array [
            [Function],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <MuiThemeProviderOld
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "graphs": Object {
              "color1": "#d72865",
              "color2": "#1e7d94",
              "color3": "#49075E",
              "color4": "#468fcc",
              "color5": "#f28620",
              "color6": "#333333",
              "color7": "#595959",
            },
            "hexToRGBA": [Function],
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {
              "MUIDataTable": Object {
                "paper": Object {
                  "boxShadow": "none",
                  "margin": 0,
                  "padding": 0,
                },
              },
              "MuiFormLabel": Object {
                "root": Object {
                  "overflow": "hidden",
                  "textOverflow": "ellipsis",
                  "whiteSpace": "nowrap",
                  "width": "100%",
                },
              },
              "MuiMenuItem": Object {
                "root": Object {
                  "&$selected": Object {
                    "backgroundColor": "#4085C6 !important",
                    "color": "#FFFFFF",
                  },
                },
              },
            },
            "palette": Object {
              "accent": Object {
                "dark": "#2a557d",
                "light": "#54acff",
                "main": "#316799",
              },
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#790000",
                "light": "#ff0000",
                "main": "#c80000",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#3b1a59",
                "gradient": Object {
                  "diagonal": Object {
                    "background": "linear-gradient(135deg, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                  "horizontal": Object {
                    "background": "linear-gradient(to right, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                },
                "light": "#962A8B",
                "main": "#51247A",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#333333",
                "light": "#f2f2f2",
                "main": "#595959",
              },
              "success": Object {
                "dark": "#005000",
                "light": "#00a700",
                "main": "#007200",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
              "warning": Object {
                "dark": "#542400",
                "light": "#ff9a57",
                "main": "#bf5000",
              },
              "white": Object {
                "main": "#FFFFFF",
              },
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "status": Object {
              "danger": "#f44336",
              "warning": "#ff9800",
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body1Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "body2Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "buttonNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "captionNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 300,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 300,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 200,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 200,
              "fontWeightMedium": 400,
              "fontWeightRegular": 300,
              "h1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 200,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1,
              },
              "h2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 200,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1,
              },
              "h3": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.04,
              },
              "h4": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.17,
              },
              "h5": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.33,
              },
              "h6": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 400,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "lineHeight": "1.35417em",
              },
              "overline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "lineHeight": "1.5em",
              },
              "subtitle1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
              "suppressDeprecationWarnings": true,
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.3125rem",
                "fontWeight": 400,
                "lineHeight": "1.16667em",
              },
              "useNextVariants": true,
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
      >
        <MuiPickersUtilsProvider
          utils={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
        >
          <AutoCompleteAsyncField
            MenuItemComponent={[Function]}
            allowFreeText={false}
            async={false}
            category={null}
            classes={
              Object {
                "container": "container",
                "inputRoot": "inputRoot",
                "paper": "paper",
                "root": "root",
              }
            }
            disabled={false}
            error={false}
            filter={[Function]}
            floatingLabelText="Test"
            hideLabel={true}
            hintText={null}
            itemToString={[MockFunction]}
            itemsList={
              Array [
                Object {
                  "id": 1,
                  "value": "test",
                },
                Object {
                  "id": 2,
                  "value": "testing",
                },
                Object {
                  "id": 3,
                  "value": "tested",
                },
              ]
            }
            itemsListLoading={false}
            loadSuggestions={
              [MockFunction] {
                "calls": Array [
                  Array [
                    null,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              }
            }
            maxResults={7}
            onChange={[MockFunction]}
            openOnFocus={true}
            required={false}
            selectedValue={null}
            showClear={false}
          >
            <div
              className="root"
            >
              <label
                hidden={true}
                id="Test-label"
              >
                Test
              </label>
              <Downshift
                aria-label="Test"
                defaultHighlightedIndex={null}
                defaultInputValue=""
                defaultIsOpen={false}
                defaultSelectedItem={null}
                environment={[Window]}
                getA11yStatusMessage={[Function]}
                id="Test"
                itemToString={[MockFunction]}
                onChange={[MockFunction]}
                onInputValueChange={[Function]}
                onOuterClick={[Function]}
                onSelect={[Function]}
                onStateChange={[Function]}
                onUserAction={[Function]}
                scrollIntoView={[Function]}
                selectedItemChanged={[Function]}
                stateReducer={[Function]}
                suppressRefError={false}
              >
                <div
                  aria-expanded={false}
                  aria-haspopup="listbox"
                  aria-labelledby="Test-label"
                  aria-owns={null}
                  className="container"
                  role="combobox"
                >
                  <WithStyles(Grid)
                    alignContent="flex-end"
                    alignItems="flex-end"
                    container={true}
                    spacing={16}
                  >
                    <Grid
                      alignContent="flex-end"
                      alignItems="flex-end"
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                          "container": "MuiGrid-container-1",
                          "direction-xs-column": "MuiGrid-direction-xs-column-4",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                          "grid-lg-1": "MuiGrid-grid-lg-1-72",
                          "grid-lg-10": "MuiGrid-grid-lg-10-81",
                          "grid-lg-11": "MuiGrid-grid-lg-11-82",
                          "grid-lg-12": "MuiGrid-grid-lg-12-83",
                          "grid-lg-2": "MuiGrid-grid-lg-2-73",
                          "grid-lg-3": "MuiGrid-grid-lg-3-74",
                          "grid-lg-4": "MuiGrid-grid-lg-4-75",
                          "grid-lg-5": "MuiGrid-grid-lg-5-76",
                          "grid-lg-6": "MuiGrid-grid-lg-6-77",
                          "grid-lg-7": "MuiGrid-grid-lg-7-78",
                          "grid-lg-8": "MuiGrid-grid-lg-8-79",
                          "grid-lg-9": "MuiGrid-grid-lg-9-80",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                          "grid-lg-true": "MuiGrid-grid-lg-true-71",
                          "grid-md-1": "MuiGrid-grid-md-1-58",
                          "grid-md-10": "MuiGrid-grid-md-10-67",
                          "grid-md-11": "MuiGrid-grid-md-11-68",
                          "grid-md-12": "MuiGrid-grid-md-12-69",
                          "grid-md-2": "MuiGrid-grid-md-2-59",
                          "grid-md-3": "MuiGrid-grid-md-3-60",
                          "grid-md-4": "MuiGrid-grid-md-4-61",
                          "grid-md-5": "MuiGrid-grid-md-5-62",
                          "grid-md-6": "MuiGrid-grid-md-6-63",
                          "grid-md-7": "MuiGrid-grid-md-7-64",
                          "grid-md-8": "MuiGrid-grid-md-8-65",
                          "grid-md-9": "MuiGrid-grid-md-9-66",
                          "grid-md-auto": "MuiGrid-grid-md-auto-56",
                          "grid-md-true": "MuiGrid-grid-md-true-57",
                          "grid-sm-1": "MuiGrid-grid-sm-1-44",
                          "grid-sm-10": "MuiGrid-grid-sm-10-53",
                          "grid-sm-11": "MuiGrid-grid-sm-11-54",
                          "grid-sm-12": "MuiGrid-grid-sm-12-55",
                          "grid-sm-2": "MuiGrid-grid-sm-2-45",
                          "grid-sm-3": "MuiGrid-grid-sm-3-46",
                          "grid-sm-4": "MuiGrid-grid-sm-4-47",
                          "grid-sm-5": "MuiGrid-grid-sm-5-48",
                          "grid-sm-6": "MuiGrid-grid-sm-6-49",
                          "grid-sm-7": "MuiGrid-grid-sm-7-50",
                          "grid-sm-8": "MuiGrid-grid-sm-8-51",
                          "grid-sm-9": "MuiGrid-grid-sm-9-52",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                          "grid-sm-true": "MuiGrid-grid-sm-true-43",
                          "grid-xl-1": "MuiGrid-grid-xl-1-86",
                          "grid-xl-10": "MuiGrid-grid-xl-10-95",
                          "grid-xl-11": "MuiGrid-grid-xl-11-96",
                          "grid-xl-12": "MuiGrid-grid-xl-12-97",
                          "grid-xl-2": "MuiGrid-grid-xl-2-87",
                          "grid-xl-3": "MuiGrid-grid-xl-3-88",
                          "grid-xl-4": "MuiGrid-grid-xl-4-89",
                          "grid-xl-5": "MuiGrid-grid-xl-5-90",
                          "grid-xl-6": "MuiGrid-grid-xl-6-91",
                          "grid-xl-7": "MuiGrid-grid-xl-7-92",
                          "grid-xl-8": "MuiGrid-grid-xl-8-93",
                          "grid-xl-9": "MuiGrid-grid-xl-9-94",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                          "grid-xl-true": "MuiGrid-grid-xl-true-85",
                          "grid-xs-1": "MuiGrid-grid-xs-1-30",
                          "grid-xs-10": "MuiGrid-grid-xs-10-39",
                          "grid-xs-11": "MuiGrid-grid-xs-11-40",
                          "grid-xs-12": "MuiGrid-grid-xs-12-41",
                          "grid-xs-2": "MuiGrid-grid-xs-2-31",
                          "grid-xs-3": "MuiGrid-grid-xs-3-32",
                          "grid-xs-4": "MuiGrid-grid-xs-4-33",
                          "grid-xs-5": "MuiGrid-grid-xs-5-34",
                          "grid-xs-6": "MuiGrid-grid-xs-6-35",
                          "grid-xs-7": "MuiGrid-grid-xs-7-36",
                          "grid-xs-8": "MuiGrid-grid-xs-8-37",
                          "grid-xs-9": "MuiGrid-grid-xs-9-38",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                          "grid-xs-true": "MuiGrid-grid-xs-true-29",
                          "item": "MuiGrid-item-2",
                          "justify-xs-center": "MuiGrid-justify-xs-center-18",
                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                          "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                          "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                          "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                          "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                        }
                      }
                      component="div"
                      container={true}
                      direction="row"
                      item={false}
                      justify="flex-start"
                      lg={false}
                      md={false}
                      sm={false}
                      spacing={16}
                      wrap="wrap"
                      xl={false}
                      xs={false}
                      zeroMinWidth={false}
                    >
                      <div
                        className="MuiGrid-container-1 MuiGrid-spacing-xs-16-24 MuiGrid-align-items-xs-flex-end-11 MuiGrid-align-content-xs-flex-end-15"
                      >
                        <WithStyles(Grid)
                          item={true}
                          xs={true}
                        >
                          <Grid
                            alignContent="stretch"
                            alignItems="stretch"
                            classes={
                              Object {
                                "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                                "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                                "container": "MuiGrid-container-1",
                                "direction-xs-column": "MuiGrid-direction-xs-column-4",
                                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                                "grid-lg-1": "MuiGrid-grid-lg-1-72",
                                "grid-lg-10": "MuiGrid-grid-lg-10-81",
                                "grid-lg-11": "MuiGrid-grid-lg-11-82",
                                "grid-lg-12": "MuiGrid-grid-lg-12-83",
                                "grid-lg-2": "MuiGrid-grid-lg-2-73",
                                "grid-lg-3": "MuiGrid-grid-lg-3-74",
                                "grid-lg-4": "MuiGrid-grid-lg-4-75",
                                "grid-lg-5": "MuiGrid-grid-lg-5-76",
                                "grid-lg-6": "MuiGrid-grid-lg-6-77",
                                "grid-lg-7": "MuiGrid-grid-lg-7-78",
                                "grid-lg-8": "MuiGrid-grid-lg-8-79",
                                "grid-lg-9": "MuiGrid-grid-lg-9-80",
                                "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                                "grid-lg-true": "MuiGrid-grid-lg-true-71",
                                "grid-md-1": "MuiGrid-grid-md-1-58",
                                "grid-md-10": "MuiGrid-grid-md-10-67",
                                "grid-md-11": "MuiGrid-grid-md-11-68",
                                "grid-md-12": "MuiGrid-grid-md-12-69",
                                "grid-md-2": "MuiGrid-grid-md-2-59",
                                "grid-md-3": "MuiGrid-grid-md-3-60",
                                "grid-md-4": "MuiGrid-grid-md-4-61",
                                "grid-md-5": "MuiGrid-grid-md-5-62",
                                "grid-md-6": "MuiGrid-grid-md-6-63",
                                "grid-md-7": "MuiGrid-grid-md-7-64",
                                "grid-md-8": "MuiGrid-grid-md-8-65",
                                "grid-md-9": "MuiGrid-grid-md-9-66",
                                "grid-md-auto": "MuiGrid-grid-md-auto-56",
                                "grid-md-true": "MuiGrid-grid-md-true-57",
                                "grid-sm-1": "MuiGrid-grid-sm-1-44",
                                "grid-sm-10": "MuiGrid-grid-sm-10-53",
                                "grid-sm-11": "MuiGrid-grid-sm-11-54",
                                "grid-sm-12": "MuiGrid-grid-sm-12-55",
                                "grid-sm-2": "MuiGrid-grid-sm-2-45",
                                "grid-sm-3": "MuiGrid-grid-sm-3-46",
                                "grid-sm-4": "MuiGrid-grid-sm-4-47",
                                "grid-sm-5": "MuiGrid-grid-sm-5-48",
                                "grid-sm-6": "MuiGrid-grid-sm-6-49",
                                "grid-sm-7": "MuiGrid-grid-sm-7-50",
                                "grid-sm-8": "MuiGrid-grid-sm-8-51",
                                "grid-sm-9": "MuiGrid-grid-sm-9-52",
                                "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                                "grid-sm-true": "MuiGrid-grid-sm-true-43",
                                "grid-xl-1": "MuiGrid-grid-xl-1-86",
                                "grid-xl-10": "MuiGrid-grid-xl-10-95",
                                "grid-xl-11": "MuiGrid-grid-xl-11-96",
                                "grid-xl-12": "MuiGrid-grid-xl-12-97",
                                "grid-xl-2": "MuiGrid-grid-xl-2-87",
                                "grid-xl-3": "MuiGrid-grid-xl-3-88",
                                "grid-xl-4": "MuiGrid-grid-xl-4-89",
                                "grid-xl-5": "MuiGrid-grid-xl-5-90",
                                "grid-xl-6": "MuiGrid-grid-xl-6-91",
                                "grid-xl-7": "MuiGrid-grid-xl-7-92",
                                "grid-xl-8": "MuiGrid-grid-xl-8-93",
                                "grid-xl-9": "MuiGrid-grid-xl-9-94",
                                "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                                "grid-xl-true": "MuiGrid-grid-xl-true-85",
                                "grid-xs-1": "MuiGrid-grid-xs-1-30",
                                "grid-xs-10": "MuiGrid-grid-xs-10-39",
                                "grid-xs-11": "MuiGrid-grid-xs-11-40",
                                "grid-xs-12": "MuiGrid-grid-xs-12-41",
                                "grid-xs-2": "MuiGrid-grid-xs-2-31",
                                "grid-xs-3": "MuiGrid-grid-xs-3-32",
                                "grid-xs-4": "MuiGrid-grid-xs-4-33",
                                "grid-xs-5": "MuiGrid-grid-xs-5-34",
                                "grid-xs-6": "MuiGrid-grid-xs-6-35",
                                "grid-xs-7": "MuiGrid-grid-xs-7-36",
                                "grid-xs-8": "MuiGrid-grid-xs-8-37",
                                "grid-xs-9": "MuiGrid-grid-xs-9-38",
                                "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                                "grid-xs-true": "MuiGrid-grid-xs-true-29",
                                "item": "MuiGrid-item-2",
                                "justify-xs-center": "MuiGrid-justify-xs-center-18",
                                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                                "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                                "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                                "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                                "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                                "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                                "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                                "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                                "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                              }
                            }
                            component="div"
                            container={false}
                            direction="row"
                            item={true}
                            justify="flex-start"
                            lg={false}
                            md={false}
                            sm={false}
                            spacing={0}
                            wrap="wrap"
                            xl={false}
                            xs={true}
                            zeroMinWidth={false}
                          >
                            <div
                              className="MuiGrid-item-2 MuiGrid-grid-xs-true-29"
                            >
                              <WithStyles(TextFieldWrapper)
                                InputProps={
                                  Object {
                                    "aria-activedescendant": null,
                                    "aria-autocomplete": "list",
                                    "aria-controls": null,
                                    "aria-labelledby": "Test-label",
                                    "autoComplete": "off",
                                    "classes": Object {
                                      "root": "inputRoot",
                                    },
                                    "id": "Test-input",
                                    "inputRef": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onKeyDown": [Function],
                                    "value": "",
                                  }
                                }
                                disabled={false}
                                error={false}
                                errorText=""
                                fullWidth={true}
                                id="Test-input"
                                placeholder={null}
                                required={false}
                                value=""
                              >
                                <TextFieldWrapper
                                  InputProps={
                                    Object {
                                      "aria-activedescendant": null,
                                      "aria-autocomplete": "list",
                                      "aria-controls": null,
                                      "aria-labelledby": "Test-label",
                                      "autoComplete": "off",
                                      "classes": Object {
                                        "root": "inputRoot",
                                      },
                                      "id": "Test-input",
                                      "inputRef": [Function],
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onKeyDown": [Function],
                                      "value": "",
                                    }
                                  }
                                  classes={Object {}}
                                  disabled={false}
                                  error={false}
                                  errorText=""
                                  fullWidth={true}
                                  id="Test-input"
                                  placeholder={null}
                                  required={false}
                                  value=""
                                >
                                  <TextField
                                    InputLabelProps={
                                      Object {
                                        "hidden": false,
                                        "htmlFor": "Test-input",
                                        "id": "Test-input-label",
                                        "shrink": undefined,
                                      }
                                    }
                                    InputProps={
                                      Object {
                                        "aria-activedescendant": null,
                                        "aria-autocomplete": "list",
                                        "aria-controls": null,
                                        "aria-labelledby": "Test-label",
                                        "autoComplete": "off",
                                        "classes": Object {
                                          "root": "inputRoot",
                                        },
                                        "id": "Test-input",
                                        "inputRef": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onKeyDown": [Function],
                                        "value": "",
                                      }
                                    }
                                    classes={Object {}}
                                    disabled={false}
                                    error={false}
                                    fullWidth={true}
                                    id="Test-input"
                                    inputProps={
                                      Object {
                                        "aria-label": undefined,
                                        "aria-labelledby": "Test-input-label",
                                        "id": "Test-input",
                                        "label": undefined,
                                      }
                                    }
                                    placeholder={null}
                                    required={false}
                                    select={false}
                                    value=""
                                    variant="standard"
                                  >
                                    <WithStyles(FormControl)
                                      classes={Object {}}
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      required={false}
                                      variant="standard"
                                    >
                                      <FormControl
                                        classes={
                                          Object {
                                            "fullWidth": "MuiFormControl-fullWidth-101",
                                            "marginDense": "MuiFormControl-marginDense-100",
                                            "marginNormal": "MuiFormControl-marginNormal-99",
                                            "root": "MuiFormControl-root-98",
                                          }
                                        }
                                        component="div"
                                        disabled={false}
                                        error={false}
                                        fullWidth={true}
                                        margin="none"
                                        required={false}
                                        variant="standard"
                                      >
                                        <div
                                          className="MuiFormControl-root-98 MuiFormControl-fullWidth-101"
                                        >
                                          <WithStyles(Input)
                                            aria-activedescendant={null}
                                            aria-autocomplete="list"
                                            aria-controls={null}
                                            aria-labelledby="Test-label"
                                            autoComplete="off"
                                            classes={
                                              Object {
                                                "root": "inputRoot",
                                              }
                                            }
                                            fullWidth={true}
                                            id="Test-input"
                                            inputProps={
                                              Object {
                                                "aria-label": undefined,
                                                "aria-labelledby": "Test-input-label",
                                                "id": "Test-input",
                                                "label": undefined,
                                              }
                                            }
                                            inputRef={[Function]}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder={null}
                                            value=""
                                          >
                                            <Input
                                              aria-activedescendant={null}
                                              aria-autocomplete="list"
                                              aria-controls={null}
                                              aria-labelledby="Test-label"
                                              autoComplete="off"
                                              classes={
                                                Object {
                                                  "disabled": "MuiInput-disabled-123",
                                                  "error": "MuiInput-error-125",
                                                  "focused": "MuiInput-focused-122",
                                                  "formControl": "MuiInput-formControl-121",
                                                  "fullWidth": "MuiInput-fullWidth-127",
                                                  "input": "MuiInput-input-128",
                                                  "inputMarginDense": "MuiInput-inputMarginDense-129",
                                                  "inputMultiline": "MuiInput-inputMultiline-130",
                                                  "inputType": "MuiInput-inputType-131",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch-132",
                                                  "multiline": "MuiInput-multiline-126",
                                                  "root": "MuiInput-root-120 inputRoot",
                                                  "underline": "MuiInput-underline-124",
                                                }
                                              }
                                              fullWidth={true}
                                              id="Test-input"
                                              inputProps={
                                                Object {
                                                  "aria-label": undefined,
                                                  "aria-labelledby": "Test-input-label",
                                                  "id": "Test-input",
                                                  "label": undefined,
                                                }
                                              }
                                              inputRef={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onKeyDown={[Function]}
                                              placeholder={null}
                                              value=""
                                            >
                                              <WithStyles(WithFormControlContext(InputBase))
                                                aria-activedescendant={null}
                                                aria-autocomplete="list"
                                                aria-controls={null}
                                                aria-labelledby="Test-label"
                                                autoComplete="off"
                                                classes={
                                                  Object {
                                                    "disabled": "MuiInput-disabled-123",
                                                    "error": "MuiInput-error-125",
                                                    "focused": "MuiInput-focused-122",
                                                    "formControl": "MuiInput-formControl-121",
                                                    "fullWidth": "MuiInput-fullWidth-127",
                                                    "input": "MuiInput-input-128",
                                                    "inputMarginDense": "MuiInput-inputMarginDense-129",
                                                    "inputMultiline": "MuiInput-inputMultiline-130",
                                                    "inputType": "MuiInput-inputType-131",
                                                    "inputTypeSearch": "MuiInput-inputTypeSearch-132",
                                                    "multiline": "MuiInput-multiline-126",
                                                    "root": "MuiInput-root-120 inputRoot MuiInput-underline-124",
                                                    "underline": null,
                                                  }
                                                }
                                                fullWidth={true}
                                                id="Test-input"
                                                inputComponent="input"
                                                inputProps={
                                                  Object {
                                                    "aria-label": undefined,
                                                    "aria-labelledby": "Test-input-label",
                                                    "id": "Test-input",
                                                    "label": undefined,
                                                  }
                                                }
                                                inputRef={[Function]}
                                                multiline={false}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onKeyDown={[Function]}
                                                placeholder={null}
                                                type="text"
                                                value=""
                                              >
                                                <WithFormControlContext(InputBase)
                                                  aria-activedescendant={null}
                                                  aria-autocomplete="list"
                                                  aria-controls={null}
                                                  aria-labelledby="Test-label"
                                                  autoComplete="off"
                                                  classes={
                                                    Object {
                                                      "adornedEnd": "MuiInputBase-adornedEnd-138",
                                                      "adornedStart": "MuiInputBase-adornedStart-137",
                                                      "disabled": "MuiInputBase-disabled-136 MuiInput-disabled-123",
                                                      "error": "MuiInputBase-error-139 MuiInput-error-125",
                                                      "focused": "MuiInputBase-focused-135 MuiInput-focused-122",
                                                      "formControl": "MuiInputBase-formControl-134 MuiInput-formControl-121",
                                                      "fullWidth": "MuiInputBase-fullWidth-142 MuiInput-fullWidth-127",
                                                      "input": "MuiInputBase-input-143 MuiInput-input-128",
                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-149",
                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart-148",
                                                      "inputMarginDense": "MuiInputBase-inputMarginDense-144 MuiInput-inputMarginDense-129",
                                                      "inputMultiline": "MuiInputBase-inputMultiline-145 MuiInput-inputMultiline-130",
                                                      "inputType": "MuiInputBase-inputType-146 MuiInput-inputType-131",
                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch-147 MuiInput-inputTypeSearch-132",
                                                      "marginDense": "MuiInputBase-marginDense-140",
                                                      "multiline": "MuiInputBase-multiline-141 MuiInput-multiline-126",
                                                      "root": "MuiInputBase-root-133 MuiInput-root-120 inputRoot MuiInput-underline-124",
                                                    }
                                                  }
                                                  fullWidth={true}
                                                  id="Test-input"
                                                  inputComponent="input"
                                                  inputProps={
                                                    Object {
                                                      "aria-label": undefined,
                                                      "aria-labelledby": "Test-input-label",
                                                      "id": "Test-input",
                                                      "label": undefined,
                                                    }
                                                  }
                                                  inputRef={[Function]}
                                                  multiline={false}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder={null}
                                                  type="text"
                                                  value=""
                                                >
                                                  <InputBase
                                                    aria-activedescendant={null}
                                                    aria-autocomplete="list"
                                                    aria-controls={null}
                                                    aria-labelledby="Test-label"
                                                    autoComplete="off"
                                                    classes={
                                                      Object {
                                                        "adornedEnd": "MuiInputBase-adornedEnd-138",
                                                        "adornedStart": "MuiInputBase-adornedStart-137",
                                                        "disabled": "MuiInputBase-disabled-136 MuiInput-disabled-123",
                                                        "error": "MuiInputBase-error-139 MuiInput-error-125",
                                                        "focused": "MuiInputBase-focused-135 MuiInput-focused-122",
                                                        "formControl": "MuiInputBase-formControl-134 MuiInput-formControl-121",
                                                        "fullWidth": "MuiInputBase-fullWidth-142 MuiInput-fullWidth-127",
                                                        "input": "MuiInputBase-input-143 MuiInput-input-128",
                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-149",
                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart-148",
                                                        "inputMarginDense": "MuiInputBase-inputMarginDense-144 MuiInput-inputMarginDense-129",
                                                        "inputMultiline": "MuiInputBase-inputMultiline-145 MuiInput-inputMultiline-130",
                                                        "inputType": "MuiInputBase-inputType-146 MuiInput-inputType-131",
                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch-147 MuiInput-inputTypeSearch-132",
                                                        "marginDense": "MuiInputBase-marginDense-140",
                                                        "multiline": "MuiInputBase-multiline-141 MuiInput-multiline-126",
                                                        "root": "MuiInputBase-root-133 MuiInput-root-120 inputRoot MuiInput-underline-124",
                                                      }
                                                    }
                                                    fullWidth={true}
                                                    id="Test-input"
                                                    inputComponent="input"
                                                    inputProps={
                                                      Object {
                                                        "aria-label": undefined,
                                                        "aria-labelledby": "Test-input-label",
                                                        "id": "Test-input",
                                                        "label": undefined,
                                                      }
                                                    }
                                                    inputRef={[Function]}
                                                    muiFormControl={
                                                      Object {
                                                        "adornedStart": false,
                                                        "disabled": false,
                                                        "error": false,
                                                        "filled": false,
                                                        "focused": true,
                                                        "margin": "none",
                                                        "onBlur": [Function],
                                                        "onEmpty": [Function],
                                                        "onFilled": [Function],
                                                        "onFocus": [Function],
                                                        "required": false,
                                                        "variant": "standard",
                                                      }
                                                    }
                                                    multiline={false}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder={null}
                                                    type="text"
                                                    value=""
                                                  >
                                                    <div
                                                      aria-activedescendant={null}
                                                      aria-autocomplete="list"
                                                      aria-controls={null}
                                                      aria-labelledby="Test-label"
                                                      className="MuiInputBase-root-133 MuiInput-root-120 inputRoot MuiInput-underline-124 MuiInputBase-fullWidth-142 MuiInput-fullWidth-127 MuiInputBase-focused-135 MuiInput-focused-122 MuiInputBase-formControl-134 MuiInput-formControl-121"
                                                      onClick={[Function]}
                                                    >
                                                      <input
                                                        aria-invalid={false}
                                                        aria-labelledby="Test-input-label"
                                                        autoComplete="off"
                                                        className="MuiInputBase-input-143 MuiInput-input-128"
                                                        disabled={false}
                                                        id="Test-input"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder={null}
                                                        required={false}
                                                        type="text"
                                                        value=""
                                                      />
                                                    </div>
                                                  </InputBase>
                                                </WithFormControlContext(InputBase)>
                                              </WithStyles(WithFormControlContext(InputBase))>
                                            </Input>
                                          </WithStyles(Input)>
                                        </div>
                                      </FormControl>
                                    </WithStyles(FormControl)>
                                  </TextField>
                                </TextFieldWrapper>
                              </WithStyles(TextFieldWrapper)>
                            </div>
                          </Grid>
                        </WithStyles(Grid)>
                      </div>
                    </Grid>
                  </WithStyles(Grid)>
                </div>
              </Downshift>
            </div>
          </AutoCompleteAsyncField>
        </MuiPickersUtilsProvider>
      </MuiThemeProviderOld>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`AutoCompleteAsyncField component should render with an input which allows free text input 1`] = `
<div
  className="root"
>
  <label
    hidden={true}
    id="autosuggest-label"
  />
  <Downshift
    aria-label="autosuggest"
    defaultHighlightedIndex={null}
    defaultInputValue=""
    defaultIsOpen={false}
    defaultSelectedItem={null}
    environment={[Window]}
    getA11yStatusMessage={[Function]}
    id="autosuggest"
    itemToString={[MockFunction]}
    onChange={[MockFunction]}
    onInputValueChange={[Function]}
    onOuterClick={[Function]}
    onSelect={[Function]}
    onStateChange={[Function]}
    onUserAction={[Function]}
    scrollIntoView={[Function]}
    selectedItemChanged={[Function]}
    stateReducer={[Function]}
    suppressRefError={false}
  >
    <Component />
  </Downshift>
</div>
`;

exports[`AutoCompleteAsyncField component should render with disabled flag set to true 1`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Immutable.Map {},
          },
          Object {
            "type": "return",
            "value": Immutable.Map {},
          },
        ],
      },
      "subscribe": [MockFunction] {
        "calls": Array [
          Array [
            [Function],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <MuiThemeProviderOld
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "graphs": Object {
              "color1": "#d72865",
              "color2": "#1e7d94",
              "color3": "#49075E",
              "color4": "#468fcc",
              "color5": "#f28620",
              "color6": "#333333",
              "color7": "#595959",
            },
            "hexToRGBA": [Function],
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {
              "MUIDataTable": Object {
                "paper": Object {
                  "boxShadow": "none",
                  "margin": 0,
                  "padding": 0,
                },
              },
              "MuiFormLabel": Object {
                "root": Object {
                  "overflow": "hidden",
                  "textOverflow": "ellipsis",
                  "whiteSpace": "nowrap",
                  "width": "100%",
                },
              },
              "MuiMenuItem": Object {
                "root": Object {
                  "&$selected": Object {
                    "backgroundColor": "#4085C6 !important",
                    "color": "#FFFFFF",
                  },
                },
              },
            },
            "palette": Object {
              "accent": Object {
                "dark": "#2a557d",
                "light": "#54acff",
                "main": "#316799",
              },
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#790000",
                "light": "#ff0000",
                "main": "#c80000",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#3b1a59",
                "gradient": Object {
                  "diagonal": Object {
                    "background": "linear-gradient(135deg, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                  "horizontal": Object {
                    "background": "linear-gradient(to right, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                },
                "light": "#962A8B",
                "main": "#51247A",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#333333",
                "light": "#f2f2f2",
                "main": "#595959",
              },
              "success": Object {
                "dark": "#005000",
                "light": "#00a700",
                "main": "#007200",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
              "warning": Object {
                "dark": "#542400",
                "light": "#ff9a57",
                "main": "#bf5000",
              },
              "white": Object {
                "main": "#FFFFFF",
              },
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "status": Object {
              "danger": "#f44336",
              "warning": "#ff9800",
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body1Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "body2Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "buttonNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "captionNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 300,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 300,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 200,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 200,
              "fontWeightMedium": 400,
              "fontWeightRegular": 300,
              "h1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 200,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1,
              },
              "h2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 200,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1,
              },
              "h3": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.04,
              },
              "h4": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.17,
              },
              "h5": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.33,
              },
              "h6": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 400,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "lineHeight": "1.35417em",
              },
              "overline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "lineHeight": "1.5em",
              },
              "subtitle1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
              "suppressDeprecationWarnings": true,
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.3125rem",
                "fontWeight": 400,
                "lineHeight": "1.16667em",
              },
              "useNextVariants": true,
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
      >
        <MuiPickersUtilsProvider
          utils={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
        >
          <AutoCompleteAsyncField
            MenuItemComponent={[Function]}
            allowFreeText={false}
            async={true}
            category={null}
            classes={
              Object {
                "container": "container",
                "inputRoot": "inputRoot",
                "paper": "paper",
                "root": "root",
              }
            }
            disabled={true}
            error={false}
            filter={[Function]}
            floatingLabelText=""
            hintText={null}
            itemToString={[MockFunction]}
            itemsList={Array []}
            itemsListLoading={false}
            loadSuggestions={[MockFunction]}
            maxResults={7}
            onChange={[MockFunction]}
            openOnFocus={false}
            required={false}
            selectedValue={null}
            showClear={false}
          >
            <div
              className="root"
            >
              <label
                hidden={true}
                id="autosuggest-label"
              />
              <Downshift
                aria-label="autosuggest"
                defaultHighlightedIndex={null}
                defaultInputValue=""
                defaultIsOpen={false}
                defaultSelectedItem={null}
                environment={[Window]}
                getA11yStatusMessage={[Function]}
                id="autosuggest"
                itemToString={[MockFunction]}
                onChange={[MockFunction]}
                onInputValueChange={[Function]}
                onOuterClick={[Function]}
                onSelect={[Function]}
                onStateChange={[Function]}
                onUserAction={[Function]}
                scrollIntoView={[Function]}
                selectedItemChanged={[Function]}
                stateReducer={[Function]}
                suppressRefError={false}
              >
                <div
                  aria-expanded={false}
                  aria-haspopup="listbox"
                  aria-labelledby="autosuggest-label"
                  aria-owns={null}
                  className="container"
                  role="combobox"
                >
                  <WithStyles(Grid)
                    alignContent="flex-end"
                    alignItems="flex-end"
                    container={true}
                    spacing={16}
                  >
                    <Grid
                      alignContent="flex-end"
                      alignItems="flex-end"
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                          "container": "MuiGrid-container-1",
                          "direction-xs-column": "MuiGrid-direction-xs-column-4",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                          "grid-lg-1": "MuiGrid-grid-lg-1-72",
                          "grid-lg-10": "MuiGrid-grid-lg-10-81",
                          "grid-lg-11": "MuiGrid-grid-lg-11-82",
                          "grid-lg-12": "MuiGrid-grid-lg-12-83",
                          "grid-lg-2": "MuiGrid-grid-lg-2-73",
                          "grid-lg-3": "MuiGrid-grid-lg-3-74",
                          "grid-lg-4": "MuiGrid-grid-lg-4-75",
                          "grid-lg-5": "MuiGrid-grid-lg-5-76",
                          "grid-lg-6": "MuiGrid-grid-lg-6-77",
                          "grid-lg-7": "MuiGrid-grid-lg-7-78",
                          "grid-lg-8": "MuiGrid-grid-lg-8-79",
                          "grid-lg-9": "MuiGrid-grid-lg-9-80",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                          "grid-lg-true": "MuiGrid-grid-lg-true-71",
                          "grid-md-1": "MuiGrid-grid-md-1-58",
                          "grid-md-10": "MuiGrid-grid-md-10-67",
                          "grid-md-11": "MuiGrid-grid-md-11-68",
                          "grid-md-12": "MuiGrid-grid-md-12-69",
                          "grid-md-2": "MuiGrid-grid-md-2-59",
                          "grid-md-3": "MuiGrid-grid-md-3-60",
                          "grid-md-4": "MuiGrid-grid-md-4-61",
                          "grid-md-5": "MuiGrid-grid-md-5-62",
                          "grid-md-6": "MuiGrid-grid-md-6-63",
                          "grid-md-7": "MuiGrid-grid-md-7-64",
                          "grid-md-8": "MuiGrid-grid-md-8-65",
                          "grid-md-9": "MuiGrid-grid-md-9-66",
                          "grid-md-auto": "MuiGrid-grid-md-auto-56",
                          "grid-md-true": "MuiGrid-grid-md-true-57",
                          "grid-sm-1": "MuiGrid-grid-sm-1-44",
                          "grid-sm-10": "MuiGrid-grid-sm-10-53",
                          "grid-sm-11": "MuiGrid-grid-sm-11-54",
                          "grid-sm-12": "MuiGrid-grid-sm-12-55",
                          "grid-sm-2": "MuiGrid-grid-sm-2-45",
                          "grid-sm-3": "MuiGrid-grid-sm-3-46",
                          "grid-sm-4": "MuiGrid-grid-sm-4-47",
                          "grid-sm-5": "MuiGrid-grid-sm-5-48",
                          "grid-sm-6": "MuiGrid-grid-sm-6-49",
                          "grid-sm-7": "MuiGrid-grid-sm-7-50",
                          "grid-sm-8": "MuiGrid-grid-sm-8-51",
                          "grid-sm-9": "MuiGrid-grid-sm-9-52",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                          "grid-sm-true": "MuiGrid-grid-sm-true-43",
                          "grid-xl-1": "MuiGrid-grid-xl-1-86",
                          "grid-xl-10": "MuiGrid-grid-xl-10-95",
                          "grid-xl-11": "MuiGrid-grid-xl-11-96",
                          "grid-xl-12": "MuiGrid-grid-xl-12-97",
                          "grid-xl-2": "MuiGrid-grid-xl-2-87",
                          "grid-xl-3": "MuiGrid-grid-xl-3-88",
                          "grid-xl-4": "MuiGrid-grid-xl-4-89",
                          "grid-xl-5": "MuiGrid-grid-xl-5-90",
                          "grid-xl-6": "MuiGrid-grid-xl-6-91",
                          "grid-xl-7": "MuiGrid-grid-xl-7-92",
                          "grid-xl-8": "MuiGrid-grid-xl-8-93",
                          "grid-xl-9": "MuiGrid-grid-xl-9-94",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                          "grid-xl-true": "MuiGrid-grid-xl-true-85",
                          "grid-xs-1": "MuiGrid-grid-xs-1-30",
                          "grid-xs-10": "MuiGrid-grid-xs-10-39",
                          "grid-xs-11": "MuiGrid-grid-xs-11-40",
                          "grid-xs-12": "MuiGrid-grid-xs-12-41",
                          "grid-xs-2": "MuiGrid-grid-xs-2-31",
                          "grid-xs-3": "MuiGrid-grid-xs-3-32",
                          "grid-xs-4": "MuiGrid-grid-xs-4-33",
                          "grid-xs-5": "MuiGrid-grid-xs-5-34",
                          "grid-xs-6": "MuiGrid-grid-xs-6-35",
                          "grid-xs-7": "MuiGrid-grid-xs-7-36",
                          "grid-xs-8": "MuiGrid-grid-xs-8-37",
                          "grid-xs-9": "MuiGrid-grid-xs-9-38",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                          "grid-xs-true": "MuiGrid-grid-xs-true-29",
                          "item": "MuiGrid-item-2",
                          "justify-xs-center": "MuiGrid-justify-xs-center-18",
                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                          "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                          "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                          "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                          "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                        }
                      }
                      component="div"
                      container={true}
                      direction="row"
                      item={false}
                      justify="flex-start"
                      lg={false}
                      md={false}
                      sm={false}
                      spacing={16}
                      wrap="wrap"
                      xl={false}
                      xs={false}
                      zeroMinWidth={false}
                    >
                      <div
                        className="MuiGrid-container-1 MuiGrid-spacing-xs-16-24 MuiGrid-align-items-xs-flex-end-11 MuiGrid-align-content-xs-flex-end-15"
                      >
                        <WithStyles(Grid)
                          item={true}
                          xs={true}
                        >
                          <Grid
                            alignContent="stretch"
                            alignItems="stretch"
                            classes={
                              Object {
                                "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                                "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                                "container": "MuiGrid-container-1",
                                "direction-xs-column": "MuiGrid-direction-xs-column-4",
                                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                                "grid-lg-1": "MuiGrid-grid-lg-1-72",
                                "grid-lg-10": "MuiGrid-grid-lg-10-81",
                                "grid-lg-11": "MuiGrid-grid-lg-11-82",
                                "grid-lg-12": "MuiGrid-grid-lg-12-83",
                                "grid-lg-2": "MuiGrid-grid-lg-2-73",
                                "grid-lg-3": "MuiGrid-grid-lg-3-74",
                                "grid-lg-4": "MuiGrid-grid-lg-4-75",
                                "grid-lg-5": "MuiGrid-grid-lg-5-76",
                                "grid-lg-6": "MuiGrid-grid-lg-6-77",
                                "grid-lg-7": "MuiGrid-grid-lg-7-78",
                                "grid-lg-8": "MuiGrid-grid-lg-8-79",
                                "grid-lg-9": "MuiGrid-grid-lg-9-80",
                                "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                                "grid-lg-true": "MuiGrid-grid-lg-true-71",
                                "grid-md-1": "MuiGrid-grid-md-1-58",
                                "grid-md-10": "MuiGrid-grid-md-10-67",
                                "grid-md-11": "MuiGrid-grid-md-11-68",
                                "grid-md-12": "MuiGrid-grid-md-12-69",
                                "grid-md-2": "MuiGrid-grid-md-2-59",
                                "grid-md-3": "MuiGrid-grid-md-3-60",
                                "grid-md-4": "MuiGrid-grid-md-4-61",
                                "grid-md-5": "MuiGrid-grid-md-5-62",
                                "grid-md-6": "MuiGrid-grid-md-6-63",
                                "grid-md-7": "MuiGrid-grid-md-7-64",
                                "grid-md-8": "MuiGrid-grid-md-8-65",
                                "grid-md-9": "MuiGrid-grid-md-9-66",
                                "grid-md-auto": "MuiGrid-grid-md-auto-56",
                                "grid-md-true": "MuiGrid-grid-md-true-57",
                                "grid-sm-1": "MuiGrid-grid-sm-1-44",
                                "grid-sm-10": "MuiGrid-grid-sm-10-53",
                                "grid-sm-11": "MuiGrid-grid-sm-11-54",
                                "grid-sm-12": "MuiGrid-grid-sm-12-55",
                                "grid-sm-2": "MuiGrid-grid-sm-2-45",
                                "grid-sm-3": "MuiGrid-grid-sm-3-46",
                                "grid-sm-4": "MuiGrid-grid-sm-4-47",
                                "grid-sm-5": "MuiGrid-grid-sm-5-48",
                                "grid-sm-6": "MuiGrid-grid-sm-6-49",
                                "grid-sm-7": "MuiGrid-grid-sm-7-50",
                                "grid-sm-8": "MuiGrid-grid-sm-8-51",
                                "grid-sm-9": "MuiGrid-grid-sm-9-52",
                                "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                                "grid-sm-true": "MuiGrid-grid-sm-true-43",
                                "grid-xl-1": "MuiGrid-grid-xl-1-86",
                                "grid-xl-10": "MuiGrid-grid-xl-10-95",
                                "grid-xl-11": "MuiGrid-grid-xl-11-96",
                                "grid-xl-12": "MuiGrid-grid-xl-12-97",
                                "grid-xl-2": "MuiGrid-grid-xl-2-87",
                                "grid-xl-3": "MuiGrid-grid-xl-3-88",
                                "grid-xl-4": "MuiGrid-grid-xl-4-89",
                                "grid-xl-5": "MuiGrid-grid-xl-5-90",
                                "grid-xl-6": "MuiGrid-grid-xl-6-91",
                                "grid-xl-7": "MuiGrid-grid-xl-7-92",
                                "grid-xl-8": "MuiGrid-grid-xl-8-93",
                                "grid-xl-9": "MuiGrid-grid-xl-9-94",
                                "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                                "grid-xl-true": "MuiGrid-grid-xl-true-85",
                                "grid-xs-1": "MuiGrid-grid-xs-1-30",
                                "grid-xs-10": "MuiGrid-grid-xs-10-39",
                                "grid-xs-11": "MuiGrid-grid-xs-11-40",
                                "grid-xs-12": "MuiGrid-grid-xs-12-41",
                                "grid-xs-2": "MuiGrid-grid-xs-2-31",
                                "grid-xs-3": "MuiGrid-grid-xs-3-32",
                                "grid-xs-4": "MuiGrid-grid-xs-4-33",
                                "grid-xs-5": "MuiGrid-grid-xs-5-34",
                                "grid-xs-6": "MuiGrid-grid-xs-6-35",
                                "grid-xs-7": "MuiGrid-grid-xs-7-36",
                                "grid-xs-8": "MuiGrid-grid-xs-8-37",
                                "grid-xs-9": "MuiGrid-grid-xs-9-38",
                                "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                                "grid-xs-true": "MuiGrid-grid-xs-true-29",
                                "item": "MuiGrid-item-2",
                                "justify-xs-center": "MuiGrid-justify-xs-center-18",
                                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                                "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                                "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                                "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                                "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                                "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                                "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                                "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                                "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                              }
                            }
                            component="div"
                            container={false}
                            direction="row"
                            item={true}
                            justify="flex-start"
                            lg={false}
                            md={false}
                            sm={false}
                            spacing={0}
                            wrap="wrap"
                            xl={false}
                            xs={true}
                            zeroMinWidth={false}
                          >
                            <div
                              className="MuiGrid-item-2 MuiGrid-grid-xs-true-29"
                            >
                              <WithStyles(TextFieldWrapper)
                                InputProps={
                                  Object {
                                    "aria-activedescendant": null,
                                    "aria-autocomplete": "list",
                                    "aria-controls": null,
                                    "aria-labelledby": "autosuggest-label",
                                    "autoComplete": "off",
                                    "classes": Object {
                                      "root": "inputRoot",
                                    },
                                    "id": "autosuggest-input",
                                    "inputRef": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onKeyDown": [Function],
                                    "value": "",
                                  }
                                }
                                disabled={true}
                                error={false}
                                errorText=""
                                fullWidth={true}
                                id="autosuggest-input"
                                label="autosuggest"
                                placeholder={null}
                                required={false}
                                value=""
                              >
                                <TextFieldWrapper
                                  InputProps={
                                    Object {
                                      "aria-activedescendant": null,
                                      "aria-autocomplete": "list",
                                      "aria-controls": null,
                                      "aria-labelledby": "autosuggest-label",
                                      "autoComplete": "off",
                                      "classes": Object {
                                        "root": "inputRoot",
                                      },
                                      "id": "autosuggest-input",
                                      "inputRef": [Function],
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onKeyDown": [Function],
                                      "value": "",
                                    }
                                  }
                                  classes={Object {}}
                                  disabled={true}
                                  error={false}
                                  errorText=""
                                  fullWidth={true}
                                  id="autosuggest-input"
                                  label="autosuggest"
                                  placeholder={null}
                                  required={false}
                                  value=""
                                >
                                  <TextField
                                    InputLabelProps={
                                      Object {
                                        "hidden": false,
                                        "htmlFor": "autosuggest-input",
                                        "id": "autosuggest-input-label",
                                        "shrink": undefined,
                                      }
                                    }
                                    InputProps={
                                      Object {
                                        "aria-activedescendant": null,
                                        "aria-autocomplete": "list",
                                        "aria-controls": null,
                                        "aria-labelledby": "autosuggest-label",
                                        "autoComplete": "off",
                                        "classes": Object {
                                          "root": "inputRoot",
                                        },
                                        "id": "autosuggest-input",
                                        "inputRef": [Function],
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onKeyDown": [Function],
                                        "value": "",
                                      }
                                    }
                                    classes={Object {}}
                                    disabled={true}
                                    error={false}
                                    fullWidth={true}
                                    id="autosuggest-input"
                                    inputProps={
                                      Object {
                                        "aria-label": "autosuggest",
                                        "aria-labelledby": "autosuggest-input-label",
                                        "id": "autosuggest-input",
                                        "label": "autosuggest",
                                      }
                                    }
                                    label="autosuggest"
                                    placeholder={null}
                                    required={false}
                                    select={false}
                                    value=""
                                    variant="standard"
                                  >
                                    <WithStyles(FormControl)
                                      classes={Object {}}
                                      disabled={true}
                                      error={false}
                                      fullWidth={true}
                                      required={false}
                                      variant="standard"
                                    >
                                      <FormControl
                                        classes={
                                          Object {
                                            "fullWidth": "MuiFormControl-fullWidth-101",
                                            "marginDense": "MuiFormControl-marginDense-100",
                                            "marginNormal": "MuiFormControl-marginNormal-99",
                                            "root": "MuiFormControl-root-98",
                                          }
                                        }
                                        component="div"
                                        disabled={true}
                                        error={false}
                                        fullWidth={true}
                                        margin="none"
                                        required={false}
                                        variant="standard"
                                      >
                                        <div
                                          className="MuiFormControl-root-98 MuiFormControl-fullWidth-101"
                                        >
                                          <WithStyles(WithFormControlContext(InputLabel))
                                            hidden={false}
                                            htmlFor="autosuggest-input"
                                            id="autosuggest-input-label"
                                          >
                                            <WithFormControlContext(InputLabel)
                                              classes={
                                                Object {
                                                  "animated": "MuiInputLabel-animated-110",
                                                  "disabled": "MuiInputLabel-disabled-104",
                                                  "error": "MuiInputLabel-error-105",
                                                  "filled": "MuiInputLabel-filled-111",
                                                  "focused": "MuiInputLabel-focused-103",
                                                  "formControl": "MuiInputLabel-formControl-107",
                                                  "marginDense": "MuiInputLabel-marginDense-108",
                                                  "outlined": "MuiInputLabel-outlined-112",
                                                  "required": "MuiInputLabel-required-106",
                                                  "root": "MuiInputLabel-root-102",
                                                  "shrink": "MuiInputLabel-shrink-109",
                                                }
                                              }
                                              hidden={false}
                                              htmlFor="autosuggest-input"
                                              id="autosuggest-input-label"
                                            >
                                              <InputLabel
                                                classes={
                                                  Object {
                                                    "animated": "MuiInputLabel-animated-110",
                                                    "disabled": "MuiInputLabel-disabled-104",
                                                    "error": "MuiInputLabel-error-105",
                                                    "filled": "MuiInputLabel-filled-111",
                                                    "focused": "MuiInputLabel-focused-103",
                                                    "formControl": "MuiInputLabel-formControl-107",
                                                    "marginDense": "MuiInputLabel-marginDense-108",
                                                    "outlined": "MuiInputLabel-outlined-112",
                                                    "required": "MuiInputLabel-required-106",
                                                    "root": "MuiInputLabel-root-102",
                                                    "shrink": "MuiInputLabel-shrink-109",
                                                  }
                                                }
                                                disableAnimation={false}
                                                hidden={false}
                                                htmlFor="autosuggest-input"
                                                id="autosuggest-input-label"
                                                muiFormControl={
                                                  Object {
                                                    "adornedStart": false,
                                                    "disabled": true,
                                                    "error": false,
                                                    "filled": false,
                                                    "focused": false,
                                                    "margin": "none",
                                                    "onBlur": [Function],
                                                    "onEmpty": [Function],
                                                    "onFilled": [Function],
                                                    "onFocus": [Function],
                                                    "required": false,
                                                    "variant": "standard",
                                                  }
                                                }
                                              >
                                                <WithStyles(WithFormControlContext(FormLabel))
                                                  className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                  classes={
                                                    Object {
                                                      "disabled": "MuiInputLabel-disabled-104",
                                                      "error": "MuiInputLabel-error-105",
                                                      "focused": "MuiInputLabel-focused-103",
                                                      "required": "MuiInputLabel-required-106",
                                                    }
                                                  }
                                                  data-shrink={false}
                                                  hidden={false}
                                                  htmlFor="autosuggest-input"
                                                  id="autosuggest-input-label"
                                                >
                                                  <WithFormControlContext(FormLabel)
                                                    className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                    classes={
                                                      Object {
                                                        "asterisk": "MuiFormLabel-asterisk-119",
                                                        "disabled": "MuiFormLabel-disabled-115 MuiInputLabel-disabled-104",
                                                        "error": "MuiFormLabel-error-116 MuiInputLabel-error-105",
                                                        "filled": "MuiFormLabel-filled-117",
                                                        "focused": "MuiFormLabel-focused-114 MuiInputLabel-focused-103",
                                                        "required": "MuiFormLabel-required-118 MuiInputLabel-required-106",
                                                        "root": "MuiFormLabel-root-113",
                                                      }
                                                    }
                                                    data-shrink={false}
                                                    hidden={false}
                                                    htmlFor="autosuggest-input"
                                                    id="autosuggest-input-label"
                                                  >
                                                    <FormLabel
                                                      className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                      classes={
                                                        Object {
                                                          "asterisk": "MuiFormLabel-asterisk-119",
                                                          "disabled": "MuiFormLabel-disabled-115 MuiInputLabel-disabled-104",
                                                          "error": "MuiFormLabel-error-116 MuiInputLabel-error-105",
                                                          "filled": "MuiFormLabel-filled-117",
                                                          "focused": "MuiFormLabel-focused-114 MuiInputLabel-focused-103",
                                                          "required": "MuiFormLabel-required-118 MuiInputLabel-required-106",
                                                          "root": "MuiFormLabel-root-113",
                                                        }
                                                      }
                                                      component="label"
                                                      data-shrink={false}
                                                      hidden={false}
                                                      htmlFor="autosuggest-input"
                                                      id="autosuggest-input-label"
                                                      muiFormControl={
                                                        Object {
                                                          "adornedStart": false,
                                                          "disabled": true,
                                                          "error": false,
                                                          "filled": false,
                                                          "focused": false,
                                                          "margin": "none",
                                                          "onBlur": [Function],
                                                          "onEmpty": [Function],
                                                          "onFilled": [Function],
                                                          "onFocus": [Function],
                                                          "required": false,
                                                          "variant": "standard",
                                                        }
                                                      }
                                                    >
                                                      <label
                                                        className="MuiFormLabel-root-113 MuiFormLabel-disabled-115 MuiInputLabel-disabled-104 MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                        data-shrink={false}
                                                        hidden={false}
                                                        htmlFor="autosuggest-input"
                                                        id="autosuggest-input-label"
                                                      >
                                                        autosuggest
                                                      </label>
                                                    </FormLabel>
                                                  </WithFormControlContext(FormLabel)>
                                                </WithStyles(WithFormControlContext(FormLabel))>
                                              </InputLabel>
                                            </WithFormControlContext(InputLabel)>
                                          </WithStyles(WithFormControlContext(InputLabel))>
                                          <WithStyles(Input)
                                            aria-activedescendant={null}
                                            aria-autocomplete="list"
                                            aria-controls={null}
                                            aria-labelledby="autosuggest-label"
                                            autoComplete="off"
                                            classes={
                                              Object {
                                                "root": "inputRoot",
                                              }
                                            }
                                            fullWidth={true}
                                            id="autosuggest-input"
                                            inputProps={
                                              Object {
                                                "aria-label": "autosuggest",
                                                "aria-labelledby": "autosuggest-input-label",
                                                "id": "autosuggest-input",
                                                "label": "autosuggest",
                                              }
                                            }
                                            inputRef={[Function]}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder={null}
                                            value=""
                                          >
                                            <Input
                                              aria-activedescendant={null}
                                              aria-autocomplete="list"
                                              aria-controls={null}
                                              aria-labelledby="autosuggest-label"
                                              autoComplete="off"
                                              classes={
                                                Object {
                                                  "disabled": "MuiInput-disabled-123",
                                                  "error": "MuiInput-error-125",
                                                  "focused": "MuiInput-focused-122",
                                                  "formControl": "MuiInput-formControl-121",
                                                  "fullWidth": "MuiInput-fullWidth-127",
                                                  "input": "MuiInput-input-128",
                                                  "inputMarginDense": "MuiInput-inputMarginDense-129",
                                                  "inputMultiline": "MuiInput-inputMultiline-130",
                                                  "inputType": "MuiInput-inputType-131",
                                                  "inputTypeSearch": "MuiInput-inputTypeSearch-132",
                                                  "multiline": "MuiInput-multiline-126",
                                                  "root": "MuiInput-root-120 inputRoot",
                                                  "underline": "MuiInput-underline-124",
                                                }
                                              }
                                              fullWidth={true}
                                              id="autosuggest-input"
                                              inputProps={
                                                Object {
                                                  "aria-label": "autosuggest",
                                                  "aria-labelledby": "autosuggest-input-label",
                                                  "id": "autosuggest-input",
                                                  "label": "autosuggest",
                                                }
                                              }
                                              inputRef={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onKeyDown={[Function]}
                                              placeholder={null}
                                              value=""
                                            >
                                              <WithStyles(WithFormControlContext(InputBase))
                                                aria-activedescendant={null}
                                                aria-autocomplete="list"
                                                aria-controls={null}
                                                aria-labelledby="autosuggest-label"
                                                autoComplete="off"
                                                classes={
                                                  Object {
                                                    "disabled": "MuiInput-disabled-123",
                                                    "error": "MuiInput-error-125",
                                                    "focused": "MuiInput-focused-122",
                                                    "formControl": "MuiInput-formControl-121",
                                                    "fullWidth": "MuiInput-fullWidth-127",
                                                    "input": "MuiInput-input-128",
                                                    "inputMarginDense": "MuiInput-inputMarginDense-129",
                                                    "inputMultiline": "MuiInput-inputMultiline-130",
                                                    "inputType": "MuiInput-inputType-131",
                                                    "inputTypeSearch": "MuiInput-inputTypeSearch-132",
                                                    "multiline": "MuiInput-multiline-126",
                                                    "root": "MuiInput-root-120 inputRoot MuiInput-underline-124",
                                                    "underline": null,
                                                  }
                                                }
                                                fullWidth={true}
                                                id="autosuggest-input"
                                                inputComponent="input"
                                                inputProps={
                                                  Object {
                                                    "aria-label": "autosuggest",
                                                    "aria-labelledby": "autosuggest-input-label",
                                                    "id": "autosuggest-input",
                                                    "label": "autosuggest",
                                                  }
                                                }
                                                inputRef={[Function]}
                                                multiline={false}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onKeyDown={[Function]}
                                                placeholder={null}
                                                type="text"
                                                value=""
                                              >
                                                <WithFormControlContext(InputBase)
                                                  aria-activedescendant={null}
                                                  aria-autocomplete="list"
                                                  aria-controls={null}
                                                  aria-labelledby="autosuggest-label"
                                                  autoComplete="off"
                                                  classes={
                                                    Object {
                                                      "adornedEnd": "MuiInputBase-adornedEnd-138",
                                                      "adornedStart": "MuiInputBase-adornedStart-137",
                                                      "disabled": "MuiInputBase-disabled-136 MuiInput-disabled-123",
                                                      "error": "MuiInputBase-error-139 MuiInput-error-125",
                                                      "focused": "MuiInputBase-focused-135 MuiInput-focused-122",
                                                      "formControl": "MuiInputBase-formControl-134 MuiInput-formControl-121",
                                                      "fullWidth": "MuiInputBase-fullWidth-142 MuiInput-fullWidth-127",
                                                      "input": "MuiInputBase-input-143 MuiInput-input-128",
                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-149",
                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart-148",
                                                      "inputMarginDense": "MuiInputBase-inputMarginDense-144 MuiInput-inputMarginDense-129",
                                                      "inputMultiline": "MuiInputBase-inputMultiline-145 MuiInput-inputMultiline-130",
                                                      "inputType": "MuiInputBase-inputType-146 MuiInput-inputType-131",
                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch-147 MuiInput-inputTypeSearch-132",
                                                      "marginDense": "MuiInputBase-marginDense-140",
                                                      "multiline": "MuiInputBase-multiline-141 MuiInput-multiline-126",
                                                      "root": "MuiInputBase-root-133 MuiInput-root-120 inputRoot MuiInput-underline-124",
                                                    }
                                                  }
                                                  fullWidth={true}
                                                  id="autosuggest-input"
                                                  inputComponent="input"
                                                  inputProps={
                                                    Object {
                                                      "aria-label": "autosuggest",
                                                      "aria-labelledby": "autosuggest-input-label",
                                                      "id": "autosuggest-input",
                                                      "label": "autosuggest",
                                                    }
                                                  }
                                                  inputRef={[Function]}
                                                  multiline={false}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder={null}
                                                  type="text"
                                                  value=""
                                                >
                                                  <InputBase
                                                    aria-activedescendant={null}
                                                    aria-autocomplete="list"
                                                    aria-controls={null}
                                                    aria-labelledby="autosuggest-label"
                                                    autoComplete="off"
                                                    classes={
                                                      Object {
                                                        "adornedEnd": "MuiInputBase-adornedEnd-138",
                                                        "adornedStart": "MuiInputBase-adornedStart-137",
                                                        "disabled": "MuiInputBase-disabled-136 MuiInput-disabled-123",
                                                        "error": "MuiInputBase-error-139 MuiInput-error-125",
                                                        "focused": "MuiInputBase-focused-135 MuiInput-focused-122",
                                                        "formControl": "MuiInputBase-formControl-134 MuiInput-formControl-121",
                                                        "fullWidth": "MuiInputBase-fullWidth-142 MuiInput-fullWidth-127",
                                                        "input": "MuiInputBase-input-143 MuiInput-input-128",
                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-149",
                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart-148",
                                                        "inputMarginDense": "MuiInputBase-inputMarginDense-144 MuiInput-inputMarginDense-129",
                                                        "inputMultiline": "MuiInputBase-inputMultiline-145 MuiInput-inputMultiline-130",
                                                        "inputType": "MuiInputBase-inputType-146 MuiInput-inputType-131",
                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch-147 MuiInput-inputTypeSearch-132",
                                                        "marginDense": "MuiInputBase-marginDense-140",
                                                        "multiline": "MuiInputBase-multiline-141 MuiInput-multiline-126",
                                                        "root": "MuiInputBase-root-133 MuiInput-root-120 inputRoot MuiInput-underline-124",
                                                      }
                                                    }
                                                    fullWidth={true}
                                                    id="autosuggest-input"
                                                    inputComponent="input"
                                                    inputProps={
                                                      Object {
                                                        "aria-label": "autosuggest",
                                                        "aria-labelledby": "autosuggest-input-label",
                                                        "id": "autosuggest-input",
                                                        "label": "autosuggest",
                                                      }
                                                    }
                                                    inputRef={[Function]}
                                                    muiFormControl={
                                                      Object {
                                                        "adornedStart": false,
                                                        "disabled": true,
                                                        "error": false,
                                                        "filled": false,
                                                        "focused": false,
                                                        "margin": "none",
                                                        "onBlur": [Function],
                                                        "onEmpty": [Function],
                                                        "onFilled": [Function],
                                                        "onFocus": [Function],
                                                        "required": false,
                                                        "variant": "standard",
                                                      }
                                                    }
                                                    multiline={false}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder={null}
                                                    type="text"
                                                    value=""
                                                  >
                                                    <div
                                                      aria-activedescendant={null}
                                                      aria-autocomplete="list"
                                                      aria-controls={null}
                                                      aria-labelledby="autosuggest-label"
                                                      className="MuiInputBase-root-133 MuiInput-root-120 inputRoot MuiInput-underline-124 MuiInputBase-disabled-136 MuiInput-disabled-123 MuiInputBase-fullWidth-142 MuiInput-fullWidth-127 MuiInputBase-formControl-134 MuiInput-formControl-121"
                                                      onClick={[Function]}
                                                    >
                                                      <input
                                                        aria-invalid={false}
                                                        aria-label="autosuggest"
                                                        aria-labelledby="autosuggest-input-label"
                                                        autoComplete="off"
                                                        className="MuiInputBase-input-143 MuiInput-input-128 MuiInputBase-disabled-136 MuiInput-disabled-123"
                                                        disabled={true}
                                                        id="autosuggest-input"
                                                        label="autosuggest"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder={null}
                                                        required={false}
                                                        type="text"
                                                        value=""
                                                      />
                                                    </div>
                                                  </InputBase>
                                                </WithFormControlContext(InputBase)>
                                              </WithStyles(WithFormControlContext(InputBase))>
                                            </Input>
                                          </WithStyles(Input)>
                                        </div>
                                      </FormControl>
                                    </WithStyles(FormControl)>
                                  </TextField>
                                </TextFieldWrapper>
                              </WithStyles(TextFieldWrapper)>
                            </div>
                          </Grid>
                        </WithStyles(Grid)>
                      </div>
                    </Grid>
                  </WithStyles(Grid)>
                </div>
              </Downshift>
            </div>
          </AutoCompleteAsyncField>
        </MuiPickersUtilsProvider>
      </MuiThemeProviderOld>
    </Router>
  </MemoryRouter>
</Provider>
`;
