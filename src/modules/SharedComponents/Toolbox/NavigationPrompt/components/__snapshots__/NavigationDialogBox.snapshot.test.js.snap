// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NavigationDialogBox component should not render 1`] = `<span />`;

exports[`NavigationDialogBox component should render 1`] = `
<NavigationDialogBox
  txt={
    Object {
      "cancelButtonLabel": "No",
      "confirmButtonLabel": "Yes",
      "confirmationMessage": "Are you sure?",
      "confirmationTitle": "Confirmation",
    }
  }
  when={true}
>
  <withRouter(NavigationPrompt)
    when={true}
  >
    <NavigationPrompt
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      location={
        Object {
          "hash": "",
          "key": "testKey",
          "pathname": "/",
          "search": "",
        }
      }
      match={
        Object {
          "isExact": true,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
      when={true}
    >
      <div>
        <WithStyles(ConfirmDialogBox)
          locale={
            Object {
              "cancelButtonLabel": "No",
              "confirmButtonLabel": "Yes",
              "confirmationMessage": "Are you sure?",
              "confirmationTitle": "Confirmation",
            }
          }
          onAction={[Function]}
          onCancelAction={[Function]}
          onRef={[Function]}
        >
          <ConfirmDialogBox
            classes={
              Object {
                "alternateActionButtonClass": "ConfirmDialogBox-alternateActionButtonClass-1",
              }
            }
            hideCancelButton={false}
            locale={
              Object {
                "cancelButtonLabel": "No",
                "confirmButtonLabel": "Yes",
                "confirmationMessage": "Are you sure?",
                "confirmationTitle": "Confirmation",
              }
            }
            onAction={[Function]}
            onCancelAction={[Function]}
            onRef={[Function]}
            showAlternateActionButton={false}
          >
            <WithStyles(Dialog)
              open={false}
              style={
                Object {
                  "padding": 6,
                }
              }
            >
              <Dialog
                PaperComponent={[Function]}
                TransitionComponent={[Function]}
                classes={
                  Object {
                    "container": "MuiDialog-container-5",
                    "paper": "MuiDialog-paper-6",
                    "paperFullScreen": "MuiDialog-paperFullScreen-15",
                    "paperFullWidth": "MuiDialog-paperFullWidth-14",
                    "paperScrollBody": "MuiDialog-paperScrollBody-8",
                    "paperScrollPaper": "MuiDialog-paperScrollPaper-7",
                    "paperWidthLg": "MuiDialog-paperWidthLg-12",
                    "paperWidthMd": "MuiDialog-paperWidthMd-11",
                    "paperWidthSm": "MuiDialog-paperWidthSm-10",
                    "paperWidthXl": "MuiDialog-paperWidthXl-13",
                    "paperWidthXs": "MuiDialog-paperWidthXs-9",
                    "root": "MuiDialog-root-2",
                    "scrollBody": "MuiDialog-scrollBody-4",
                    "scrollPaper": "MuiDialog-scrollPaper-3",
                  }
                }
                disableBackdropClick={false}
                disableEscapeKeyDown={false}
                fullScreen={false}
                fullWidth={false}
                maxWidth="sm"
                open={false}
                scroll="paper"
                style={
                  Object {
                    "padding": 6,
                  }
                }
                transitionDuration={
                  Object {
                    "enter": 225,
                    "exit": 195,
                  }
                }
              >
                <WithStyles(Modal)
                  BackdropProps={
                    Object {
                      "transitionDuration": Object {
                        "enter": 225,
                        "exit": 195,
                      },
                    }
                  }
                  className="MuiDialog-root-2"
                  closeAfterTransition={true}
                  disableBackdropClick={false}
                  disableEscapeKeyDown={false}
                  open={false}
                  role="dialog"
                  style={
                    Object {
                      "padding": 6,
                    }
                  }
                >
                  <Modal
                    BackdropComponent={[Function]}
                    BackdropProps={
                      Object {
                        "transitionDuration": Object {
                          "enter": 225,
                          "exit": 195,
                        },
                      }
                    }
                    className="MuiDialog-root-2"
                    classes={
                      Object {
                        "hidden": "MuiModal-hidden-17",
                        "root": "MuiModal-root-16",
                      }
                    }
                    closeAfterTransition={true}
                    disableAutoFocus={false}
                    disableBackdropClick={false}
                    disableEnforceFocus={false}
                    disableEscapeKeyDown={false}
                    disablePortal={false}
                    disableRestoreFocus={false}
                    hideBackdrop={false}
                    keepMounted={false}
                    manager={
                      ModalManager {
                        "data": Array [],
                        "handleContainerOverflow": true,
                        "hideSiblingNodes": true,
                        "modals": Array [],
                      }
                    }
                    open={false}
                    role="dialog"
                    style={
                      Object {
                        "padding": 6,
                      }
                    }
                  />
                </WithStyles(Modal)>
              </Dialog>
            </WithStyles(Dialog)>
          </ConfirmDialogBox>
        </WithStyles(ConfirmDialogBox)>
      </div>
    </NavigationPrompt>
  </withRouter(NavigationPrompt)>
</NavigationDialogBox>
`;
