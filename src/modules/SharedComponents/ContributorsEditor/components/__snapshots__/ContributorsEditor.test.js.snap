// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContributorsEditor can edit a selected contributor 1`] = `
Object {
  "contributorIndexSelectedToEdit": null,
  "contributors": Array [
    Object {
      "authorId": null,
      "disabled": true,
      "required": false,
      "selected": false,
      "uqIdentifier": 410,
    },
  ],
  "errorMessage": "",
  "isCurrentAuthorSelected": false,
}
`;

exports[`ContributorsEditor can not add contributor with same id 1`] = `
Object {
  "contributorIndexSelectedToEdit": null,
  "contributors": Array [
    Object {
      "aut_id": 410,
      "nameAsPublished": "test",
    },
  ],
  "errorMessage": "Unable to add an item with the same identifier.",
  "isCurrentAuthorSelected": false,
}
`;

exports[`ContributorsEditor can not edit and add contributor with same id 1`] = `
Object {
  "contributorIndexSelectedToEdit": 1,
  "contributors": Array [
    Object {
      "aut_id": 410,
      "nameAsPublished": "test",
    },
    Object {
      "nameAsPublished": "Test 2",
    },
  ],
  "errorMessage": "Unable to add an item with the same identifier.",
  "isCurrentAuthorSelected": false,
}
`;

exports[`ContributorsEditor can not edit and add contributor with same id 2`] = `
Object {
  "contributorIndexSelectedToEdit": null,
  "contributors": Array [
    Object {
      "aut_id": 410,
      "nameAsPublished": "test",
    },
    Object {
      "authorId": null,
      "disabled": false,
      "nameAsPublished": "EditedContributorAuthorIdNOTInTheList",
      "required": false,
      "selected": false,
    },
  ],
  "errorMessage": "",
  "isCurrentAuthorSelected": false,
}
`;

exports[`ContributorsEditor chooses a contributor to edit 1`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  />
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(List)
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <WithStyles(ContributorRowHeader)
          hideDelete={false}
          isInfinite={false}
          isNtro={false}
          onDeleteAll={[Function]}
          showContributorAssignment={false}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
      </WithStyles(List)>
      <WithStyles(List)
        classes={
          Object {
            "root": "ContributorList list ",
          }
        }
      >
        <WithStyles(WithTheme(WithWidth(ContributorRow)))
          canEdit={true}
          canMoveDown={true}
          canMoveUp={false}
          className="ContributorRow"
          contributor={
            Object {
              "nameAsPublished": "test1",
              "selected": false,
            }
          }
          enableSelect={false}
          hideDelete={false}
          hideReorder={false}
          index={0}
          key="ContributorRow_0"
          onDelete={[Function]}
          onEdit={[Function]}
          onMoveDown={[Function]}
          onMoveUp={[Function]}
          onSelect={null}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
        <WithStyles(WithTheme(WithWidth(ContributorRow)))
          canEdit={true}
          canMoveDown={true}
          canMoveUp={true}
          className="ContributorRow"
          contributor={
            Object {
              "nameAsPublished": "test2",
              "selected": false,
            }
          }
          enableSelect={false}
          hideDelete={false}
          hideReorder={false}
          index={1}
          key="ContributorRow_1"
          onDelete={[Function]}
          onEdit={[Function]}
          onMoveDown={[Function]}
          onMoveUp={[Function]}
          onSelect={null}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
        <WithStyles(WithTheme(WithWidth(ContributorRow)))
          canEdit={true}
          canMoveDown={false}
          canMoveUp={true}
          className="ContributorRow"
          contributor={
            Object {
              "nameAsPublished": "test3",
              "selected": false,
            }
          }
          enableSelect={false}
          hideDelete={false}
          hideReorder={false}
          index={2}
          key="ContributorRow_2"
          onDelete={[Function]}
          onEdit={[Function]}
          onMoveDown={[Function]}
          onMoveUp={[Function]}
          onSelect={null}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
      </WithStyles(List)>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</div>
`;

exports[`ContributorsEditor chooses a contributor to edit 2`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  />
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(List)
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <WithStyles(ContributorRowHeader)
          hideDelete={false}
          isInfinite={false}
          isNtro={false}
          onDeleteAll={[Function]}
          showContributorAssignment={false}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
      </WithStyles(List)>
      <WithStyles(List)
        classes={
          Object {
            "root": "ContributorList list ",
          }
        }
      >
        <WithStyles(WithTheme(WithWidth(ContributorRow)))
          canEdit={true}
          canMoveDown={true}
          canMoveUp={false}
          className="ContributorRow"
          contributor={
            Object {
              "nameAsPublished": "test1",
              "selected": false,
            }
          }
          enableSelect={false}
          hideDelete={false}
          hideReorder={false}
          index={0}
          key="ContributorRow_0"
          onDelete={[Function]}
          onEdit={[Function]}
          onMoveDown={[Function]}
          onMoveUp={[Function]}
          onSelect={null}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
        <WithStyles(WithTheme(WithWidth(ContributorRow)))
          canEdit={true}
          canMoveDown={true}
          canMoveUp={true}
          className="ContributorRow"
          contributor={
            Object {
              "nameAsPublished": "test2",
              "selected": true,
            }
          }
          enableSelect={false}
          hideDelete={false}
          hideReorder={false}
          index={1}
          key="ContributorRow_1"
          onDelete={[Function]}
          onEdit={[Function]}
          onMoveDown={[Function]}
          onMoveUp={[Function]}
          onSelect={null}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
        <WithStyles(WithTheme(WithWidth(ContributorRow)))
          canEdit={true}
          canMoveDown={false}
          canMoveUp={true}
          className="ContributorRow"
          contributor={
            Object {
              "nameAsPublished": "test3",
              "selected": false,
            }
          }
          enableSelect={false}
          hideDelete={false}
          hideReorder={false}
          index={2}
          key="ContributorRow_2"
          onDelete={[Function]}
          onEdit={[Function]}
          onMoveDown={[Function]}
          onMoveUp={[Function]}
          onSelect={null}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
      </WithStyles(List)>
      <div
        style={
          Object {
            "marginTop": 24,
          }
        }
      >
        <ContributorForm
          author={
            Object {
              "aut_id": 1,
            }
          }
          canEdit={true}
          classes={
            Object {
              "list": "list",
              "scroll": "scroll",
            }
          }
          contributor={
            Object {
              "nameAsPublished": "test2",
              "selected": true,
            }
          }
          disableNameAsPublished={true}
          displayCancel={true}
          editMode={true}
          enableUqIdentifierOnAffiliationChange={false}
          hideDelete={false}
          hideReorder={false}
          isContributorAssigned={true}
          isNtro={false}
          key="1"
          locale={
            Object {
              "addButton": "Add author",
              "creatorRoleHint": "Role of the creator in relation to the dataset",
              "creatorRoleLabel": "Creator role",
              "descriptionStep1": <div>
                <span
                  className="authorSteps"
                >
                  Step 1 of 2
                </span>
                - Please 
                <b>
                  add to a list of contributors below
                </b>
                , in the format and order that they are published.
              </div>,
              "descriptionStep1NoStep2": <div>
                Please 
                <b>
                  add to a list of contributors below
                </b>
                , in the format and order that they are published.
              </div>,
              "identifierLabel": "UQ identifier (if available)",
              "nameAsPublishedHint": "Please type the name exactly as published",
              "nameAsPublishedLabel": "Name as published",
            }
          }
          onSubmit={[Function]}
          required={false}
          showContributorAssignment={false}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
      </div>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</div>
`;

exports[`ContributorsEditor renders 3 contributor rows with no infinite scroll 1`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <ContributorForm
        author={
          Object {
            "aut_id": 1,
          }
        }
        canEdit={false}
        classes={
          Object {
            "list": "list",
            "scroll": "scroll",
          }
        }
        contributor={Object {}}
        contributors={Array []}
        disableNameAsPublished={false}
        displayCancel={false}
        editMode={false}
        enableUqIdentifierOnAffiliationChange={true}
        hideDelete={false}
        hideReorder={false}
        isContributorAssigned={true}
        isNtro={false}
        key="null"
        locale={
          Object {
            "addButton": "Add author",
            "creatorRoleHint": "Role of the creator in relation to the dataset",
            "creatorRoleLabel": "Creator role",
            "descriptionStep1": <div>
              <span
                className="authorSteps"
              >
                Step 1 of 2
              </span>
              - Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "descriptionStep1NoStep2": <div>
              Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "identifierLabel": "UQ identifier (if available)",
            "nameAsPublishedHint": "Please type the name exactly as published",
            "nameAsPublishedLabel": "Name as published",
          }
        }
        onSubmit={[Function]}
        required={false}
        showContributorAssignment={false}
        showIdentifierLookup={false}
        showRoleInput={false}
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(List)
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <WithStyles(ContributorRowHeader)
          hideDelete={false}
          isInfinite={false}
          isNtro={false}
          onDeleteAll={[Function]}
          showContributorAssignment={false}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
      </WithStyles(List)>
      <WithStyles(List)
        classes={
          Object {
            "root": "ContributorList list ",
          }
        }
      >
        <WithStyles(WithTheme(WithWidth(ContributorRow)))
          canEdit={false}
          canMoveDown={true}
          canMoveUp={false}
          className="ContributorRow"
          contributor={
            Object {
              "nameAsPublished": 1,
            }
          }
          enableSelect={false}
          hideDelete={false}
          hideReorder={false}
          index={0}
          key="ContributorRow_0"
          onDelete={[Function]}
          onEdit={[Function]}
          onMoveDown={[Function]}
          onMoveUp={[Function]}
          onSelect={[Function]}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
        <WithStyles(WithTheme(WithWidth(ContributorRow)))
          canEdit={false}
          canMoveDown={true}
          canMoveUp={true}
          className="ContributorRow"
          contributor={
            Object {
              "nameAsPublished": 2,
            }
          }
          enableSelect={false}
          hideDelete={false}
          hideReorder={false}
          index={1}
          key="ContributorRow_1"
          onDelete={[Function]}
          onEdit={[Function]}
          onMoveDown={[Function]}
          onMoveUp={[Function]}
          onSelect={[Function]}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
        <WithStyles(WithTheme(WithWidth(ContributorRow)))
          canEdit={false}
          canMoveDown={false}
          canMoveUp={true}
          className="ContributorRow"
          contributor={
            Object {
              "nameAsPublished": 3,
            }
          }
          enableSelect={false}
          hideDelete={false}
          hideReorder={false}
          index={2}
          key="ContributorRow_2"
          onDelete={[Function]}
          onEdit={[Function]}
          onMoveDown={[Function]}
          onMoveUp={[Function]}
          onSelect={[Function]}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
      </WithStyles(List)>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</div>
`;

exports[`ContributorsEditor renders 4 contributor rows wrapped in an infinite scroll 1`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <ContributorForm
        author={
          Object {
            "aut_id": 1,
          }
        }
        canEdit={false}
        classes={
          Object {
            "list": "list",
            "scroll": "scroll",
          }
        }
        contributor={Object {}}
        contributors={Array []}
        disableNameAsPublished={false}
        displayCancel={false}
        editMode={false}
        enableUqIdentifierOnAffiliationChange={true}
        hideDelete={false}
        hideReorder={false}
        isContributorAssigned={true}
        isNtro={false}
        key="null"
        locale={
          Object {
            "addButton": "Add author",
            "creatorRoleHint": "Role of the creator in relation to the dataset",
            "creatorRoleLabel": "Creator role",
            "descriptionStep1": <div>
              <span
                className="authorSteps"
              >
                Step 1 of 2
              </span>
              - Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "descriptionStep1NoStep2": <div>
              Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "identifierLabel": "UQ identifier (if available)",
            "nameAsPublishedHint": "Please type the name exactly as published",
            "nameAsPublishedLabel": "Name as published",
          }
        }
        onSubmit={[Function]}
        required={false}
        showContributorAssignment={false}
        showIdentifierLookup={false}
        showRoleInput={false}
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(List)
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <WithStyles(ContributorRowHeader)
          hideDelete={false}
          isInfinite={true}
          isNtro={false}
          onDeleteAll={[Function]}
          showContributorAssignment={false}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
      </WithStyles(List)>
      <WithStyles(List)
        classes={
          Object {
            "root": "ContributorList list scroll",
          }
        }
      >
        <WithStyles(WithTheme(WithWidth(ContributorRow)))
          canEdit={false}
          canMoveDown={true}
          canMoveUp={false}
          className="ContributorRow"
          contributor={
            Object {
              "displayName": 1,
            }
          }
          enableSelect={false}
          hideDelete={false}
          hideReorder={false}
          index={0}
          key="ContributorRow_0"
          onDelete={[Function]}
          onEdit={[Function]}
          onMoveDown={[Function]}
          onMoveUp={[Function]}
          onSelect={[Function]}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
        <WithStyles(WithTheme(WithWidth(ContributorRow)))
          canEdit={false}
          canMoveDown={true}
          canMoveUp={true}
          className="ContributorRow"
          contributor={
            Object {
              "displayName": 2,
            }
          }
          enableSelect={false}
          hideDelete={false}
          hideReorder={false}
          index={1}
          key="ContributorRow_1"
          onDelete={[Function]}
          onEdit={[Function]}
          onMoveDown={[Function]}
          onMoveUp={[Function]}
          onSelect={[Function]}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
        <WithStyles(WithTheme(WithWidth(ContributorRow)))
          canEdit={false}
          canMoveDown={true}
          canMoveUp={true}
          className="ContributorRow"
          contributor={
            Object {
              "displayName": 3,
            }
          }
          enableSelect={false}
          hideDelete={false}
          hideReorder={false}
          index={2}
          key="ContributorRow_2"
          onDelete={[Function]}
          onEdit={[Function]}
          onMoveDown={[Function]}
          onMoveUp={[Function]}
          onSelect={[Function]}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
        <WithStyles(WithTheme(WithWidth(ContributorRow)))
          canEdit={false}
          canMoveDown={false}
          canMoveUp={true}
          className="ContributorRow"
          contributor={
            Object {
              "displayName": 4,
            }
          }
          enableSelect={false}
          hideDelete={false}
          hideReorder={false}
          index={3}
          key="ContributorRow_3"
          onDelete={[Function]}
          onEdit={[Function]}
          onMoveDown={[Function]}
          onMoveUp={[Function]}
          onSelect={[Function]}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
      </WithStyles(List)>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</div>
`;

exports[`ContributorsEditor renders component in edit mode 1`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    
  </WithStyles(Grid)>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(List)
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <WithStyles(ContributorRowHeader)
          hideDelete={false}
          isInfinite={false}
          isNtro={false}
          onDeleteAll={[Function]}
          showContributorAssignment={false}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
      </WithStyles(List)>
      <WithStyles(List)
        classes={
          Object {
            "root": "ContributorList list ",
          }
        }
      >
        <WithStyles(WithTheme(WithWidth(ContributorRow)))
          canEdit={true}
          canMoveDown={false}
          canMoveUp={false}
          className="ContributorRow"
          contributor={
            Object {
              "selected": true,
            }
          }
          enableSelect={false}
          hideDelete={false}
          hideReorder={false}
          index={0}
          onDelete={[Function]}
          onEdit={[Function]}
          onMoveDown={[Function]}
          onMoveUp={[Function]}
          onSelect={null}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
      </WithStyles(List)>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</div>
`;

exports[`ContributorsEditor renders full component for admin user 1`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Immutable.Map {},
          },
          Object {
            "type": "return",
            "value": Immutable.Map {},
          },
        ],
      },
      "subscribe": [MockFunction] {
        "calls": Array [
          Array [
            [Function],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <MuiThemeProviderOld
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "graphs": Object {
              "color1": "#d72865",
              "color2": "#1e7d94",
              "color3": "#49075E",
              "color4": "#468fcc",
              "color5": "#f28620",
              "color6": "#333333",
              "color7": "#595959",
            },
            "hexToRGBA": [Function],
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {
              "MUIDataTable": Object {
                "paper": Object {
                  "boxShadow": "none",
                  "margin": 0,
                  "padding": 0,
                },
              },
              "MuiFormLabel": Object {
                "root": Object {
                  "overflow": "hidden",
                  "textOverflow": "ellipsis",
                  "whiteSpace": "nowrap",
                  "width": "100%",
                },
              },
              "MuiMenuItem": Object {
                "root": Object {
                  "&$selected": Object {
                    "backgroundColor": "#4085C6 !important",
                    "color": "#FFFFFF",
                  },
                },
              },
            },
            "palette": Object {
              "accent": Object {
                "dark": "#2a557d",
                "light": "#54acff",
                "main": "#316799",
              },
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#790000",
                "light": "#ff0000",
                "main": "#c80000",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#3b1a59",
                "gradient": Object {
                  "diagonal": Object {
                    "background": "linear-gradient(135deg, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                  "horizontal": Object {
                    "background": "linear-gradient(to right, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                },
                "light": "#962A8B",
                "main": "#51247A",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#333333",
                "light": "#f2f2f2",
                "main": "#595959",
              },
              "success": Object {
                "dark": "#005000",
                "light": "#00a700",
                "main": "#007200",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
              "warning": Object {
                "dark": "#542400",
                "light": "#ff9a57",
                "main": "#bf5000",
              },
              "white": Object {
                "main": "#FFFFFF",
              },
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "status": Object {
              "danger": "#f44336",
              "warning": "#ff9800",
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body1Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "body2Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "buttonNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "captionNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 300,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 300,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 200,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 200,
              "fontWeightMedium": 400,
              "fontWeightRegular": 300,
              "h1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 200,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1,
              },
              "h2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 200,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1,
              },
              "h3": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.04,
              },
              "h4": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.17,
              },
              "h5": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.33,
              },
              "h6": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 400,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "lineHeight": "1.35417em",
              },
              "overline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "lineHeight": "1.5em",
              },
              "subtitle1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
              "suppressDeprecationWarnings": true,
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.3125rem",
                "fontWeight": 400,
                "lineHeight": "1.16667em",
              },
              "useNextVariants": true,
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
      >
        <MuiPickersUtilsProvider
          utils={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
        >
          <ContributorsEditor
            author={
              Object {
                "aut_id": 1,
              }
            }
            canEdit={true}
            classes={
              Object {
                "list": "list",
                "scroll": "scroll",
              }
            }
            editMode={false}
            hideDelete={false}
            hideReorder={false}
            isNtro={false}
            locale={
              Object {
                "errorMessage": "Unable to add an item with the same identifier.",
                "errorTitle": "Error",
              }
            }
            showContributorAssignment={false}
            showIdentifierLookup={false}
            showRoleInput={false}
          >
            <div>
              <WithStyles(Grid)
                container={true}
                spacing={8}
              >
                <Grid
                  alignContent="stretch"
                  alignItems="stretch"
                  classes={
                    Object {
                      "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                      "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                      "container": "MuiGrid-container-1",
                      "direction-xs-column": "MuiGrid-direction-xs-column-4",
                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                      "grid-lg-1": "MuiGrid-grid-lg-1-72",
                      "grid-lg-10": "MuiGrid-grid-lg-10-81",
                      "grid-lg-11": "MuiGrid-grid-lg-11-82",
                      "grid-lg-12": "MuiGrid-grid-lg-12-83",
                      "grid-lg-2": "MuiGrid-grid-lg-2-73",
                      "grid-lg-3": "MuiGrid-grid-lg-3-74",
                      "grid-lg-4": "MuiGrid-grid-lg-4-75",
                      "grid-lg-5": "MuiGrid-grid-lg-5-76",
                      "grid-lg-6": "MuiGrid-grid-lg-6-77",
                      "grid-lg-7": "MuiGrid-grid-lg-7-78",
                      "grid-lg-8": "MuiGrid-grid-lg-8-79",
                      "grid-lg-9": "MuiGrid-grid-lg-9-80",
                      "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                      "grid-lg-true": "MuiGrid-grid-lg-true-71",
                      "grid-md-1": "MuiGrid-grid-md-1-58",
                      "grid-md-10": "MuiGrid-grid-md-10-67",
                      "grid-md-11": "MuiGrid-grid-md-11-68",
                      "grid-md-12": "MuiGrid-grid-md-12-69",
                      "grid-md-2": "MuiGrid-grid-md-2-59",
                      "grid-md-3": "MuiGrid-grid-md-3-60",
                      "grid-md-4": "MuiGrid-grid-md-4-61",
                      "grid-md-5": "MuiGrid-grid-md-5-62",
                      "grid-md-6": "MuiGrid-grid-md-6-63",
                      "grid-md-7": "MuiGrid-grid-md-7-64",
                      "grid-md-8": "MuiGrid-grid-md-8-65",
                      "grid-md-9": "MuiGrid-grid-md-9-66",
                      "grid-md-auto": "MuiGrid-grid-md-auto-56",
                      "grid-md-true": "MuiGrid-grid-md-true-57",
                      "grid-sm-1": "MuiGrid-grid-sm-1-44",
                      "grid-sm-10": "MuiGrid-grid-sm-10-53",
                      "grid-sm-11": "MuiGrid-grid-sm-11-54",
                      "grid-sm-12": "MuiGrid-grid-sm-12-55",
                      "grid-sm-2": "MuiGrid-grid-sm-2-45",
                      "grid-sm-3": "MuiGrid-grid-sm-3-46",
                      "grid-sm-4": "MuiGrid-grid-sm-4-47",
                      "grid-sm-5": "MuiGrid-grid-sm-5-48",
                      "grid-sm-6": "MuiGrid-grid-sm-6-49",
                      "grid-sm-7": "MuiGrid-grid-sm-7-50",
                      "grid-sm-8": "MuiGrid-grid-sm-8-51",
                      "grid-sm-9": "MuiGrid-grid-sm-9-52",
                      "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                      "grid-sm-true": "MuiGrid-grid-sm-true-43",
                      "grid-xl-1": "MuiGrid-grid-xl-1-86",
                      "grid-xl-10": "MuiGrid-grid-xl-10-95",
                      "grid-xl-11": "MuiGrid-grid-xl-11-96",
                      "grid-xl-12": "MuiGrid-grid-xl-12-97",
                      "grid-xl-2": "MuiGrid-grid-xl-2-87",
                      "grid-xl-3": "MuiGrid-grid-xl-3-88",
                      "grid-xl-4": "MuiGrid-grid-xl-4-89",
                      "grid-xl-5": "MuiGrid-grid-xl-5-90",
                      "grid-xl-6": "MuiGrid-grid-xl-6-91",
                      "grid-xl-7": "MuiGrid-grid-xl-7-92",
                      "grid-xl-8": "MuiGrid-grid-xl-8-93",
                      "grid-xl-9": "MuiGrid-grid-xl-9-94",
                      "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                      "grid-xl-true": "MuiGrid-grid-xl-true-85",
                      "grid-xs-1": "MuiGrid-grid-xs-1-30",
                      "grid-xs-10": "MuiGrid-grid-xs-10-39",
                      "grid-xs-11": "MuiGrid-grid-xs-11-40",
                      "grid-xs-12": "MuiGrid-grid-xs-12-41",
                      "grid-xs-2": "MuiGrid-grid-xs-2-31",
                      "grid-xs-3": "MuiGrid-grid-xs-3-32",
                      "grid-xs-4": "MuiGrid-grid-xs-4-33",
                      "grid-xs-5": "MuiGrid-grid-xs-5-34",
                      "grid-xs-6": "MuiGrid-grid-xs-6-35",
                      "grid-xs-7": "MuiGrid-grid-xs-7-36",
                      "grid-xs-8": "MuiGrid-grid-xs-8-37",
                      "grid-xs-9": "MuiGrid-grid-xs-9-38",
                      "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                      "grid-xs-true": "MuiGrid-grid-xs-true-29",
                      "item": "MuiGrid-item-2",
                      "justify-xs-center": "MuiGrid-justify-xs-center-18",
                      "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                      "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                      "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                      "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                      "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                      "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                      "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                      "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                      "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                      "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                    }
                  }
                  component="div"
                  container={true}
                  direction="row"
                  item={false}
                  justify="flex-start"
                  lg={false}
                  md={false}
                  sm={false}
                  spacing={8}
                  wrap="wrap"
                  xl={false}
                  xs={false}
                  zeroMinWidth={false}
                >
                  <div
                    className="MuiGrid-container-1 MuiGrid-spacing-xs-8-23"
                  >
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <Grid
                        alignContent="stretch"
                        alignItems="stretch"
                        classes={
                          Object {
                            "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                            "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                            "container": "MuiGrid-container-1",
                            "direction-xs-column": "MuiGrid-direction-xs-column-4",
                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                            "grid-lg-1": "MuiGrid-grid-lg-1-72",
                            "grid-lg-10": "MuiGrid-grid-lg-10-81",
                            "grid-lg-11": "MuiGrid-grid-lg-11-82",
                            "grid-lg-12": "MuiGrid-grid-lg-12-83",
                            "grid-lg-2": "MuiGrid-grid-lg-2-73",
                            "grid-lg-3": "MuiGrid-grid-lg-3-74",
                            "grid-lg-4": "MuiGrid-grid-lg-4-75",
                            "grid-lg-5": "MuiGrid-grid-lg-5-76",
                            "grid-lg-6": "MuiGrid-grid-lg-6-77",
                            "grid-lg-7": "MuiGrid-grid-lg-7-78",
                            "grid-lg-8": "MuiGrid-grid-lg-8-79",
                            "grid-lg-9": "MuiGrid-grid-lg-9-80",
                            "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                            "grid-lg-true": "MuiGrid-grid-lg-true-71",
                            "grid-md-1": "MuiGrid-grid-md-1-58",
                            "grid-md-10": "MuiGrid-grid-md-10-67",
                            "grid-md-11": "MuiGrid-grid-md-11-68",
                            "grid-md-12": "MuiGrid-grid-md-12-69",
                            "grid-md-2": "MuiGrid-grid-md-2-59",
                            "grid-md-3": "MuiGrid-grid-md-3-60",
                            "grid-md-4": "MuiGrid-grid-md-4-61",
                            "grid-md-5": "MuiGrid-grid-md-5-62",
                            "grid-md-6": "MuiGrid-grid-md-6-63",
                            "grid-md-7": "MuiGrid-grid-md-7-64",
                            "grid-md-8": "MuiGrid-grid-md-8-65",
                            "grid-md-9": "MuiGrid-grid-md-9-66",
                            "grid-md-auto": "MuiGrid-grid-md-auto-56",
                            "grid-md-true": "MuiGrid-grid-md-true-57",
                            "grid-sm-1": "MuiGrid-grid-sm-1-44",
                            "grid-sm-10": "MuiGrid-grid-sm-10-53",
                            "grid-sm-11": "MuiGrid-grid-sm-11-54",
                            "grid-sm-12": "MuiGrid-grid-sm-12-55",
                            "grid-sm-2": "MuiGrid-grid-sm-2-45",
                            "grid-sm-3": "MuiGrid-grid-sm-3-46",
                            "grid-sm-4": "MuiGrid-grid-sm-4-47",
                            "grid-sm-5": "MuiGrid-grid-sm-5-48",
                            "grid-sm-6": "MuiGrid-grid-sm-6-49",
                            "grid-sm-7": "MuiGrid-grid-sm-7-50",
                            "grid-sm-8": "MuiGrid-grid-sm-8-51",
                            "grid-sm-9": "MuiGrid-grid-sm-9-52",
                            "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                            "grid-sm-true": "MuiGrid-grid-sm-true-43",
                            "grid-xl-1": "MuiGrid-grid-xl-1-86",
                            "grid-xl-10": "MuiGrid-grid-xl-10-95",
                            "grid-xl-11": "MuiGrid-grid-xl-11-96",
                            "grid-xl-12": "MuiGrid-grid-xl-12-97",
                            "grid-xl-2": "MuiGrid-grid-xl-2-87",
                            "grid-xl-3": "MuiGrid-grid-xl-3-88",
                            "grid-xl-4": "MuiGrid-grid-xl-4-89",
                            "grid-xl-5": "MuiGrid-grid-xl-5-90",
                            "grid-xl-6": "MuiGrid-grid-xl-6-91",
                            "grid-xl-7": "MuiGrid-grid-xl-7-92",
                            "grid-xl-8": "MuiGrid-grid-xl-8-93",
                            "grid-xl-9": "MuiGrid-grid-xl-9-94",
                            "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                            "grid-xl-true": "MuiGrid-grid-xl-true-85",
                            "grid-xs-1": "MuiGrid-grid-xs-1-30",
                            "grid-xs-10": "MuiGrid-grid-xs-10-39",
                            "grid-xs-11": "MuiGrid-grid-xs-11-40",
                            "grid-xs-12": "MuiGrid-grid-xs-12-41",
                            "grid-xs-2": "MuiGrid-grid-xs-2-31",
                            "grid-xs-3": "MuiGrid-grid-xs-3-32",
                            "grid-xs-4": "MuiGrid-grid-xs-4-33",
                            "grid-xs-5": "MuiGrid-grid-xs-5-34",
                            "grid-xs-6": "MuiGrid-grid-xs-6-35",
                            "grid-xs-7": "MuiGrid-grid-xs-7-36",
                            "grid-xs-8": "MuiGrid-grid-xs-8-37",
                            "grid-xs-9": "MuiGrid-grid-xs-9-38",
                            "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                            "grid-xs-true": "MuiGrid-grid-xs-true-29",
                            "item": "MuiGrid-item-2",
                            "justify-xs-center": "MuiGrid-justify-xs-center-18",
                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                            "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                            "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                            "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                            "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                            "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                            "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                          }
                        }
                        component="div"
                        container={false}
                        direction="row"
                        item={true}
                        justify="flex-start"
                        lg={false}
                        md={false}
                        sm={false}
                        spacing={0}
                        wrap="wrap"
                        xl={false}
                        xs={12}
                        zeroMinWidth={false}
                      >
                        <div
                          className="MuiGrid-item-2 MuiGrid-grid-xs-12-41"
                        >
                          <ContributorForm
                            author={
                              Object {
                                "aut_id": 1,
                              }
                            }
                            canEdit={true}
                            classes={
                              Object {
                                "list": "list",
                                "scroll": "scroll",
                              }
                            }
                            contributor={Object {}}
                            disableNameAsPublished={false}
                            displayCancel={true}
                            editMode={false}
                            enableUqIdentifierOnAffiliationChange={true}
                            hideDelete={false}
                            hideReorder={false}
                            isContributorAssigned={false}
                            isNtro={false}
                            key="null"
                            locale={
                              Object {
                                "addButton": "Add author",
                                "creatorRoleHint": "Role of the creator in relation to the dataset",
                                "creatorRoleLabel": "Creator role",
                                "descriptionStep1": <div>
                                  <span
                                    className="authorSteps"
                                  >
                                    Step 1 of 2
                                  </span>
                                  - Please 
                                  <b>
                                    add to a list of contributors below
                                  </b>
                                  , in the format and order that they are published.
                                </div>,
                                "descriptionStep1NoStep2": <div>
                                  Please 
                                  <b>
                                    add to a list of contributors below
                                  </b>
                                  , in the format and order that they are published.
                                </div>,
                                "identifierLabel": "UQ identifier (if available)",
                                "nameAsPublishedHint": "Please type the name exactly as published",
                                "nameAsPublishedLabel": "Name as published",
                              }
                            }
                            onSubmit={[Function]}
                            required={false}
                            showContributorAssignment={false}
                            showIdentifierLookup={false}
                            showRoleInput={false}
                          >
                            <div>
                              Please 
                              <b>
                                add to a list of contributors below
                              </b>
                              , in the format and order that they are published.
                            </div>
                            <WithStyles(Grid)
                              container={true}
                              spacing={8}
                              style={
                                Object {
                                  "marginTop": 8,
                                }
                              }
                            >
                              <Grid
                                alignContent="stretch"
                                alignItems="stretch"
                                classes={
                                  Object {
                                    "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                                    "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                                    "container": "MuiGrid-container-1",
                                    "direction-xs-column": "MuiGrid-direction-xs-column-4",
                                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                                    "grid-lg-1": "MuiGrid-grid-lg-1-72",
                                    "grid-lg-10": "MuiGrid-grid-lg-10-81",
                                    "grid-lg-11": "MuiGrid-grid-lg-11-82",
                                    "grid-lg-12": "MuiGrid-grid-lg-12-83",
                                    "grid-lg-2": "MuiGrid-grid-lg-2-73",
                                    "grid-lg-3": "MuiGrid-grid-lg-3-74",
                                    "grid-lg-4": "MuiGrid-grid-lg-4-75",
                                    "grid-lg-5": "MuiGrid-grid-lg-5-76",
                                    "grid-lg-6": "MuiGrid-grid-lg-6-77",
                                    "grid-lg-7": "MuiGrid-grid-lg-7-78",
                                    "grid-lg-8": "MuiGrid-grid-lg-8-79",
                                    "grid-lg-9": "MuiGrid-grid-lg-9-80",
                                    "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                                    "grid-lg-true": "MuiGrid-grid-lg-true-71",
                                    "grid-md-1": "MuiGrid-grid-md-1-58",
                                    "grid-md-10": "MuiGrid-grid-md-10-67",
                                    "grid-md-11": "MuiGrid-grid-md-11-68",
                                    "grid-md-12": "MuiGrid-grid-md-12-69",
                                    "grid-md-2": "MuiGrid-grid-md-2-59",
                                    "grid-md-3": "MuiGrid-grid-md-3-60",
                                    "grid-md-4": "MuiGrid-grid-md-4-61",
                                    "grid-md-5": "MuiGrid-grid-md-5-62",
                                    "grid-md-6": "MuiGrid-grid-md-6-63",
                                    "grid-md-7": "MuiGrid-grid-md-7-64",
                                    "grid-md-8": "MuiGrid-grid-md-8-65",
                                    "grid-md-9": "MuiGrid-grid-md-9-66",
                                    "grid-md-auto": "MuiGrid-grid-md-auto-56",
                                    "grid-md-true": "MuiGrid-grid-md-true-57",
                                    "grid-sm-1": "MuiGrid-grid-sm-1-44",
                                    "grid-sm-10": "MuiGrid-grid-sm-10-53",
                                    "grid-sm-11": "MuiGrid-grid-sm-11-54",
                                    "grid-sm-12": "MuiGrid-grid-sm-12-55",
                                    "grid-sm-2": "MuiGrid-grid-sm-2-45",
                                    "grid-sm-3": "MuiGrid-grid-sm-3-46",
                                    "grid-sm-4": "MuiGrid-grid-sm-4-47",
                                    "grid-sm-5": "MuiGrid-grid-sm-5-48",
                                    "grid-sm-6": "MuiGrid-grid-sm-6-49",
                                    "grid-sm-7": "MuiGrid-grid-sm-7-50",
                                    "grid-sm-8": "MuiGrid-grid-sm-8-51",
                                    "grid-sm-9": "MuiGrid-grid-sm-9-52",
                                    "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                                    "grid-sm-true": "MuiGrid-grid-sm-true-43",
                                    "grid-xl-1": "MuiGrid-grid-xl-1-86",
                                    "grid-xl-10": "MuiGrid-grid-xl-10-95",
                                    "grid-xl-11": "MuiGrid-grid-xl-11-96",
                                    "grid-xl-12": "MuiGrid-grid-xl-12-97",
                                    "grid-xl-2": "MuiGrid-grid-xl-2-87",
                                    "grid-xl-3": "MuiGrid-grid-xl-3-88",
                                    "grid-xl-4": "MuiGrid-grid-xl-4-89",
                                    "grid-xl-5": "MuiGrid-grid-xl-5-90",
                                    "grid-xl-6": "MuiGrid-grid-xl-6-91",
                                    "grid-xl-7": "MuiGrid-grid-xl-7-92",
                                    "grid-xl-8": "MuiGrid-grid-xl-8-93",
                                    "grid-xl-9": "MuiGrid-grid-xl-9-94",
                                    "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                                    "grid-xl-true": "MuiGrid-grid-xl-true-85",
                                    "grid-xs-1": "MuiGrid-grid-xs-1-30",
                                    "grid-xs-10": "MuiGrid-grid-xs-10-39",
                                    "grid-xs-11": "MuiGrid-grid-xs-11-40",
                                    "grid-xs-12": "MuiGrid-grid-xs-12-41",
                                    "grid-xs-2": "MuiGrid-grid-xs-2-31",
                                    "grid-xs-3": "MuiGrid-grid-xs-3-32",
                                    "grid-xs-4": "MuiGrid-grid-xs-4-33",
                                    "grid-xs-5": "MuiGrid-grid-xs-5-34",
                                    "grid-xs-6": "MuiGrid-grid-xs-6-35",
                                    "grid-xs-7": "MuiGrid-grid-xs-7-36",
                                    "grid-xs-8": "MuiGrid-grid-xs-8-37",
                                    "grid-xs-9": "MuiGrid-grid-xs-9-38",
                                    "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                                    "grid-xs-true": "MuiGrid-grid-xs-true-29",
                                    "item": "MuiGrid-item-2",
                                    "justify-xs-center": "MuiGrid-justify-xs-center-18",
                                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                                    "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                                    "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                                    "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                                    "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                                    "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                                    "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                                  }
                                }
                                component="div"
                                container={true}
                                direction="row"
                                item={false}
                                justify="flex-start"
                                lg={false}
                                md={false}
                                sm={false}
                                spacing={8}
                                style={
                                  Object {
                                    "marginTop": 8,
                                  }
                                }
                                wrap="wrap"
                                xl={false}
                                xs={false}
                                zeroMinWidth={false}
                              >
                                <div
                                  className="MuiGrid-container-1 MuiGrid-spacing-xs-8-23"
                                  style={
                                    Object {
                                      "marginTop": 8,
                                    }
                                  }
                                >
                                  <WithStyles(Grid)
                                    item={true}
                                    sm={2}
                                    xs={12}
                                  >
                                    <Grid
                                      alignContent="stretch"
                                      alignItems="stretch"
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                                          "container": "MuiGrid-container-1",
                                          "direction-xs-column": "MuiGrid-direction-xs-column-4",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                                          "grid-lg-1": "MuiGrid-grid-lg-1-72",
                                          "grid-lg-10": "MuiGrid-grid-lg-10-81",
                                          "grid-lg-11": "MuiGrid-grid-lg-11-82",
                                          "grid-lg-12": "MuiGrid-grid-lg-12-83",
                                          "grid-lg-2": "MuiGrid-grid-lg-2-73",
                                          "grid-lg-3": "MuiGrid-grid-lg-3-74",
                                          "grid-lg-4": "MuiGrid-grid-lg-4-75",
                                          "grid-lg-5": "MuiGrid-grid-lg-5-76",
                                          "grid-lg-6": "MuiGrid-grid-lg-6-77",
                                          "grid-lg-7": "MuiGrid-grid-lg-7-78",
                                          "grid-lg-8": "MuiGrid-grid-lg-8-79",
                                          "grid-lg-9": "MuiGrid-grid-lg-9-80",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                                          "grid-lg-true": "MuiGrid-grid-lg-true-71",
                                          "grid-md-1": "MuiGrid-grid-md-1-58",
                                          "grid-md-10": "MuiGrid-grid-md-10-67",
                                          "grid-md-11": "MuiGrid-grid-md-11-68",
                                          "grid-md-12": "MuiGrid-grid-md-12-69",
                                          "grid-md-2": "MuiGrid-grid-md-2-59",
                                          "grid-md-3": "MuiGrid-grid-md-3-60",
                                          "grid-md-4": "MuiGrid-grid-md-4-61",
                                          "grid-md-5": "MuiGrid-grid-md-5-62",
                                          "grid-md-6": "MuiGrid-grid-md-6-63",
                                          "grid-md-7": "MuiGrid-grid-md-7-64",
                                          "grid-md-8": "MuiGrid-grid-md-8-65",
                                          "grid-md-9": "MuiGrid-grid-md-9-66",
                                          "grid-md-auto": "MuiGrid-grid-md-auto-56",
                                          "grid-md-true": "MuiGrid-grid-md-true-57",
                                          "grid-sm-1": "MuiGrid-grid-sm-1-44",
                                          "grid-sm-10": "MuiGrid-grid-sm-10-53",
                                          "grid-sm-11": "MuiGrid-grid-sm-11-54",
                                          "grid-sm-12": "MuiGrid-grid-sm-12-55",
                                          "grid-sm-2": "MuiGrid-grid-sm-2-45",
                                          "grid-sm-3": "MuiGrid-grid-sm-3-46",
                                          "grid-sm-4": "MuiGrid-grid-sm-4-47",
                                          "grid-sm-5": "MuiGrid-grid-sm-5-48",
                                          "grid-sm-6": "MuiGrid-grid-sm-6-49",
                                          "grid-sm-7": "MuiGrid-grid-sm-7-50",
                                          "grid-sm-8": "MuiGrid-grid-sm-8-51",
                                          "grid-sm-9": "MuiGrid-grid-sm-9-52",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                                          "grid-sm-true": "MuiGrid-grid-sm-true-43",
                                          "grid-xl-1": "MuiGrid-grid-xl-1-86",
                                          "grid-xl-10": "MuiGrid-grid-xl-10-95",
                                          "grid-xl-11": "MuiGrid-grid-xl-11-96",
                                          "grid-xl-12": "MuiGrid-grid-xl-12-97",
                                          "grid-xl-2": "MuiGrid-grid-xl-2-87",
                                          "grid-xl-3": "MuiGrid-grid-xl-3-88",
                                          "grid-xl-4": "MuiGrid-grid-xl-4-89",
                                          "grid-xl-5": "MuiGrid-grid-xl-5-90",
                                          "grid-xl-6": "MuiGrid-grid-xl-6-91",
                                          "grid-xl-7": "MuiGrid-grid-xl-7-92",
                                          "grid-xl-8": "MuiGrid-grid-xl-8-93",
                                          "grid-xl-9": "MuiGrid-grid-xl-9-94",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                                          "grid-xl-true": "MuiGrid-grid-xl-true-85",
                                          "grid-xs-1": "MuiGrid-grid-xs-1-30",
                                          "grid-xs-10": "MuiGrid-grid-xs-10-39",
                                          "grid-xs-11": "MuiGrid-grid-xs-11-40",
                                          "grid-xs-12": "MuiGrid-grid-xs-12-41",
                                          "grid-xs-2": "MuiGrid-grid-xs-2-31",
                                          "grid-xs-3": "MuiGrid-grid-xs-3-32",
                                          "grid-xs-4": "MuiGrid-grid-xs-4-33",
                                          "grid-xs-5": "MuiGrid-grid-xs-5-34",
                                          "grid-xs-6": "MuiGrid-grid-xs-6-35",
                                          "grid-xs-7": "MuiGrid-grid-xs-7-36",
                                          "grid-xs-8": "MuiGrid-grid-xs-8-37",
                                          "grid-xs-9": "MuiGrid-grid-xs-9-38",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                                          "grid-xs-true": "MuiGrid-grid-xs-true-29",
                                          "item": "MuiGrid-item-2",
                                          "justify-xs-center": "MuiGrid-justify-xs-center-18",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                                          "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                                          "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                                          "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                                          "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                                        }
                                      }
                                      component="div"
                                      container={false}
                                      direction="row"
                                      item={true}
                                      justify="flex-start"
                                      lg={false}
                                      md={false}
                                      sm={2}
                                      spacing={0}
                                      wrap="wrap"
                                      xl={false}
                                      xs={12}
                                      zeroMinWidth={false}
                                    >
                                      <div
                                        className="MuiGrid-item-2 MuiGrid-grid-xs-12-41 MuiGrid-grid-sm-2-45"
                                      >
                                        <OrgAffilicationTypeSelector
                                          affiliation=""
                                          error={false}
                                          locale={
                                            Object {
                                              "inputLabel": "Org affiliation",
                                              "options": Array [
                                                Object {
                                                  "key": "UQ",
                                                  "value": "UQ",
                                                },
                                                Object {
                                                  "key": "NotUQ",
                                                  "value": "Not UQ",
                                                },
                                              ],
                                              "placeholder": "Organisational affiliation at time of publication",
                                            }
                                          }
                                          onAffiliationChange={[Function]}
                                        >
                                          <WithStyles(FormControl)
                                            fullWidth={true}
                                          >
                                            <FormControl
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth-101",
                                                  "marginDense": "MuiFormControl-marginDense-100",
                                                  "marginNormal": "MuiFormControl-marginNormal-99",
                                                  "root": "MuiFormControl-root-98",
                                                }
                                              }
                                              component="div"
                                              disabled={false}
                                              error={false}
                                              fullWidth={true}
                                              margin="none"
                                              required={false}
                                              variant="standard"
                                            >
                                              <div
                                                className="MuiFormControl-root-98 MuiFormControl-fullWidth-101"
                                              >
                                                <WithStyles(WithFormControlContext(InputLabel))>
                                                  <WithFormControlContext(InputLabel)
                                                    classes={
                                                      Object {
                                                        "animated": "MuiInputLabel-animated-110",
                                                        "disabled": "MuiInputLabel-disabled-104",
                                                        "error": "MuiInputLabel-error-105",
                                                        "filled": "MuiInputLabel-filled-111",
                                                        "focused": "MuiInputLabel-focused-103",
                                                        "formControl": "MuiInputLabel-formControl-107",
                                                        "marginDense": "MuiInputLabel-marginDense-108",
                                                        "outlined": "MuiInputLabel-outlined-112",
                                                        "required": "MuiInputLabel-required-106",
                                                        "root": "MuiInputLabel-root-102",
                                                        "shrink": "MuiInputLabel-shrink-109",
                                                      }
                                                    }
                                                  >
                                                    <InputLabel
                                                      classes={
                                                        Object {
                                                          "animated": "MuiInputLabel-animated-110",
                                                          "disabled": "MuiInputLabel-disabled-104",
                                                          "error": "MuiInputLabel-error-105",
                                                          "filled": "MuiInputLabel-filled-111",
                                                          "focused": "MuiInputLabel-focused-103",
                                                          "formControl": "MuiInputLabel-formControl-107",
                                                          "marginDense": "MuiInputLabel-marginDense-108",
                                                          "outlined": "MuiInputLabel-outlined-112",
                                                          "required": "MuiInputLabel-required-106",
                                                          "root": "MuiInputLabel-root-102",
                                                          "shrink": "MuiInputLabel-shrink-109",
                                                        }
                                                      }
                                                      disableAnimation={false}
                                                      muiFormControl={
                                                        Object {
                                                          "adornedStart": false,
                                                          "disabled": false,
                                                          "error": false,
                                                          "filled": false,
                                                          "focused": false,
                                                          "margin": "none",
                                                          "onBlur": [Function],
                                                          "onEmpty": [Function],
                                                          "onFilled": [Function],
                                                          "onFocus": [Function],
                                                          "required": false,
                                                          "variant": "standard",
                                                        }
                                                      }
                                                    >
                                                      <WithStyles(WithFormControlContext(FormLabel))
                                                        className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                        classes={
                                                          Object {
                                                            "disabled": "MuiInputLabel-disabled-104",
                                                            "error": "MuiInputLabel-error-105",
                                                            "focused": "MuiInputLabel-focused-103",
                                                            "required": "MuiInputLabel-required-106",
                                                          }
                                                        }
                                                        data-shrink={false}
                                                      >
                                                        <WithFormControlContext(FormLabel)
                                                          className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                          classes={
                                                            Object {
                                                              "asterisk": "MuiFormLabel-asterisk-119",
                                                              "disabled": "MuiFormLabel-disabled-115 MuiInputLabel-disabled-104",
                                                              "error": "MuiFormLabel-error-116 MuiInputLabel-error-105",
                                                              "filled": "MuiFormLabel-filled-117",
                                                              "focused": "MuiFormLabel-focused-114 MuiInputLabel-focused-103",
                                                              "required": "MuiFormLabel-required-118 MuiInputLabel-required-106",
                                                              "root": "MuiFormLabel-root-113",
                                                            }
                                                          }
                                                          data-shrink={false}
                                                        >
                                                          <FormLabel
                                                            className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                            classes={
                                                              Object {
                                                                "asterisk": "MuiFormLabel-asterisk-119",
                                                                "disabled": "MuiFormLabel-disabled-115 MuiInputLabel-disabled-104",
                                                                "error": "MuiFormLabel-error-116 MuiInputLabel-error-105",
                                                                "filled": "MuiFormLabel-filled-117",
                                                                "focused": "MuiFormLabel-focused-114 MuiInputLabel-focused-103",
                                                                "required": "MuiFormLabel-required-118 MuiInputLabel-required-106",
                                                                "root": "MuiFormLabel-root-113",
                                                              }
                                                            }
                                                            component="label"
                                                            data-shrink={false}
                                                            muiFormControl={
                                                              Object {
                                                                "adornedStart": false,
                                                                "disabled": false,
                                                                "error": false,
                                                                "filled": false,
                                                                "focused": false,
                                                                "margin": "none",
                                                                "onBlur": [Function],
                                                                "onEmpty": [Function],
                                                                "onFilled": [Function],
                                                                "onFocus": [Function],
                                                                "required": false,
                                                                "variant": "standard",
                                                              }
                                                            }
                                                          >
                                                            <label
                                                              className="MuiFormLabel-root-113 MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                              data-shrink={false}
                                                            >
                                                              Org affiliation
                                                            </label>
                                                          </FormLabel>
                                                        </WithFormControlContext(FormLabel)>
                                                      </WithStyles(WithFormControlContext(FormLabel))>
                                                    </InputLabel>
                                                  </WithFormControlContext(InputLabel)>
                                                </WithStyles(WithFormControlContext(InputLabel))>
                                                <WithStyles(WithFormControlContext(Select))
                                                  SelectDisplayProps={
                                                    Object {
                                                      "id": "org-affiliation-selector",
                                                    }
                                                  }
                                                  error={false}
                                                  onChange={[Function]}
                                                  required={true}
                                                  value=""
                                                >
                                                  <WithFormControlContext(Select)
                                                    SelectDisplayProps={
                                                      Object {
                                                        "id": "org-affiliation-selector",
                                                      }
                                                    }
                                                    classes={
                                                      Object {
                                                        "disabled": "MuiSelect-disabled-125",
                                                        "filled": "MuiSelect-filled-122",
                                                        "icon": "MuiSelect-icon-126",
                                                        "outlined": "MuiSelect-outlined-123",
                                                        "root": "MuiSelect-root-120",
                                                        "select": "MuiSelect-select-121",
                                                        "selectMenu": "MuiSelect-selectMenu-124",
                                                      }
                                                    }
                                                    error={false}
                                                    onChange={[Function]}
                                                    required={true}
                                                    value=""
                                                  >
                                                    <Select
                                                      IconComponent={[Function]}
                                                      SelectDisplayProps={
                                                        Object {
                                                          "id": "org-affiliation-selector",
                                                        }
                                                      }
                                                      autoWidth={false}
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiSelect-disabled-125",
                                                          "filled": "MuiSelect-filled-122",
                                                          "icon": "MuiSelect-icon-126",
                                                          "outlined": "MuiSelect-outlined-123",
                                                          "root": "MuiSelect-root-120",
                                                          "select": "MuiSelect-select-121",
                                                          "selectMenu": "MuiSelect-selectMenu-124",
                                                        }
                                                      }
                                                      displayEmpty={false}
                                                      error={false}
                                                      input={<WithStyles(Input) />}
                                                      muiFormControl={
                                                        Object {
                                                          "adornedStart": false,
                                                          "disabled": false,
                                                          "error": false,
                                                          "filled": false,
                                                          "focused": false,
                                                          "margin": "none",
                                                          "onBlur": [Function],
                                                          "onEmpty": [Function],
                                                          "onFilled": [Function],
                                                          "onFocus": [Function],
                                                          "required": false,
                                                          "variant": "standard",
                                                        }
                                                      }
                                                      multiple={false}
                                                      native={false}
                                                      onChange={[Function]}
                                                      required={true}
                                                      value=""
                                                    >
                                                      <WithStyles(Input)
                                                        error={false}
                                                        inputComponent={[Function]}
                                                        inputProps={
                                                          Object {
                                                            "IconComponent": [Function],
                                                            "MenuProps": undefined,
                                                            "SelectDisplayProps": Object {
                                                              "id": "org-affiliation-selector",
                                                            },
                                                            "autoWidth": false,
                                                            "children": Array [
                                                              <WithStyles(MenuItem)
                                                                disabled={true}
                                                                value=""
                                                              >
                                                                Organisational affiliation at time of publication
                                                              </WithStyles(MenuItem)>,
                                                              Array [
                                                                <WithStyles(MenuItem)
                                                                  value="UQ"
                                                                >
                                                                  UQ
                                                                </WithStyles(MenuItem)>,
                                                                <WithStyles(MenuItem)
                                                                  value="NotUQ"
                                                                >
                                                                  Not UQ
                                                                </WithStyles(MenuItem)>,
                                                              ],
                                                            ],
                                                            "classes": Object {
                                                              "disabled": "MuiSelect-disabled-125",
                                                              "filled": "MuiSelect-filled-122",
                                                              "icon": "MuiSelect-icon-126",
                                                              "outlined": "MuiSelect-outlined-123",
                                                              "root": "MuiSelect-root-120",
                                                              "select": "MuiSelect-select-121",
                                                              "selectMenu": "MuiSelect-selectMenu-124",
                                                            },
                                                            "displayEmpty": false,
                                                            "multiple": false,
                                                            "onClose": undefined,
                                                            "onOpen": undefined,
                                                            "open": undefined,
                                                            "renderValue": undefined,
                                                            "type": undefined,
                                                            "variant": "standard",
                                                          }
                                                        }
                                                        onChange={[Function]}
                                                        required={true}
                                                        value=""
                                                      >
                                                        <Input
                                                          classes={
                                                            Object {
                                                              "disabled": "MuiInput-disabled-130",
                                                              "error": "MuiInput-error-132",
                                                              "focused": "MuiInput-focused-129",
                                                              "formControl": "MuiInput-formControl-128",
                                                              "fullWidth": "MuiInput-fullWidth-134",
                                                              "input": "MuiInput-input-135",
                                                              "inputMarginDense": "MuiInput-inputMarginDense-136",
                                                              "inputMultiline": "MuiInput-inputMultiline-137",
                                                              "inputType": "MuiInput-inputType-138",
                                                              "inputTypeSearch": "MuiInput-inputTypeSearch-139",
                                                              "multiline": "MuiInput-multiline-133",
                                                              "root": "MuiInput-root-127",
                                                              "underline": "MuiInput-underline-131",
                                                            }
                                                          }
                                                          error={false}
                                                          inputComponent={[Function]}
                                                          inputProps={
                                                            Object {
                                                              "IconComponent": [Function],
                                                              "MenuProps": undefined,
                                                              "SelectDisplayProps": Object {
                                                                "id": "org-affiliation-selector",
                                                              },
                                                              "autoWidth": false,
                                                              "children": Array [
                                                                <WithStyles(MenuItem)
                                                                  disabled={true}
                                                                  value=""
                                                                >
                                                                  Organisational affiliation at time of publication
                                                                </WithStyles(MenuItem)>,
                                                                Array [
                                                                  <WithStyles(MenuItem)
                                                                    value="UQ"
                                                                  >
                                                                    UQ
                                                                  </WithStyles(MenuItem)>,
                                                                  <WithStyles(MenuItem)
                                                                    value="NotUQ"
                                                                  >
                                                                    Not UQ
                                                                  </WithStyles(MenuItem)>,
                                                                ],
                                                              ],
                                                              "classes": Object {
                                                                "disabled": "MuiSelect-disabled-125",
                                                                "filled": "MuiSelect-filled-122",
                                                                "icon": "MuiSelect-icon-126",
                                                                "outlined": "MuiSelect-outlined-123",
                                                                "root": "MuiSelect-root-120",
                                                                "select": "MuiSelect-select-121",
                                                                "selectMenu": "MuiSelect-selectMenu-124",
                                                              },
                                                              "displayEmpty": false,
                                                              "multiple": false,
                                                              "onClose": undefined,
                                                              "onOpen": undefined,
                                                              "open": undefined,
                                                              "renderValue": undefined,
                                                              "type": undefined,
                                                              "variant": "standard",
                                                            }
                                                          }
                                                          onChange={[Function]}
                                                          required={true}
                                                          value=""
                                                        >
                                                          <WithStyles(WithFormControlContext(InputBase))
                                                            classes={
                                                              Object {
                                                                "disabled": "MuiInput-disabled-130",
                                                                "error": "MuiInput-error-132",
                                                                "focused": "MuiInput-focused-129",
                                                                "formControl": "MuiInput-formControl-128",
                                                                "fullWidth": "MuiInput-fullWidth-134",
                                                                "input": "MuiInput-input-135",
                                                                "inputMarginDense": "MuiInput-inputMarginDense-136",
                                                                "inputMultiline": "MuiInput-inputMultiline-137",
                                                                "inputType": "MuiInput-inputType-138",
                                                                "inputTypeSearch": "MuiInput-inputTypeSearch-139",
                                                                "multiline": "MuiInput-multiline-133",
                                                                "root": "MuiInput-root-127 MuiInput-underline-131",
                                                                "underline": null,
                                                              }
                                                            }
                                                            error={false}
                                                            fullWidth={false}
                                                            inputComponent={[Function]}
                                                            inputProps={
                                                              Object {
                                                                "IconComponent": [Function],
                                                                "MenuProps": undefined,
                                                                "SelectDisplayProps": Object {
                                                                  "id": "org-affiliation-selector",
                                                                },
                                                                "autoWidth": false,
                                                                "children": Array [
                                                                  <WithStyles(MenuItem)
                                                                    disabled={true}
                                                                    value=""
                                                                  >
                                                                    Organisational affiliation at time of publication
                                                                  </WithStyles(MenuItem)>,
                                                                  Array [
                                                                    <WithStyles(MenuItem)
                                                                      value="UQ"
                                                                    >
                                                                      UQ
                                                                    </WithStyles(MenuItem)>,
                                                                    <WithStyles(MenuItem)
                                                                      value="NotUQ"
                                                                    >
                                                                      Not UQ
                                                                    </WithStyles(MenuItem)>,
                                                                  ],
                                                                ],
                                                                "classes": Object {
                                                                  "disabled": "MuiSelect-disabled-125",
                                                                  "filled": "MuiSelect-filled-122",
                                                                  "icon": "MuiSelect-icon-126",
                                                                  "outlined": "MuiSelect-outlined-123",
                                                                  "root": "MuiSelect-root-120",
                                                                  "select": "MuiSelect-select-121",
                                                                  "selectMenu": "MuiSelect-selectMenu-124",
                                                                },
                                                                "displayEmpty": false,
                                                                "multiple": false,
                                                                "onClose": undefined,
                                                                "onOpen": undefined,
                                                                "open": undefined,
                                                                "renderValue": undefined,
                                                                "type": undefined,
                                                                "variant": "standard",
                                                              }
                                                            }
                                                            multiline={false}
                                                            onChange={[Function]}
                                                            required={true}
                                                            type="text"
                                                            value=""
                                                          >
                                                            <WithFormControlContext(InputBase)
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiInputBase-adornedEnd-145",
                                                                  "adornedStart": "MuiInputBase-adornedStart-144",
                                                                  "disabled": "MuiInputBase-disabled-143 MuiInput-disabled-130",
                                                                  "error": "MuiInputBase-error-146 MuiInput-error-132",
                                                                  "focused": "MuiInputBase-focused-142 MuiInput-focused-129",
                                                                  "formControl": "MuiInputBase-formControl-141 MuiInput-formControl-128",
                                                                  "fullWidth": "MuiInputBase-fullWidth-149 MuiInput-fullWidth-134",
                                                                  "input": "MuiInputBase-input-150 MuiInput-input-135",
                                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-156",
                                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart-155",
                                                                  "inputMarginDense": "MuiInputBase-inputMarginDense-151 MuiInput-inputMarginDense-136",
                                                                  "inputMultiline": "MuiInputBase-inputMultiline-152 MuiInput-inputMultiline-137",
                                                                  "inputType": "MuiInputBase-inputType-153 MuiInput-inputType-138",
                                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch-154 MuiInput-inputTypeSearch-139",
                                                                  "marginDense": "MuiInputBase-marginDense-147",
                                                                  "multiline": "MuiInputBase-multiline-148 MuiInput-multiline-133",
                                                                  "root": "MuiInputBase-root-140 MuiInput-root-127 MuiInput-underline-131",
                                                                }
                                                              }
                                                              error={false}
                                                              fullWidth={false}
                                                              inputComponent={[Function]}
                                                              inputProps={
                                                                Object {
                                                                  "IconComponent": [Function],
                                                                  "MenuProps": undefined,
                                                                  "SelectDisplayProps": Object {
                                                                    "id": "org-affiliation-selector",
                                                                  },
                                                                  "autoWidth": false,
                                                                  "children": Array [
                                                                    <WithStyles(MenuItem)
                                                                      disabled={true}
                                                                      value=""
                                                                    >
                                                                      Organisational affiliation at time of publication
                                                                    </WithStyles(MenuItem)>,
                                                                    Array [
                                                                      <WithStyles(MenuItem)
                                                                        value="UQ"
                                                                      >
                                                                        UQ
                                                                      </WithStyles(MenuItem)>,
                                                                      <WithStyles(MenuItem)
                                                                        value="NotUQ"
                                                                      >
                                                                        Not UQ
                                                                      </WithStyles(MenuItem)>,
                                                                    ],
                                                                  ],
                                                                  "classes": Object {
                                                                    "disabled": "MuiSelect-disabled-125",
                                                                    "filled": "MuiSelect-filled-122",
                                                                    "icon": "MuiSelect-icon-126",
                                                                    "outlined": "MuiSelect-outlined-123",
                                                                    "root": "MuiSelect-root-120",
                                                                    "select": "MuiSelect-select-121",
                                                                    "selectMenu": "MuiSelect-selectMenu-124",
                                                                  },
                                                                  "displayEmpty": false,
                                                                  "multiple": false,
                                                                  "onClose": undefined,
                                                                  "onOpen": undefined,
                                                                  "open": undefined,
                                                                  "renderValue": undefined,
                                                                  "type": undefined,
                                                                  "variant": "standard",
                                                                }
                                                              }
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              required={true}
                                                              type="text"
                                                              value=""
                                                            >
                                                              <InputBase
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiInputBase-adornedEnd-145",
                                                                    "adornedStart": "MuiInputBase-adornedStart-144",
                                                                    "disabled": "MuiInputBase-disabled-143 MuiInput-disabled-130",
                                                                    "error": "MuiInputBase-error-146 MuiInput-error-132",
                                                                    "focused": "MuiInputBase-focused-142 MuiInput-focused-129",
                                                                    "formControl": "MuiInputBase-formControl-141 MuiInput-formControl-128",
                                                                    "fullWidth": "MuiInputBase-fullWidth-149 MuiInput-fullWidth-134",
                                                                    "input": "MuiInputBase-input-150 MuiInput-input-135",
                                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-156",
                                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart-155",
                                                                    "inputMarginDense": "MuiInputBase-inputMarginDense-151 MuiInput-inputMarginDense-136",
                                                                    "inputMultiline": "MuiInputBase-inputMultiline-152 MuiInput-inputMultiline-137",
                                                                    "inputType": "MuiInputBase-inputType-153 MuiInput-inputType-138",
                                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch-154 MuiInput-inputTypeSearch-139",
                                                                    "marginDense": "MuiInputBase-marginDense-147",
                                                                    "multiline": "MuiInputBase-multiline-148 MuiInput-multiline-133",
                                                                    "root": "MuiInputBase-root-140 MuiInput-root-127 MuiInput-underline-131",
                                                                  }
                                                                }
                                                                error={false}
                                                                fullWidth={false}
                                                                inputComponent={[Function]}
                                                                inputProps={
                                                                  Object {
                                                                    "IconComponent": [Function],
                                                                    "MenuProps": undefined,
                                                                    "SelectDisplayProps": Object {
                                                                      "id": "org-affiliation-selector",
                                                                    },
                                                                    "autoWidth": false,
                                                                    "children": Array [
                                                                      <WithStyles(MenuItem)
                                                                        disabled={true}
                                                                        value=""
                                                                      >
                                                                        Organisational affiliation at time of publication
                                                                      </WithStyles(MenuItem)>,
                                                                      Array [
                                                                        <WithStyles(MenuItem)
                                                                          value="UQ"
                                                                        >
                                                                          UQ
                                                                        </WithStyles(MenuItem)>,
                                                                        <WithStyles(MenuItem)
                                                                          value="NotUQ"
                                                                        >
                                                                          Not UQ
                                                                        </WithStyles(MenuItem)>,
                                                                      ],
                                                                    ],
                                                                    "classes": Object {
                                                                      "disabled": "MuiSelect-disabled-125",
                                                                      "filled": "MuiSelect-filled-122",
                                                                      "icon": "MuiSelect-icon-126",
                                                                      "outlined": "MuiSelect-outlined-123",
                                                                      "root": "MuiSelect-root-120",
                                                                      "select": "MuiSelect-select-121",
                                                                      "selectMenu": "MuiSelect-selectMenu-124",
                                                                    },
                                                                    "displayEmpty": false,
                                                                    "multiple": false,
                                                                    "onClose": undefined,
                                                                    "onOpen": undefined,
                                                                    "open": undefined,
                                                                    "renderValue": undefined,
                                                                    "type": undefined,
                                                                    "variant": "standard",
                                                                  }
                                                                }
                                                                muiFormControl={
                                                                  Object {
                                                                    "adornedStart": false,
                                                                    "disabled": false,
                                                                    "error": false,
                                                                    "filled": false,
                                                                    "focused": false,
                                                                    "margin": "none",
                                                                    "onBlur": [Function],
                                                                    "onEmpty": [Function],
                                                                    "onFilled": [Function],
                                                                    "onFocus": [Function],
                                                                    "required": false,
                                                                    "variant": "standard",
                                                                  }
                                                                }
                                                                multiline={false}
                                                                onChange={[Function]}
                                                                required={true}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <div
                                                                  className="MuiInputBase-root-140 MuiInput-root-127 MuiInput-underline-131 MuiInputBase-formControl-141 MuiInput-formControl-128"
                                                                  onClick={[Function]}
                                                                  required={true}
                                                                >
                                                                  <SelectInput
                                                                    IconComponent={[Function]}
                                                                    SelectDisplayProps={
                                                                      Object {
                                                                        "id": "org-affiliation-selector",
                                                                      }
                                                                    }
                                                                    aria-invalid={false}
                                                                    autoWidth={false}
                                                                    className="MuiInputBase-input-150 MuiInput-input-135"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "MuiSelect-disabled-125",
                                                                        "filled": "MuiSelect-filled-122",
                                                                        "icon": "MuiSelect-icon-126",
                                                                        "outlined": "MuiSelect-outlined-123",
                                                                        "root": "MuiSelect-root-120",
                                                                        "select": "MuiSelect-select-121",
                                                                        "selectMenu": "MuiSelect-selectMenu-124",
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    displayEmpty={false}
                                                                    inputRef={[Function]}
                                                                    multiple={false}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    required={true}
                                                                    value=""
                                                                    variant="standard"
                                                                  >
                                                                    <div
                                                                      className="MuiSelect-root-120"
                                                                    >
                                                                      <div
                                                                        aria-haspopup="true"
                                                                        aria-pressed="false"
                                                                        className="MuiSelect-select-121 MuiSelect-selectMenu-124 MuiInputBase-input-150 MuiInput-input-135"
                                                                        id="org-affiliation-selector"
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        role="button"
                                                                        tabIndex={0}
                                                                      >
                                                                        <span
                                                                          dangerouslySetInnerHTML={
                                                                            Object {
                                                                              "__html": "&#8203;",
                                                                            }
                                                                          }
                                                                        />
                                                                      </div>
                                                                      <input
                                                                        type="hidden"
                                                                        value=""
                                                                      />
                                                                      <pure(ArrowDropDown)
                                                                        className="MuiSelect-icon-126"
                                                                      >
                                                                        <ArrowDropDown
                                                                          className="MuiSelect-icon-126"
                                                                        >
                                                                          <WithStyles(SvgIcon)
                                                                            className="MuiSelect-icon-126"
                                                                          >
                                                                            <SvgIcon
                                                                              className="MuiSelect-icon-126"
                                                                              classes={
                                                                                Object {
                                                                                  "colorAction": "MuiSvgIcon-colorAction-160",
                                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-162",
                                                                                  "colorError": "MuiSvgIcon-colorError-161",
                                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-158",
                                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-159",
                                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-163",
                                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-165",
                                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-164",
                                                                                  "root": "MuiSvgIcon-root-157",
                                                                                }
                                                                              }
                                                                              color="inherit"
                                                                              component="svg"
                                                                              fontSize="default"
                                                                              viewBox="0 0 24 24"
                                                                            >
                                                                              <svg
                                                                                aria-hidden="true"
                                                                                className="MuiSvgIcon-root-157 MuiSelect-icon-126"
                                                                                focusable="false"
                                                                                role="presentation"
                                                                                viewBox="0 0 24 24"
                                                                              >
                                                                                <path
                                                                                  d="M7 10l5 5 5-5z"
                                                                                />
                                                                              </svg>
                                                                            </SvgIcon>
                                                                          </WithStyles(SvgIcon)>
                                                                        </ArrowDropDown>
                                                                      </pure(ArrowDropDown)>
                                                                      <WithStyles(Menu)
                                                                        MenuListProps={
                                                                          Object {
                                                                            "disableListWrap": true,
                                                                            "role": "listbox",
                                                                          }
                                                                        }
                                                                        PaperProps={
                                                                          Object {
                                                                            "style": Object {
                                                                              "minWidth": null,
                                                                            },
                                                                          }
                                                                        }
                                                                        id="menu-"
                                                                        onClose={[Function]}
                                                                        open={false}
                                                                      >
                                                                        <Menu
                                                                          MenuListProps={
                                                                            Object {
                                                                              "disableListWrap": true,
                                                                              "role": "listbox",
                                                                            }
                                                                          }
                                                                          PaperProps={
                                                                            Object {
                                                                              "style": Object {
                                                                                "minWidth": null,
                                                                              },
                                                                            }
                                                                          }
                                                                          classes={
                                                                            Object {
                                                                              "paper": "MuiMenu-paper-166",
                                                                            }
                                                                          }
                                                                          disableAutoFocusItem={false}
                                                                          id="menu-"
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                          theme={
                                                                            Object {
                                                                              "breakpoints": Object {
                                                                                "between": [Function],
                                                                                "down": [Function],
                                                                                "keys": Array [
                                                                                  "xs",
                                                                                  "sm",
                                                                                  "md",
                                                                                  "lg",
                                                                                  "xl",
                                                                                ],
                                                                                "only": [Function],
                                                                                "up": [Function],
                                                                                "values": Object {
                                                                                  "lg": 1280,
                                                                                  "md": 960,
                                                                                  "sm": 600,
                                                                                  "xl": 1920,
                                                                                  "xs": 0,
                                                                                },
                                                                                "width": [Function],
                                                                              },
                                                                              "direction": "ltr",
                                                                              "graphs": Object {
                                                                                "color1": "#d72865",
                                                                                "color2": "#1e7d94",
                                                                                "color3": "#49075E",
                                                                                "color4": "#468fcc",
                                                                                "color5": "#f28620",
                                                                                "color6": "#333333",
                                                                                "color7": "#595959",
                                                                              },
                                                                              "hexToRGBA": [Function],
                                                                              "mixins": Object {
                                                                                "gutters": [Function],
                                                                                "toolbar": Object {
                                                                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                                    "minHeight": 48,
                                                                                  },
                                                                                  "@media (min-width:600px)": Object {
                                                                                    "minHeight": 64,
                                                                                  },
                                                                                  "minHeight": 56,
                                                                                },
                                                                              },
                                                                              "overrides": Object {
                                                                                "MUIDataTable": Object {
                                                                                  "paper": Object {
                                                                                    "boxShadow": "none",
                                                                                    "margin": 0,
                                                                                    "padding": 0,
                                                                                  },
                                                                                },
                                                                                "MuiFormLabel": Object {
                                                                                  "root": Object {
                                                                                    "overflow": "hidden",
                                                                                    "textOverflow": "ellipsis",
                                                                                    "whiteSpace": "nowrap",
                                                                                    "width": "100%",
                                                                                  },
                                                                                },
                                                                                "MuiMenuItem": Object {
                                                                                  "root": Object {
                                                                                    "&$selected": Object {
                                                                                      "backgroundColor": "#4085C6 !important",
                                                                                      "color": "#FFFFFF",
                                                                                    },
                                                                                  },
                                                                                },
                                                                              },
                                                                              "palette": Object {
                                                                                "accent": Object {
                                                                                  "dark": "#2a557d",
                                                                                  "light": "#54acff",
                                                                                  "main": "#316799",
                                                                                },
                                                                                "action": Object {
                                                                                  "active": "rgba(0, 0, 0, 0.54)",
                                                                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                                                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                                  "hover": "rgba(0, 0, 0, 0.08)",
                                                                                  "hoverOpacity": 0.08,
                                                                                  "selected": "rgba(0, 0, 0, 0.14)",
                                                                                },
                                                                                "augmentColor": [Function],
                                                                                "background": Object {
                                                                                  "default": "#fafafa",
                                                                                  "paper": "#fff",
                                                                                },
                                                                                "common": Object {
                                                                                  "black": "#000",
                                                                                  "white": "#fff",
                                                                                },
                                                                                "contrastThreshold": 3,
                                                                                "divider": "rgba(0, 0, 0, 0.12)",
                                                                                "error": Object {
                                                                                  "contrastText": "#fff",
                                                                                  "dark": "#790000",
                                                                                  "light": "#ff0000",
                                                                                  "main": "#c80000",
                                                                                },
                                                                                "getContrastText": [Function],
                                                                                "grey": Object {
                                                                                  "100": "#f5f5f5",
                                                                                  "200": "#eeeeee",
                                                                                  "300": "#e0e0e0",
                                                                                  "400": "#bdbdbd",
                                                                                  "50": "#fafafa",
                                                                                  "500": "#9e9e9e",
                                                                                  "600": "#757575",
                                                                                  "700": "#616161",
                                                                                  "800": "#424242",
                                                                                  "900": "#212121",
                                                                                  "A100": "#d5d5d5",
                                                                                  "A200": "#aaaaaa",
                                                                                  "A400": "#303030",
                                                                                  "A700": "#616161",
                                                                                },
                                                                                "primary": Object {
                                                                                  "contrastText": "#fff",
                                                                                  "dark": "#3b1a59",
                                                                                  "gradient": Object {
                                                                                    "diagonal": Object {
                                                                                      "background": "linear-gradient(135deg, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                                                                                      "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                                                                                    },
                                                                                    "horizontal": Object {
                                                                                      "background": "linear-gradient(to right, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                                                                                      "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                                                                                    },
                                                                                  },
                                                                                  "light": "#962A8B",
                                                                                  "main": "#51247A",
                                                                                },
                                                                                "secondary": Object {
                                                                                  "contrastText": "#fff",
                                                                                  "dark": "#333333",
                                                                                  "light": "#f2f2f2",
                                                                                  "main": "#595959",
                                                                                },
                                                                                "success": Object {
                                                                                  "dark": "#005000",
                                                                                  "light": "#00a700",
                                                                                  "main": "#007200",
                                                                                },
                                                                                "text": Object {
                                                                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                                                                  "hint": "rgba(0, 0, 0, 0.38)",
                                                                                  "primary": "rgba(0, 0, 0, 0.87)",
                                                                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                                                                },
                                                                                "tonalOffset": 0.2,
                                                                                "type": "light",
                                                                                "warning": Object {
                                                                                  "dark": "#542400",
                                                                                  "light": "#ff9a57",
                                                                                  "main": "#bf5000",
                                                                                },
                                                                                "white": Object {
                                                                                  "main": "#FFFFFF",
                                                                                },
                                                                              },
                                                                              "props": Object {},
                                                                              "shadows": Array [
                                                                                "none",
                                                                                "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                                                                "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                                                                "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                                                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                              ],
                                                                              "shape": Object {
                                                                                "borderRadius": 4,
                                                                              },
                                                                              "spacing": Object {
                                                                                "unit": 8,
                                                                              },
                                                                              "status": Object {
                                                                                "danger": "#f44336",
                                                                                "warning": "#ff9800",
                                                                              },
                                                                              "transitions": Object {
                                                                                "create": [Function],
                                                                                "duration": Object {
                                                                                  "complex": 375,
                                                                                  "enteringScreen": 225,
                                                                                  "leavingScreen": 195,
                                                                                  "short": 250,
                                                                                  "shorter": 200,
                                                                                  "shortest": 150,
                                                                                  "standard": 300,
                                                                                },
                                                                                "easing": Object {
                                                                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                                },
                                                                                "getAutoHeightDuration": [Function],
                                                                              },
                                                                              "typography": Object {
                                                                                "body1": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "1rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0.00938em",
                                                                                  "lineHeight": 1.5,
                                                                                },
                                                                                "body1Next": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "1rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0.00938em",
                                                                                  "lineHeight": 1.5,
                                                                                },
                                                                                "body2": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "0.875rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0.01071em",
                                                                                  "lineHeight": 1.5,
                                                                                },
                                                                                "body2Next": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "0.875rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0.01071em",
                                                                                  "lineHeight": 1.5,
                                                                                },
                                                                                "button": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "0.875rem",
                                                                                  "fontWeight": 400,
                                                                                  "letterSpacing": "0.02857em",
                                                                                  "lineHeight": 1.75,
                                                                                  "textTransform": "uppercase",
                                                                                },
                                                                                "buttonNext": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "0.875rem",
                                                                                  "fontWeight": 400,
                                                                                  "letterSpacing": "0.02857em",
                                                                                  "lineHeight": 1.75,
                                                                                  "textTransform": "uppercase",
                                                                                },
                                                                                "caption": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "0.75rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0.03333em",
                                                                                  "lineHeight": 1.66,
                                                                                },
                                                                                "captionNext": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "0.75rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0.03333em",
                                                                                  "lineHeight": 1.66,
                                                                                },
                                                                                "display1": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.54)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "2.125rem",
                                                                                  "fontWeight": 300,
                                                                                  "lineHeight": "1.20588em",
                                                                                },
                                                                                "display2": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.54)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "2.8125rem",
                                                                                  "fontWeight": 300,
                                                                                  "lineHeight": "1.13333em",
                                                                                  "marginLeft": "-.02em",
                                                                                },
                                                                                "display3": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.54)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "3.5rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "-.02em",
                                                                                  "lineHeight": "1.30357em",
                                                                                  "marginLeft": "-.02em",
                                                                                },
                                                                                "display4": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.54)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "7rem",
                                                                                  "fontWeight": 200,
                                                                                  "letterSpacing": "-.04em",
                                                                                  "lineHeight": "1.14286em",
                                                                                  "marginLeft": "-.04em",
                                                                                },
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": 14,
                                                                                "fontWeightLight": 200,
                                                                                "fontWeightMedium": 400,
                                                                                "fontWeightRegular": 300,
                                                                                "h1": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "6rem",
                                                                                  "fontWeight": 200,
                                                                                  "letterSpacing": "-0.01562em",
                                                                                  "lineHeight": 1,
                                                                                },
                                                                                "h2": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "3.75rem",
                                                                                  "fontWeight": 200,
                                                                                  "letterSpacing": "-0.00833em",
                                                                                  "lineHeight": 1,
                                                                                },
                                                                                "h3": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "3rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0em",
                                                                                  "lineHeight": 1.04,
                                                                                },
                                                                                "h4": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "2.125rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0.00735em",
                                                                                  "lineHeight": 1.17,
                                                                                },
                                                                                "h5": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "1.5rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0em",
                                                                                  "lineHeight": 1.33,
                                                                                },
                                                                                "h6": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "1.25rem",
                                                                                  "fontWeight": 400,
                                                                                  "letterSpacing": "0.0075em",
                                                                                  "lineHeight": 1.6,
                                                                                },
                                                                                "headline": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "1.5rem",
                                                                                  "fontWeight": 300,
                                                                                  "lineHeight": "1.35417em",
                                                                                },
                                                                                "overline": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "0.75rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0.08333em",
                                                                                  "lineHeight": 2.66,
                                                                                  "textTransform": "uppercase",
                                                                                },
                                                                                "pxToRem": [Function],
                                                                                "round": [Function],
                                                                                "subheading": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "1rem",
                                                                                  "fontWeight": 300,
                                                                                  "lineHeight": "1.5em",
                                                                                },
                                                                                "subtitle1": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "1rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0.00938em",
                                                                                  "lineHeight": 1.75,
                                                                                },
                                                                                "subtitle2": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "0.875rem",
                                                                                  "fontWeight": 400,
                                                                                  "letterSpacing": "0.00714em",
                                                                                  "lineHeight": 1.57,
                                                                                },
                                                                                "suppressDeprecationWarnings": true,
                                                                                "title": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "1.3125rem",
                                                                                  "fontWeight": 400,
                                                                                  "lineHeight": "1.16667em",
                                                                                },
                                                                                "useNextVariants": true,
                                                                              },
                                                                              "zIndex": Object {
                                                                                "appBar": 1100,
                                                                                "drawer": 1200,
                                                                                "mobileStepper": 1000,
                                                                                "modal": 1300,
                                                                                "snackbar": 1400,
                                                                                "tooltip": 1500,
                                                                              },
                                                                            }
                                                                          }
                                                                          transitionDuration="auto"
                                                                        >
                                                                          <WithStyles(Popover)
                                                                            PaperProps={
                                                                              Object {
                                                                                "classes": Object {
                                                                                  "root": "MuiMenu-paper-166",
                                                                                },
                                                                                "style": Object {
                                                                                  "minWidth": null,
                                                                                },
                                                                              }
                                                                            }
                                                                            anchorOrigin={
                                                                              Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                                            }
                                                                            getContentAnchorEl={[Function]}
                                                                            id="menu-"
                                                                            onClose={[Function]}
                                                                            onEntering={[Function]}
                                                                            open={false}
                                                                            transformOrigin={
                                                                              Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                                            }
                                                                            transitionDuration="auto"
                                                                          >
                                                                            <Popover
                                                                              PaperProps={
                                                                                Object {
                                                                                  "classes": Object {
                                                                                    "root": "MuiMenu-paper-166",
                                                                                  },
                                                                                  "style": Object {
                                                                                    "minWidth": null,
                                                                                  },
                                                                                }
                                                                              }
                                                                              TransitionComponent={[Function]}
                                                                              anchorOrigin={
                                                                                Object {
                                                                                  "horizontal": "left",
                                                                                  "vertical": "top",
                                                                                }
                                                                              }
                                                                              anchorReference="anchorEl"
                                                                              classes={
                                                                                Object {
                                                                                  "paper": "MuiPopover-paper-167",
                                                                                }
                                                                              }
                                                                              elevation={8}
                                                                              getContentAnchorEl={[Function]}
                                                                              id="menu-"
                                                                              marginThreshold={16}
                                                                              onClose={[Function]}
                                                                              onEntering={[Function]}
                                                                              open={false}
                                                                              transformOrigin={
                                                                                Object {
                                                                                  "horizontal": "left",
                                                                                  "vertical": "top",
                                                                                }
                                                                              }
                                                                              transitionDuration="auto"
                                                                            >
                                                                              <WithStyles(Modal)
                                                                                BackdropProps={
                                                                                  Object {
                                                                                    "invisible": true,
                                                                                  }
                                                                                }
                                                                                id="menu-"
                                                                                onClose={[Function]}
                                                                                open={false}
                                                                              >
                                                                                <Modal
                                                                                  BackdropComponent={[Function]}
                                                                                  BackdropProps={
                                                                                    Object {
                                                                                      "invisible": true,
                                                                                    }
                                                                                  }
                                                                                  classes={
                                                                                    Object {
                                                                                      "hidden": "MuiModal-hidden-169",
                                                                                      "root": "MuiModal-root-168",
                                                                                    }
                                                                                  }
                                                                                  closeAfterTransition={false}
                                                                                  disableAutoFocus={false}
                                                                                  disableBackdropClick={false}
                                                                                  disableEnforceFocus={false}
                                                                                  disableEscapeKeyDown={false}
                                                                                  disablePortal={false}
                                                                                  disableRestoreFocus={false}
                                                                                  hideBackdrop={false}
                                                                                  id="menu-"
                                                                                  keepMounted={false}
                                                                                  manager={
                                                                                    ModalManager {
                                                                                      "data": Array [],
                                                                                      "handleContainerOverflow": true,
                                                                                      "hideSiblingNodes": true,
                                                                                      "modals": Array [],
                                                                                    }
                                                                                  }
                                                                                  onClose={[Function]}
                                                                                  open={false}
                                                                                />
                                                                              </WithStyles(Modal)>
                                                                            </Popover>
                                                                          </WithStyles(Popover)>
                                                                        </Menu>
                                                                      </WithStyles(Menu)>
                                                                    </div>
                                                                  </SelectInput>
                                                                </div>
                                                              </InputBase>
                                                            </WithFormControlContext(InputBase)>
                                                          </WithStyles(WithFormControlContext(InputBase))>
                                                        </Input>
                                                      </WithStyles(Input)>
                                                    </Select>
                                                  </WithFormControlContext(Select)>
                                                </WithStyles(WithFormControlContext(Select))>
                                              </div>
                                            </FormControl>
                                          </WithStyles(FormControl)>
                                        </OrgAffilicationTypeSelector>
                                      </div>
                                    </Grid>
                                  </WithStyles(Grid)>
                                  <WithStyles(Grid)
                                    item={true}
                                    sm={true}
                                    xs={12}
                                  >
                                    <Grid
                                      alignContent="stretch"
                                      alignItems="stretch"
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                                          "container": "MuiGrid-container-1",
                                          "direction-xs-column": "MuiGrid-direction-xs-column-4",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                                          "grid-lg-1": "MuiGrid-grid-lg-1-72",
                                          "grid-lg-10": "MuiGrid-grid-lg-10-81",
                                          "grid-lg-11": "MuiGrid-grid-lg-11-82",
                                          "grid-lg-12": "MuiGrid-grid-lg-12-83",
                                          "grid-lg-2": "MuiGrid-grid-lg-2-73",
                                          "grid-lg-3": "MuiGrid-grid-lg-3-74",
                                          "grid-lg-4": "MuiGrid-grid-lg-4-75",
                                          "grid-lg-5": "MuiGrid-grid-lg-5-76",
                                          "grid-lg-6": "MuiGrid-grid-lg-6-77",
                                          "grid-lg-7": "MuiGrid-grid-lg-7-78",
                                          "grid-lg-8": "MuiGrid-grid-lg-8-79",
                                          "grid-lg-9": "MuiGrid-grid-lg-9-80",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                                          "grid-lg-true": "MuiGrid-grid-lg-true-71",
                                          "grid-md-1": "MuiGrid-grid-md-1-58",
                                          "grid-md-10": "MuiGrid-grid-md-10-67",
                                          "grid-md-11": "MuiGrid-grid-md-11-68",
                                          "grid-md-12": "MuiGrid-grid-md-12-69",
                                          "grid-md-2": "MuiGrid-grid-md-2-59",
                                          "grid-md-3": "MuiGrid-grid-md-3-60",
                                          "grid-md-4": "MuiGrid-grid-md-4-61",
                                          "grid-md-5": "MuiGrid-grid-md-5-62",
                                          "grid-md-6": "MuiGrid-grid-md-6-63",
                                          "grid-md-7": "MuiGrid-grid-md-7-64",
                                          "grid-md-8": "MuiGrid-grid-md-8-65",
                                          "grid-md-9": "MuiGrid-grid-md-9-66",
                                          "grid-md-auto": "MuiGrid-grid-md-auto-56",
                                          "grid-md-true": "MuiGrid-grid-md-true-57",
                                          "grid-sm-1": "MuiGrid-grid-sm-1-44",
                                          "grid-sm-10": "MuiGrid-grid-sm-10-53",
                                          "grid-sm-11": "MuiGrid-grid-sm-11-54",
                                          "grid-sm-12": "MuiGrid-grid-sm-12-55",
                                          "grid-sm-2": "MuiGrid-grid-sm-2-45",
                                          "grid-sm-3": "MuiGrid-grid-sm-3-46",
                                          "grid-sm-4": "MuiGrid-grid-sm-4-47",
                                          "grid-sm-5": "MuiGrid-grid-sm-5-48",
                                          "grid-sm-6": "MuiGrid-grid-sm-6-49",
                                          "grid-sm-7": "MuiGrid-grid-sm-7-50",
                                          "grid-sm-8": "MuiGrid-grid-sm-8-51",
                                          "grid-sm-9": "MuiGrid-grid-sm-9-52",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                                          "grid-sm-true": "MuiGrid-grid-sm-true-43",
                                          "grid-xl-1": "MuiGrid-grid-xl-1-86",
                                          "grid-xl-10": "MuiGrid-grid-xl-10-95",
                                          "grid-xl-11": "MuiGrid-grid-xl-11-96",
                                          "grid-xl-12": "MuiGrid-grid-xl-12-97",
                                          "grid-xl-2": "MuiGrid-grid-xl-2-87",
                                          "grid-xl-3": "MuiGrid-grid-xl-3-88",
                                          "grid-xl-4": "MuiGrid-grid-xl-4-89",
                                          "grid-xl-5": "MuiGrid-grid-xl-5-90",
                                          "grid-xl-6": "MuiGrid-grid-xl-6-91",
                                          "grid-xl-7": "MuiGrid-grid-xl-7-92",
                                          "grid-xl-8": "MuiGrid-grid-xl-8-93",
                                          "grid-xl-9": "MuiGrid-grid-xl-9-94",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                                          "grid-xl-true": "MuiGrid-grid-xl-true-85",
                                          "grid-xs-1": "MuiGrid-grid-xs-1-30",
                                          "grid-xs-10": "MuiGrid-grid-xs-10-39",
                                          "grid-xs-11": "MuiGrid-grid-xs-11-40",
                                          "grid-xs-12": "MuiGrid-grid-xs-12-41",
                                          "grid-xs-2": "MuiGrid-grid-xs-2-31",
                                          "grid-xs-3": "MuiGrid-grid-xs-3-32",
                                          "grid-xs-4": "MuiGrid-grid-xs-4-33",
                                          "grid-xs-5": "MuiGrid-grid-xs-5-34",
                                          "grid-xs-6": "MuiGrid-grid-xs-6-35",
                                          "grid-xs-7": "MuiGrid-grid-xs-7-36",
                                          "grid-xs-8": "MuiGrid-grid-xs-8-37",
                                          "grid-xs-9": "MuiGrid-grid-xs-9-38",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                                          "grid-xs-true": "MuiGrid-grid-xs-true-29",
                                          "item": "MuiGrid-item-2",
                                          "justify-xs-center": "MuiGrid-justify-xs-center-18",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                                          "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                                          "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                                          "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                                          "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                                        }
                                      }
                                      component="div"
                                      container={false}
                                      direction="row"
                                      item={true}
                                      justify="flex-start"
                                      lg={false}
                                      md={false}
                                      sm={true}
                                      spacing={0}
                                      wrap="wrap"
                                      xl={false}
                                      xs={12}
                                      zeroMinWidth={false}
                                    >
                                      <div
                                        className="MuiGrid-item-2 MuiGrid-grid-xs-12-41 MuiGrid-grid-sm-true-43"
                                      >
                                        <WithStyles(TextFieldWrapper)
                                          autoComplete="off"
                                          disabled={false}
                                          error={false}
                                          fullWidth={true}
                                          id="nameAsPublishedField"
                                          label="Name as published"
                                          onChange={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Please type the name exactly as published"
                                          required={false}
                                          value=""
                                        >
                                          <TextFieldWrapper
                                            autoComplete="off"
                                            classes={Object {}}
                                            disabled={false}
                                            error={false}
                                            fullWidth={true}
                                            id="nameAsPublishedField"
                                            label="Name as published"
                                            onChange={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="Please type the name exactly as published"
                                            required={false}
                                            value=""
                                          >
                                            <TextField
                                              InputLabelProps={
                                                Object {
                                                  "hidden": false,
                                                  "htmlFor": "nameAsPublishedField",
                                                  "id": "nameAsPublishedField-label",
                                                  "shrink": undefined,
                                                }
                                              }
                                              autoComplete="off"
                                              classes={Object {}}
                                              disabled={false}
                                              error={false}
                                              fullWidth={true}
                                              id="nameAsPublishedField"
                                              inputProps={
                                                Object {
                                                  "aria-label": "Name as published",
                                                  "aria-labelledby": "nameAsPublishedField-label",
                                                  "id": "nameAsPublishedField",
                                                  "label": "Name as published",
                                                }
                                              }
                                              label="Name as published"
                                              onChange={[Function]}
                                              onKeyDown={[Function]}
                                              placeholder="Please type the name exactly as published"
                                              required={false}
                                              select={false}
                                              value=""
                                              variant="standard"
                                            >
                                              <WithStyles(FormControl)
                                                classes={Object {}}
                                                disabled={false}
                                                error={false}
                                                fullWidth={true}
                                                onKeyDown={[Function]}
                                                required={false}
                                                variant="standard"
                                              >
                                                <FormControl
                                                  classes={
                                                    Object {
                                                      "fullWidth": "MuiFormControl-fullWidth-101",
                                                      "marginDense": "MuiFormControl-marginDense-100",
                                                      "marginNormal": "MuiFormControl-marginNormal-99",
                                                      "root": "MuiFormControl-root-98",
                                                    }
                                                  }
                                                  component="div"
                                                  disabled={false}
                                                  error={false}
                                                  fullWidth={true}
                                                  margin="none"
                                                  onKeyDown={[Function]}
                                                  required={false}
                                                  variant="standard"
                                                >
                                                  <div
                                                    className="MuiFormControl-root-98 MuiFormControl-fullWidth-101"
                                                    onKeyDown={[Function]}
                                                  >
                                                    <WithStyles(WithFormControlContext(InputLabel))
                                                      hidden={false}
                                                      htmlFor="nameAsPublishedField"
                                                      id="nameAsPublishedField-label"
                                                    >
                                                      <WithFormControlContext(InputLabel)
                                                        classes={
                                                          Object {
                                                            "animated": "MuiInputLabel-animated-110",
                                                            "disabled": "MuiInputLabel-disabled-104",
                                                            "error": "MuiInputLabel-error-105",
                                                            "filled": "MuiInputLabel-filled-111",
                                                            "focused": "MuiInputLabel-focused-103",
                                                            "formControl": "MuiInputLabel-formControl-107",
                                                            "marginDense": "MuiInputLabel-marginDense-108",
                                                            "outlined": "MuiInputLabel-outlined-112",
                                                            "required": "MuiInputLabel-required-106",
                                                            "root": "MuiInputLabel-root-102",
                                                            "shrink": "MuiInputLabel-shrink-109",
                                                          }
                                                        }
                                                        hidden={false}
                                                        htmlFor="nameAsPublishedField"
                                                        id="nameAsPublishedField-label"
                                                      >
                                                        <InputLabel
                                                          classes={
                                                            Object {
                                                              "animated": "MuiInputLabel-animated-110",
                                                              "disabled": "MuiInputLabel-disabled-104",
                                                              "error": "MuiInputLabel-error-105",
                                                              "filled": "MuiInputLabel-filled-111",
                                                              "focused": "MuiInputLabel-focused-103",
                                                              "formControl": "MuiInputLabel-formControl-107",
                                                              "marginDense": "MuiInputLabel-marginDense-108",
                                                              "outlined": "MuiInputLabel-outlined-112",
                                                              "required": "MuiInputLabel-required-106",
                                                              "root": "MuiInputLabel-root-102",
                                                              "shrink": "MuiInputLabel-shrink-109",
                                                            }
                                                          }
                                                          disableAnimation={false}
                                                          hidden={false}
                                                          htmlFor="nameAsPublishedField"
                                                          id="nameAsPublishedField-label"
                                                          muiFormControl={
                                                            Object {
                                                              "adornedStart": false,
                                                              "disabled": false,
                                                              "error": false,
                                                              "filled": false,
                                                              "focused": false,
                                                              "margin": "none",
                                                              "onBlur": [Function],
                                                              "onEmpty": [Function],
                                                              "onFilled": [Function],
                                                              "onFocus": [Function],
                                                              "required": false,
                                                              "variant": "standard",
                                                            }
                                                          }
                                                        >
                                                          <WithStyles(WithFormControlContext(FormLabel))
                                                            className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                            classes={
                                                              Object {
                                                                "disabled": "MuiInputLabel-disabled-104",
                                                                "error": "MuiInputLabel-error-105",
                                                                "focused": "MuiInputLabel-focused-103",
                                                                "required": "MuiInputLabel-required-106",
                                                              }
                                                            }
                                                            data-shrink={false}
                                                            hidden={false}
                                                            htmlFor="nameAsPublishedField"
                                                            id="nameAsPublishedField-label"
                                                          >
                                                            <WithFormControlContext(FormLabel)
                                                              className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                              classes={
                                                                Object {
                                                                  "asterisk": "MuiFormLabel-asterisk-119",
                                                                  "disabled": "MuiFormLabel-disabled-115 MuiInputLabel-disabled-104",
                                                                  "error": "MuiFormLabel-error-116 MuiInputLabel-error-105",
                                                                  "filled": "MuiFormLabel-filled-117",
                                                                  "focused": "MuiFormLabel-focused-114 MuiInputLabel-focused-103",
                                                                  "required": "MuiFormLabel-required-118 MuiInputLabel-required-106",
                                                                  "root": "MuiFormLabel-root-113",
                                                                }
                                                              }
                                                              data-shrink={false}
                                                              hidden={false}
                                                              htmlFor="nameAsPublishedField"
                                                              id="nameAsPublishedField-label"
                                                            >
                                                              <FormLabel
                                                                className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiFormLabel-asterisk-119",
                                                                    "disabled": "MuiFormLabel-disabled-115 MuiInputLabel-disabled-104",
                                                                    "error": "MuiFormLabel-error-116 MuiInputLabel-error-105",
                                                                    "filled": "MuiFormLabel-filled-117",
                                                                    "focused": "MuiFormLabel-focused-114 MuiInputLabel-focused-103",
                                                                    "required": "MuiFormLabel-required-118 MuiInputLabel-required-106",
                                                                    "root": "MuiFormLabel-root-113",
                                                                  }
                                                                }
                                                                component="label"
                                                                data-shrink={false}
                                                                hidden={false}
                                                                htmlFor="nameAsPublishedField"
                                                                id="nameAsPublishedField-label"
                                                                muiFormControl={
                                                                  Object {
                                                                    "adornedStart": false,
                                                                    "disabled": false,
                                                                    "error": false,
                                                                    "filled": false,
                                                                    "focused": false,
                                                                    "margin": "none",
                                                                    "onBlur": [Function],
                                                                    "onEmpty": [Function],
                                                                    "onFilled": [Function],
                                                                    "onFocus": [Function],
                                                                    "required": false,
                                                                    "variant": "standard",
                                                                  }
                                                                }
                                                              >
                                                                <label
                                                                  className="MuiFormLabel-root-113 MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                                  data-shrink={false}
                                                                  hidden={false}
                                                                  htmlFor="nameAsPublishedField"
                                                                  id="nameAsPublishedField-label"
                                                                >
                                                                  Name as published
                                                                </label>
                                                              </FormLabel>
                                                            </WithFormControlContext(FormLabel)>
                                                          </WithStyles(WithFormControlContext(FormLabel))>
                                                        </InputLabel>
                                                      </WithFormControlContext(InputLabel)>
                                                    </WithStyles(WithFormControlContext(InputLabel))>
                                                    <WithStyles(Input)
                                                      autoComplete="off"
                                                      fullWidth={true}
                                                      id="nameAsPublishedField"
                                                      inputProps={
                                                        Object {
                                                          "aria-label": "Name as published",
                                                          "aria-labelledby": "nameAsPublishedField-label",
                                                          "id": "nameAsPublishedField",
                                                          "label": "Name as published",
                                                        }
                                                      }
                                                      onChange={[Function]}
                                                      placeholder="Please type the name exactly as published"
                                                      value=""
                                                    >
                                                      <Input
                                                        autoComplete="off"
                                                        classes={
                                                          Object {
                                                            "disabled": "MuiInput-disabled-130",
                                                            "error": "MuiInput-error-132",
                                                            "focused": "MuiInput-focused-129",
                                                            "formControl": "MuiInput-formControl-128",
                                                            "fullWidth": "MuiInput-fullWidth-134",
                                                            "input": "MuiInput-input-135",
                                                            "inputMarginDense": "MuiInput-inputMarginDense-136",
                                                            "inputMultiline": "MuiInput-inputMultiline-137",
                                                            "inputType": "MuiInput-inputType-138",
                                                            "inputTypeSearch": "MuiInput-inputTypeSearch-139",
                                                            "multiline": "MuiInput-multiline-133",
                                                            "root": "MuiInput-root-127",
                                                            "underline": "MuiInput-underline-131",
                                                          }
                                                        }
                                                        fullWidth={true}
                                                        id="nameAsPublishedField"
                                                        inputProps={
                                                          Object {
                                                            "aria-label": "Name as published",
                                                            "aria-labelledby": "nameAsPublishedField-label",
                                                            "id": "nameAsPublishedField",
                                                            "label": "Name as published",
                                                          }
                                                        }
                                                        onChange={[Function]}
                                                        placeholder="Please type the name exactly as published"
                                                        value=""
                                                      >
                                                        <WithStyles(WithFormControlContext(InputBase))
                                                          autoComplete="off"
                                                          classes={
                                                            Object {
                                                              "disabled": "MuiInput-disabled-130",
                                                              "error": "MuiInput-error-132",
                                                              "focused": "MuiInput-focused-129",
                                                              "formControl": "MuiInput-formControl-128",
                                                              "fullWidth": "MuiInput-fullWidth-134",
                                                              "input": "MuiInput-input-135",
                                                              "inputMarginDense": "MuiInput-inputMarginDense-136",
                                                              "inputMultiline": "MuiInput-inputMultiline-137",
                                                              "inputType": "MuiInput-inputType-138",
                                                              "inputTypeSearch": "MuiInput-inputTypeSearch-139",
                                                              "multiline": "MuiInput-multiline-133",
                                                              "root": "MuiInput-root-127 MuiInput-underline-131",
                                                              "underline": null,
                                                            }
                                                          }
                                                          fullWidth={true}
                                                          id="nameAsPublishedField"
                                                          inputComponent="input"
                                                          inputProps={
                                                            Object {
                                                              "aria-label": "Name as published",
                                                              "aria-labelledby": "nameAsPublishedField-label",
                                                              "id": "nameAsPublishedField",
                                                              "label": "Name as published",
                                                            }
                                                          }
                                                          multiline={false}
                                                          onChange={[Function]}
                                                          placeholder="Please type the name exactly as published"
                                                          type="text"
                                                          value=""
                                                        >
                                                          <WithFormControlContext(InputBase)
                                                            autoComplete="off"
                                                            classes={
                                                              Object {
                                                                "adornedEnd": "MuiInputBase-adornedEnd-145",
                                                                "adornedStart": "MuiInputBase-adornedStart-144",
                                                                "disabled": "MuiInputBase-disabled-143 MuiInput-disabled-130",
                                                                "error": "MuiInputBase-error-146 MuiInput-error-132",
                                                                "focused": "MuiInputBase-focused-142 MuiInput-focused-129",
                                                                "formControl": "MuiInputBase-formControl-141 MuiInput-formControl-128",
                                                                "fullWidth": "MuiInputBase-fullWidth-149 MuiInput-fullWidth-134",
                                                                "input": "MuiInputBase-input-150 MuiInput-input-135",
                                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-156",
                                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart-155",
                                                                "inputMarginDense": "MuiInputBase-inputMarginDense-151 MuiInput-inputMarginDense-136",
                                                                "inputMultiline": "MuiInputBase-inputMultiline-152 MuiInput-inputMultiline-137",
                                                                "inputType": "MuiInputBase-inputType-153 MuiInput-inputType-138",
                                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch-154 MuiInput-inputTypeSearch-139",
                                                                "marginDense": "MuiInputBase-marginDense-147",
                                                                "multiline": "MuiInputBase-multiline-148 MuiInput-multiline-133",
                                                                "root": "MuiInputBase-root-140 MuiInput-root-127 MuiInput-underline-131",
                                                              }
                                                            }
                                                            fullWidth={true}
                                                            id="nameAsPublishedField"
                                                            inputComponent="input"
                                                            inputProps={
                                                              Object {
                                                                "aria-label": "Name as published",
                                                                "aria-labelledby": "nameAsPublishedField-label",
                                                                "id": "nameAsPublishedField",
                                                                "label": "Name as published",
                                                              }
                                                            }
                                                            multiline={false}
                                                            onChange={[Function]}
                                                            placeholder="Please type the name exactly as published"
                                                            type="text"
                                                            value=""
                                                          >
                                                            <InputBase
                                                              autoComplete="off"
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiInputBase-adornedEnd-145",
                                                                  "adornedStart": "MuiInputBase-adornedStart-144",
                                                                  "disabled": "MuiInputBase-disabled-143 MuiInput-disabled-130",
                                                                  "error": "MuiInputBase-error-146 MuiInput-error-132",
                                                                  "focused": "MuiInputBase-focused-142 MuiInput-focused-129",
                                                                  "formControl": "MuiInputBase-formControl-141 MuiInput-formControl-128",
                                                                  "fullWidth": "MuiInputBase-fullWidth-149 MuiInput-fullWidth-134",
                                                                  "input": "MuiInputBase-input-150 MuiInput-input-135",
                                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-156",
                                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart-155",
                                                                  "inputMarginDense": "MuiInputBase-inputMarginDense-151 MuiInput-inputMarginDense-136",
                                                                  "inputMultiline": "MuiInputBase-inputMultiline-152 MuiInput-inputMultiline-137",
                                                                  "inputType": "MuiInputBase-inputType-153 MuiInput-inputType-138",
                                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch-154 MuiInput-inputTypeSearch-139",
                                                                  "marginDense": "MuiInputBase-marginDense-147",
                                                                  "multiline": "MuiInputBase-multiline-148 MuiInput-multiline-133",
                                                                  "root": "MuiInputBase-root-140 MuiInput-root-127 MuiInput-underline-131",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              id="nameAsPublishedField"
                                                              inputComponent="input"
                                                              inputProps={
                                                                Object {
                                                                  "aria-label": "Name as published",
                                                                  "aria-labelledby": "nameAsPublishedField-label",
                                                                  "id": "nameAsPublishedField",
                                                                  "label": "Name as published",
                                                                }
                                                              }
                                                              muiFormControl={
                                                                Object {
                                                                  "adornedStart": false,
                                                                  "disabled": false,
                                                                  "error": false,
                                                                  "filled": false,
                                                                  "focused": false,
                                                                  "margin": "none",
                                                                  "onBlur": [Function],
                                                                  "onEmpty": [Function],
                                                                  "onFilled": [Function],
                                                                  "onFocus": [Function],
                                                                  "required": false,
                                                                  "variant": "standard",
                                                                }
                                                              }
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              placeholder="Please type the name exactly as published"
                                                              type="text"
                                                              value=""
                                                            >
                                                              <div
                                                                className="MuiInputBase-root-140 MuiInput-root-127 MuiInput-underline-131 MuiInputBase-fullWidth-149 MuiInput-fullWidth-134 MuiInputBase-formControl-141 MuiInput-formControl-128"
                                                                onClick={[Function]}
                                                              >
                                                                <input
                                                                  aria-invalid={false}
                                                                  aria-label="Name as published"
                                                                  aria-labelledby="nameAsPublishedField-label"
                                                                  autoComplete="off"
                                                                  className="MuiInputBase-input-150 MuiInput-input-135"
                                                                  disabled={false}
                                                                  id="nameAsPublishedField"
                                                                  label="Name as published"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  placeholder="Please type the name exactly as published"
                                                                  required={false}
                                                                  type="text"
                                                                  value=""
                                                                />
                                                              </div>
                                                            </InputBase>
                                                          </WithFormControlContext(InputBase)>
                                                        </WithStyles(WithFormControlContext(InputBase))>
                                                      </Input>
                                                    </WithStyles(Input)>
                                                  </div>
                                                </FormControl>
                                              </WithStyles(FormControl)>
                                            </TextField>
                                          </TextFieldWrapper>
                                        </WithStyles(TextFieldWrapper)>
                                      </div>
                                    </Grid>
                                  </WithStyles(Grid)>
                                </div>
                              </Grid>
                            </WithStyles(Grid)>
                            <WithStyles(Grid)
                              container={true}
                              spacing={8}
                              style={
                                Object {
                                  "marginTop": 8,
                                }
                              }
                            >
                              <Grid
                                alignContent="stretch"
                                alignItems="stretch"
                                classes={
                                  Object {
                                    "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                                    "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                                    "container": "MuiGrid-container-1",
                                    "direction-xs-column": "MuiGrid-direction-xs-column-4",
                                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                                    "grid-lg-1": "MuiGrid-grid-lg-1-72",
                                    "grid-lg-10": "MuiGrid-grid-lg-10-81",
                                    "grid-lg-11": "MuiGrid-grid-lg-11-82",
                                    "grid-lg-12": "MuiGrid-grid-lg-12-83",
                                    "grid-lg-2": "MuiGrid-grid-lg-2-73",
                                    "grid-lg-3": "MuiGrid-grid-lg-3-74",
                                    "grid-lg-4": "MuiGrid-grid-lg-4-75",
                                    "grid-lg-5": "MuiGrid-grid-lg-5-76",
                                    "grid-lg-6": "MuiGrid-grid-lg-6-77",
                                    "grid-lg-7": "MuiGrid-grid-lg-7-78",
                                    "grid-lg-8": "MuiGrid-grid-lg-8-79",
                                    "grid-lg-9": "MuiGrid-grid-lg-9-80",
                                    "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                                    "grid-lg-true": "MuiGrid-grid-lg-true-71",
                                    "grid-md-1": "MuiGrid-grid-md-1-58",
                                    "grid-md-10": "MuiGrid-grid-md-10-67",
                                    "grid-md-11": "MuiGrid-grid-md-11-68",
                                    "grid-md-12": "MuiGrid-grid-md-12-69",
                                    "grid-md-2": "MuiGrid-grid-md-2-59",
                                    "grid-md-3": "MuiGrid-grid-md-3-60",
                                    "grid-md-4": "MuiGrid-grid-md-4-61",
                                    "grid-md-5": "MuiGrid-grid-md-5-62",
                                    "grid-md-6": "MuiGrid-grid-md-6-63",
                                    "grid-md-7": "MuiGrid-grid-md-7-64",
                                    "grid-md-8": "MuiGrid-grid-md-8-65",
                                    "grid-md-9": "MuiGrid-grid-md-9-66",
                                    "grid-md-auto": "MuiGrid-grid-md-auto-56",
                                    "grid-md-true": "MuiGrid-grid-md-true-57",
                                    "grid-sm-1": "MuiGrid-grid-sm-1-44",
                                    "grid-sm-10": "MuiGrid-grid-sm-10-53",
                                    "grid-sm-11": "MuiGrid-grid-sm-11-54",
                                    "grid-sm-12": "MuiGrid-grid-sm-12-55",
                                    "grid-sm-2": "MuiGrid-grid-sm-2-45",
                                    "grid-sm-3": "MuiGrid-grid-sm-3-46",
                                    "grid-sm-4": "MuiGrid-grid-sm-4-47",
                                    "grid-sm-5": "MuiGrid-grid-sm-5-48",
                                    "grid-sm-6": "MuiGrid-grid-sm-6-49",
                                    "grid-sm-7": "MuiGrid-grid-sm-7-50",
                                    "grid-sm-8": "MuiGrid-grid-sm-8-51",
                                    "grid-sm-9": "MuiGrid-grid-sm-9-52",
                                    "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                                    "grid-sm-true": "MuiGrid-grid-sm-true-43",
                                    "grid-xl-1": "MuiGrid-grid-xl-1-86",
                                    "grid-xl-10": "MuiGrid-grid-xl-10-95",
                                    "grid-xl-11": "MuiGrid-grid-xl-11-96",
                                    "grid-xl-12": "MuiGrid-grid-xl-12-97",
                                    "grid-xl-2": "MuiGrid-grid-xl-2-87",
                                    "grid-xl-3": "MuiGrid-grid-xl-3-88",
                                    "grid-xl-4": "MuiGrid-grid-xl-4-89",
                                    "grid-xl-5": "MuiGrid-grid-xl-5-90",
                                    "grid-xl-6": "MuiGrid-grid-xl-6-91",
                                    "grid-xl-7": "MuiGrid-grid-xl-7-92",
                                    "grid-xl-8": "MuiGrid-grid-xl-8-93",
                                    "grid-xl-9": "MuiGrid-grid-xl-9-94",
                                    "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                                    "grid-xl-true": "MuiGrid-grid-xl-true-85",
                                    "grid-xs-1": "MuiGrid-grid-xs-1-30",
                                    "grid-xs-10": "MuiGrid-grid-xs-10-39",
                                    "grid-xs-11": "MuiGrid-grid-xs-11-40",
                                    "grid-xs-12": "MuiGrid-grid-xs-12-41",
                                    "grid-xs-2": "MuiGrid-grid-xs-2-31",
                                    "grid-xs-3": "MuiGrid-grid-xs-3-32",
                                    "grid-xs-4": "MuiGrid-grid-xs-4-33",
                                    "grid-xs-5": "MuiGrid-grid-xs-5-34",
                                    "grid-xs-6": "MuiGrid-grid-xs-6-35",
                                    "grid-xs-7": "MuiGrid-grid-xs-7-36",
                                    "grid-xs-8": "MuiGrid-grid-xs-8-37",
                                    "grid-xs-9": "MuiGrid-grid-xs-9-38",
                                    "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                                    "grid-xs-true": "MuiGrid-grid-xs-true-29",
                                    "item": "MuiGrid-item-2",
                                    "justify-xs-center": "MuiGrid-justify-xs-center-18",
                                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                                    "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                                    "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                                    "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                                    "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                                    "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                                    "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                                  }
                                }
                                component="div"
                                container={true}
                                direction="row"
                                item={false}
                                justify="flex-start"
                                lg={false}
                                md={false}
                                sm={false}
                                spacing={8}
                                style={
                                  Object {
                                    "marginTop": 8,
                                  }
                                }
                                wrap="wrap"
                                xl={false}
                                xs={false}
                                zeroMinWidth={false}
                              >
                                <div
                                  className="MuiGrid-container-1 MuiGrid-spacing-xs-8-23"
                                  style={
                                    Object {
                                      "marginTop": 8,
                                    }
                                  }
                                >
                                  <WithStyles(Grid)
                                    item={true}
                                    style={
                                      Object {
                                        "marginBottom": 8,
                                      }
                                    }
                                    xs={6}
                                  >
                                    <Grid
                                      alignContent="stretch"
                                      alignItems="stretch"
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                                          "container": "MuiGrid-container-1",
                                          "direction-xs-column": "MuiGrid-direction-xs-column-4",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                                          "grid-lg-1": "MuiGrid-grid-lg-1-72",
                                          "grid-lg-10": "MuiGrid-grid-lg-10-81",
                                          "grid-lg-11": "MuiGrid-grid-lg-11-82",
                                          "grid-lg-12": "MuiGrid-grid-lg-12-83",
                                          "grid-lg-2": "MuiGrid-grid-lg-2-73",
                                          "grid-lg-3": "MuiGrid-grid-lg-3-74",
                                          "grid-lg-4": "MuiGrid-grid-lg-4-75",
                                          "grid-lg-5": "MuiGrid-grid-lg-5-76",
                                          "grid-lg-6": "MuiGrid-grid-lg-6-77",
                                          "grid-lg-7": "MuiGrid-grid-lg-7-78",
                                          "grid-lg-8": "MuiGrid-grid-lg-8-79",
                                          "grid-lg-9": "MuiGrid-grid-lg-9-80",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                                          "grid-lg-true": "MuiGrid-grid-lg-true-71",
                                          "grid-md-1": "MuiGrid-grid-md-1-58",
                                          "grid-md-10": "MuiGrid-grid-md-10-67",
                                          "grid-md-11": "MuiGrid-grid-md-11-68",
                                          "grid-md-12": "MuiGrid-grid-md-12-69",
                                          "grid-md-2": "MuiGrid-grid-md-2-59",
                                          "grid-md-3": "MuiGrid-grid-md-3-60",
                                          "grid-md-4": "MuiGrid-grid-md-4-61",
                                          "grid-md-5": "MuiGrid-grid-md-5-62",
                                          "grid-md-6": "MuiGrid-grid-md-6-63",
                                          "grid-md-7": "MuiGrid-grid-md-7-64",
                                          "grid-md-8": "MuiGrid-grid-md-8-65",
                                          "grid-md-9": "MuiGrid-grid-md-9-66",
                                          "grid-md-auto": "MuiGrid-grid-md-auto-56",
                                          "grid-md-true": "MuiGrid-grid-md-true-57",
                                          "grid-sm-1": "MuiGrid-grid-sm-1-44",
                                          "grid-sm-10": "MuiGrid-grid-sm-10-53",
                                          "grid-sm-11": "MuiGrid-grid-sm-11-54",
                                          "grid-sm-12": "MuiGrid-grid-sm-12-55",
                                          "grid-sm-2": "MuiGrid-grid-sm-2-45",
                                          "grid-sm-3": "MuiGrid-grid-sm-3-46",
                                          "grid-sm-4": "MuiGrid-grid-sm-4-47",
                                          "grid-sm-5": "MuiGrid-grid-sm-5-48",
                                          "grid-sm-6": "MuiGrid-grid-sm-6-49",
                                          "grid-sm-7": "MuiGrid-grid-sm-7-50",
                                          "grid-sm-8": "MuiGrid-grid-sm-8-51",
                                          "grid-sm-9": "MuiGrid-grid-sm-9-52",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                                          "grid-sm-true": "MuiGrid-grid-sm-true-43",
                                          "grid-xl-1": "MuiGrid-grid-xl-1-86",
                                          "grid-xl-10": "MuiGrid-grid-xl-10-95",
                                          "grid-xl-11": "MuiGrid-grid-xl-11-96",
                                          "grid-xl-12": "MuiGrid-grid-xl-12-97",
                                          "grid-xl-2": "MuiGrid-grid-xl-2-87",
                                          "grid-xl-3": "MuiGrid-grid-xl-3-88",
                                          "grid-xl-4": "MuiGrid-grid-xl-4-89",
                                          "grid-xl-5": "MuiGrid-grid-xl-5-90",
                                          "grid-xl-6": "MuiGrid-grid-xl-6-91",
                                          "grid-xl-7": "MuiGrid-grid-xl-7-92",
                                          "grid-xl-8": "MuiGrid-grid-xl-8-93",
                                          "grid-xl-9": "MuiGrid-grid-xl-9-94",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                                          "grid-xl-true": "MuiGrid-grid-xl-true-85",
                                          "grid-xs-1": "MuiGrid-grid-xs-1-30",
                                          "grid-xs-10": "MuiGrid-grid-xs-10-39",
                                          "grid-xs-11": "MuiGrid-grid-xs-11-40",
                                          "grid-xs-12": "MuiGrid-grid-xs-12-41",
                                          "grid-xs-2": "MuiGrid-grid-xs-2-31",
                                          "grid-xs-3": "MuiGrid-grid-xs-3-32",
                                          "grid-xs-4": "MuiGrid-grid-xs-4-33",
                                          "grid-xs-5": "MuiGrid-grid-xs-5-34",
                                          "grid-xs-6": "MuiGrid-grid-xs-6-35",
                                          "grid-xs-7": "MuiGrid-grid-xs-7-36",
                                          "grid-xs-8": "MuiGrid-grid-xs-8-37",
                                          "grid-xs-9": "MuiGrid-grid-xs-9-38",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                                          "grid-xs-true": "MuiGrid-grid-xs-true-29",
                                          "item": "MuiGrid-item-2",
                                          "justify-xs-center": "MuiGrid-justify-xs-center-18",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                                          "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                                          "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                                          "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                                          "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                                        }
                                      }
                                      component="div"
                                      container={false}
                                      direction="row"
                                      item={true}
                                      justify="flex-start"
                                      lg={false}
                                      md={false}
                                      sm={false}
                                      spacing={0}
                                      style={
                                        Object {
                                          "marginBottom": 8,
                                        }
                                      }
                                      wrap="wrap"
                                      xl={false}
                                      xs={6}
                                      zeroMinWidth={false}
                                    >
                                      <div
                                        className="MuiGrid-item-2 MuiGrid-grid-xs-6-35"
                                        style={
                                          Object {
                                            "marginBottom": 8,
                                          }
                                        }
                                      >
                                        <WithStyles(Button)
                                          color="primary"
                                          disabled={true}
                                          fullWidth={true}
                                          id="submit-author"
                                          onClick={[Function]}
                                          variant="contained"
                                        >
                                          <Button
                                            classes={
                                              Object {
                                                "colorInherit": "MuiButton-colorInherit-191",
                                                "contained": "MuiButton-contained-181",
                                                "containedPrimary": "MuiButton-containedPrimary-182",
                                                "containedSecondary": "MuiButton-containedSecondary-183",
                                                "disabled": "MuiButton-disabled-190",
                                                "extendedFab": "MuiButton-extendedFab-188",
                                                "fab": "MuiButton-fab-187",
                                                "flat": "MuiButton-flat-175",
                                                "flatPrimary": "MuiButton-flatPrimary-176",
                                                "flatSecondary": "MuiButton-flatSecondary-177",
                                                "focusVisible": "MuiButton-focusVisible-189",
                                                "fullWidth": "MuiButton-fullWidth-195",
                                                "label": "MuiButton-label-171",
                                                "mini": "MuiButton-mini-192",
                                                "outlined": "MuiButton-outlined-178",
                                                "outlinedPrimary": "MuiButton-outlinedPrimary-179",
                                                "outlinedSecondary": "MuiButton-outlinedSecondary-180",
                                                "raised": "MuiButton-raised-184",
                                                "raisedPrimary": "MuiButton-raisedPrimary-185",
                                                "raisedSecondary": "MuiButton-raisedSecondary-186",
                                                "root": "MuiButton-root-170",
                                                "sizeLarge": "MuiButton-sizeLarge-194",
                                                "sizeSmall": "MuiButton-sizeSmall-193",
                                                "text": "MuiButton-text-172",
                                                "textPrimary": "MuiButton-textPrimary-173",
                                                "textSecondary": "MuiButton-textSecondary-174",
                                              }
                                            }
                                            color="primary"
                                            component="button"
                                            disableFocusRipple={false}
                                            disabled={true}
                                            fullWidth={true}
                                            id="submit-author"
                                            mini={false}
                                            onClick={[Function]}
                                            size="medium"
                                            type="button"
                                            variant="contained"
                                          >
                                            <WithStyles(ButtonBase)
                                              className="MuiButton-root-170 MuiButton-contained-181 MuiButton-containedPrimary-182 MuiButton-raised-184 MuiButton-raisedPrimary-185 MuiButton-disabled-190 MuiButton-fullWidth-195"
                                              component="button"
                                              disabled={true}
                                              focusRipple={true}
                                              focusVisibleClassName="MuiButton-focusVisible-189"
                                              id="submit-author"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <ButtonBase
                                                centerRipple={false}
                                                className="MuiButton-root-170 MuiButton-contained-181 MuiButton-containedPrimary-182 MuiButton-raised-184 MuiButton-raisedPrimary-185 MuiButton-disabled-190 MuiButton-fullWidth-195"
                                                classes={
                                                  Object {
                                                    "disabled": "MuiButtonBase-disabled-197",
                                                    "focusVisible": "MuiButtonBase-focusVisible-198",
                                                    "root": "MuiButtonBase-root-196",
                                                  }
                                                }
                                                component="button"
                                                disableRipple={false}
                                                disableTouchRipple={false}
                                                disabled={true}
                                                focusRipple={true}
                                                focusVisibleClassName="MuiButton-focusVisible-189"
                                                id="submit-author"
                                                onClick={[Function]}
                                                tabIndex="0"
                                                type="button"
                                              >
                                                <button
                                                  className="MuiButtonBase-root-196 MuiButtonBase-disabled-197 MuiButton-root-170 MuiButton-contained-181 MuiButton-containedPrimary-182 MuiButton-raised-184 MuiButton-raisedPrimary-185 MuiButton-disabled-190 MuiButton-fullWidth-195"
                                                  disabled={true}
                                                  id="submit-author"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onContextMenu={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex="-1"
                                                  type="button"
                                                >
                                                  <span
                                                    className="MuiButton-label-171"
                                                  >
                                                    Add author
                                                  </span>
                                                </button>
                                              </ButtonBase>
                                            </WithStyles(ButtonBase)>
                                          </Button>
                                        </WithStyles(Button)>
                                      </div>
                                    </Grid>
                                  </WithStyles(Grid)>
                                  <WithStyles(Grid)
                                    item={true}
                                    style={
                                      Object {
                                        "marginBottom": 8,
                                      }
                                    }
                                    xs={6}
                                  >
                                    <Grid
                                      alignContent="stretch"
                                      alignItems="stretch"
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                                          "container": "MuiGrid-container-1",
                                          "direction-xs-column": "MuiGrid-direction-xs-column-4",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                                          "grid-lg-1": "MuiGrid-grid-lg-1-72",
                                          "grid-lg-10": "MuiGrid-grid-lg-10-81",
                                          "grid-lg-11": "MuiGrid-grid-lg-11-82",
                                          "grid-lg-12": "MuiGrid-grid-lg-12-83",
                                          "grid-lg-2": "MuiGrid-grid-lg-2-73",
                                          "grid-lg-3": "MuiGrid-grid-lg-3-74",
                                          "grid-lg-4": "MuiGrid-grid-lg-4-75",
                                          "grid-lg-5": "MuiGrid-grid-lg-5-76",
                                          "grid-lg-6": "MuiGrid-grid-lg-6-77",
                                          "grid-lg-7": "MuiGrid-grid-lg-7-78",
                                          "grid-lg-8": "MuiGrid-grid-lg-8-79",
                                          "grid-lg-9": "MuiGrid-grid-lg-9-80",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                                          "grid-lg-true": "MuiGrid-grid-lg-true-71",
                                          "grid-md-1": "MuiGrid-grid-md-1-58",
                                          "grid-md-10": "MuiGrid-grid-md-10-67",
                                          "grid-md-11": "MuiGrid-grid-md-11-68",
                                          "grid-md-12": "MuiGrid-grid-md-12-69",
                                          "grid-md-2": "MuiGrid-grid-md-2-59",
                                          "grid-md-3": "MuiGrid-grid-md-3-60",
                                          "grid-md-4": "MuiGrid-grid-md-4-61",
                                          "grid-md-5": "MuiGrid-grid-md-5-62",
                                          "grid-md-6": "MuiGrid-grid-md-6-63",
                                          "grid-md-7": "MuiGrid-grid-md-7-64",
                                          "grid-md-8": "MuiGrid-grid-md-8-65",
                                          "grid-md-9": "MuiGrid-grid-md-9-66",
                                          "grid-md-auto": "MuiGrid-grid-md-auto-56",
                                          "grid-md-true": "MuiGrid-grid-md-true-57",
                                          "grid-sm-1": "MuiGrid-grid-sm-1-44",
                                          "grid-sm-10": "MuiGrid-grid-sm-10-53",
                                          "grid-sm-11": "MuiGrid-grid-sm-11-54",
                                          "grid-sm-12": "MuiGrid-grid-sm-12-55",
                                          "grid-sm-2": "MuiGrid-grid-sm-2-45",
                                          "grid-sm-3": "MuiGrid-grid-sm-3-46",
                                          "grid-sm-4": "MuiGrid-grid-sm-4-47",
                                          "grid-sm-5": "MuiGrid-grid-sm-5-48",
                                          "grid-sm-6": "MuiGrid-grid-sm-6-49",
                                          "grid-sm-7": "MuiGrid-grid-sm-7-50",
                                          "grid-sm-8": "MuiGrid-grid-sm-8-51",
                                          "grid-sm-9": "MuiGrid-grid-sm-9-52",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                                          "grid-sm-true": "MuiGrid-grid-sm-true-43",
                                          "grid-xl-1": "MuiGrid-grid-xl-1-86",
                                          "grid-xl-10": "MuiGrid-grid-xl-10-95",
                                          "grid-xl-11": "MuiGrid-grid-xl-11-96",
                                          "grid-xl-12": "MuiGrid-grid-xl-12-97",
                                          "grid-xl-2": "MuiGrid-grid-xl-2-87",
                                          "grid-xl-3": "MuiGrid-grid-xl-3-88",
                                          "grid-xl-4": "MuiGrid-grid-xl-4-89",
                                          "grid-xl-5": "MuiGrid-grid-xl-5-90",
                                          "grid-xl-6": "MuiGrid-grid-xl-6-91",
                                          "grid-xl-7": "MuiGrid-grid-xl-7-92",
                                          "grid-xl-8": "MuiGrid-grid-xl-8-93",
                                          "grid-xl-9": "MuiGrid-grid-xl-9-94",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                                          "grid-xl-true": "MuiGrid-grid-xl-true-85",
                                          "grid-xs-1": "MuiGrid-grid-xs-1-30",
                                          "grid-xs-10": "MuiGrid-grid-xs-10-39",
                                          "grid-xs-11": "MuiGrid-grid-xs-11-40",
                                          "grid-xs-12": "MuiGrid-grid-xs-12-41",
                                          "grid-xs-2": "MuiGrid-grid-xs-2-31",
                                          "grid-xs-3": "MuiGrid-grid-xs-3-32",
                                          "grid-xs-4": "MuiGrid-grid-xs-4-33",
                                          "grid-xs-5": "MuiGrid-grid-xs-5-34",
                                          "grid-xs-6": "MuiGrid-grid-xs-6-35",
                                          "grid-xs-7": "MuiGrid-grid-xs-7-36",
                                          "grid-xs-8": "MuiGrid-grid-xs-8-37",
                                          "grid-xs-9": "MuiGrid-grid-xs-9-38",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                                          "grid-xs-true": "MuiGrid-grid-xs-true-29",
                                          "item": "MuiGrid-item-2",
                                          "justify-xs-center": "MuiGrid-justify-xs-center-18",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                                          "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                                          "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                                          "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                                          "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                                        }
                                      }
                                      component="div"
                                      container={false}
                                      direction="row"
                                      item={true}
                                      justify="flex-start"
                                      lg={false}
                                      md={false}
                                      sm={false}
                                      spacing={0}
                                      style={
                                        Object {
                                          "marginBottom": 8,
                                        }
                                      }
                                      wrap="wrap"
                                      xl={false}
                                      xs={6}
                                      zeroMinWidth={false}
                                    >
                                      <div
                                        className="MuiGrid-item-2 MuiGrid-grid-xs-6-35"
                                        style={
                                          Object {
                                            "marginBottom": 8,
                                          }
                                        }
                                      >
                                        <WithStyles(Button)
                                          color="primary"
                                          disabled={true}
                                          fullWidth={true}
                                          id="cancel-submit-author"
                                          onClick={[Function]}
                                          variant="contained"
                                        >
                                          <Button
                                            classes={
                                              Object {
                                                "colorInherit": "MuiButton-colorInherit-191",
                                                "contained": "MuiButton-contained-181",
                                                "containedPrimary": "MuiButton-containedPrimary-182",
                                                "containedSecondary": "MuiButton-containedSecondary-183",
                                                "disabled": "MuiButton-disabled-190",
                                                "extendedFab": "MuiButton-extendedFab-188",
                                                "fab": "MuiButton-fab-187",
                                                "flat": "MuiButton-flat-175",
                                                "flatPrimary": "MuiButton-flatPrimary-176",
                                                "flatSecondary": "MuiButton-flatSecondary-177",
                                                "focusVisible": "MuiButton-focusVisible-189",
                                                "fullWidth": "MuiButton-fullWidth-195",
                                                "label": "MuiButton-label-171",
                                                "mini": "MuiButton-mini-192",
                                                "outlined": "MuiButton-outlined-178",
                                                "outlinedPrimary": "MuiButton-outlinedPrimary-179",
                                                "outlinedSecondary": "MuiButton-outlinedSecondary-180",
                                                "raised": "MuiButton-raised-184",
                                                "raisedPrimary": "MuiButton-raisedPrimary-185",
                                                "raisedSecondary": "MuiButton-raisedSecondary-186",
                                                "root": "MuiButton-root-170",
                                                "sizeLarge": "MuiButton-sizeLarge-194",
                                                "sizeSmall": "MuiButton-sizeSmall-193",
                                                "text": "MuiButton-text-172",
                                                "textPrimary": "MuiButton-textPrimary-173",
                                                "textSecondary": "MuiButton-textSecondary-174",
                                              }
                                            }
                                            color="primary"
                                            component="button"
                                            disableFocusRipple={false}
                                            disabled={true}
                                            fullWidth={true}
                                            id="cancel-submit-author"
                                            mini={false}
                                            onClick={[Function]}
                                            size="medium"
                                            type="button"
                                            variant="contained"
                                          >
                                            <WithStyles(ButtonBase)
                                              className="MuiButton-root-170 MuiButton-contained-181 MuiButton-containedPrimary-182 MuiButton-raised-184 MuiButton-raisedPrimary-185 MuiButton-disabled-190 MuiButton-fullWidth-195"
                                              component="button"
                                              disabled={true}
                                              focusRipple={true}
                                              focusVisibleClassName="MuiButton-focusVisible-189"
                                              id="cancel-submit-author"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <ButtonBase
                                                centerRipple={false}
                                                className="MuiButton-root-170 MuiButton-contained-181 MuiButton-containedPrimary-182 MuiButton-raised-184 MuiButton-raisedPrimary-185 MuiButton-disabled-190 MuiButton-fullWidth-195"
                                                classes={
                                                  Object {
                                                    "disabled": "MuiButtonBase-disabled-197",
                                                    "focusVisible": "MuiButtonBase-focusVisible-198",
                                                    "root": "MuiButtonBase-root-196",
                                                  }
                                                }
                                                component="button"
                                                disableRipple={false}
                                                disableTouchRipple={false}
                                                disabled={true}
                                                focusRipple={true}
                                                focusVisibleClassName="MuiButton-focusVisible-189"
                                                id="cancel-submit-author"
                                                onClick={[Function]}
                                                tabIndex="0"
                                                type="button"
                                              >
                                                <button
                                                  className="MuiButtonBase-root-196 MuiButtonBase-disabled-197 MuiButton-root-170 MuiButton-contained-181 MuiButton-containedPrimary-182 MuiButton-raised-184 MuiButton-raisedPrimary-185 MuiButton-disabled-190 MuiButton-fullWidth-195"
                                                  disabled={true}
                                                  id="cancel-submit-author"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onContextMenu={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex="-1"
                                                  type="button"
                                                >
                                                  <span
                                                    className="MuiButton-label-171"
                                                  >
                                                    Cancel
                                                  </span>
                                                </button>
                                              </ButtonBase>
                                            </WithStyles(ButtonBase)>
                                          </Button>
                                        </WithStyles(Button)>
                                      </div>
                                    </Grid>
                                  </WithStyles(Grid)>
                                </div>
                              </Grid>
                            </WithStyles(Grid)>
                          </ContributorForm>
                        </div>
                      </Grid>
                    </WithStyles(Grid)>
                  </div>
                </Grid>
              </WithStyles(Grid)>
            </div>
          </ContributorsEditor>
        </MuiPickersUtilsProvider>
      </MuiThemeProviderOld>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`ContributorsEditor renders full component with NTRO fields 1`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Immutable.Map {},
          },
          Object {
            "type": "return",
            "value": Immutable.Map {},
          },
        ],
      },
      "subscribe": [MockFunction] {
        "calls": Array [
          Array [
            [Function],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <MuiThemeProviderOld
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "graphs": Object {
              "color1": "#d72865",
              "color2": "#1e7d94",
              "color3": "#49075E",
              "color4": "#468fcc",
              "color5": "#f28620",
              "color6": "#333333",
              "color7": "#595959",
            },
            "hexToRGBA": [Function],
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {
              "MUIDataTable": Object {
                "paper": Object {
                  "boxShadow": "none",
                  "margin": 0,
                  "padding": 0,
                },
              },
              "MuiFormLabel": Object {
                "root": Object {
                  "overflow": "hidden",
                  "textOverflow": "ellipsis",
                  "whiteSpace": "nowrap",
                  "width": "100%",
                },
              },
              "MuiMenuItem": Object {
                "root": Object {
                  "&$selected": Object {
                    "backgroundColor": "#4085C6 !important",
                    "color": "#FFFFFF",
                  },
                },
              },
            },
            "palette": Object {
              "accent": Object {
                "dark": "#2a557d",
                "light": "#54acff",
                "main": "#316799",
              },
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#790000",
                "light": "#ff0000",
                "main": "#c80000",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#3b1a59",
                "gradient": Object {
                  "diagonal": Object {
                    "background": "linear-gradient(135deg, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                  "horizontal": Object {
                    "background": "linear-gradient(to right, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                },
                "light": "#962A8B",
                "main": "#51247A",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#333333",
                "light": "#f2f2f2",
                "main": "#595959",
              },
              "success": Object {
                "dark": "#005000",
                "light": "#00a700",
                "main": "#007200",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
              "warning": Object {
                "dark": "#542400",
                "light": "#ff9a57",
                "main": "#bf5000",
              },
              "white": Object {
                "main": "#FFFFFF",
              },
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "status": Object {
              "danger": "#f44336",
              "warning": "#ff9800",
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body1Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "body2Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "buttonNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.75,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "captionNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 300,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 300,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 200,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 200,
              "fontWeightMedium": 400,
              "fontWeightRegular": 300,
              "h1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 200,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1,
              },
              "h2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 200,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1,
              },
              "h3": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.04,
              },
              "h4": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.17,
              },
              "h5": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.33,
              },
              "h6": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 400,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "lineHeight": "1.35417em",
              },
              "overline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "lineHeight": "1.5em",
              },
              "subtitle1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
              "suppressDeprecationWarnings": true,
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.3125rem",
                "fontWeight": 400,
                "lineHeight": "1.16667em",
              },
              "useNextVariants": true,
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
      >
        <MuiPickersUtilsProvider
          utils={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
        >
          <ContributorsEditor
            author={
              Object {
                "aut_id": 1,
              }
            }
            canEdit={false}
            classes={
              Object {
                "list": "list",
                "scroll": "scroll",
              }
            }
            editMode={false}
            hideDelete={false}
            hideReorder={false}
            isNtro={true}
            locale={
              Object {
                "errorMessage": "Unable to add an item with the same identifier.",
                "errorTitle": "Error",
              }
            }
            showContributorAssignment={false}
            showIdentifierLookup={false}
            showRoleInput={false}
          >
            <div>
              <WithStyles(Grid)
                container={true}
                spacing={8}
              >
                <Grid
                  alignContent="stretch"
                  alignItems="stretch"
                  classes={
                    Object {
                      "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                      "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                      "container": "MuiGrid-container-1",
                      "direction-xs-column": "MuiGrid-direction-xs-column-4",
                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                      "grid-lg-1": "MuiGrid-grid-lg-1-72",
                      "grid-lg-10": "MuiGrid-grid-lg-10-81",
                      "grid-lg-11": "MuiGrid-grid-lg-11-82",
                      "grid-lg-12": "MuiGrid-grid-lg-12-83",
                      "grid-lg-2": "MuiGrid-grid-lg-2-73",
                      "grid-lg-3": "MuiGrid-grid-lg-3-74",
                      "grid-lg-4": "MuiGrid-grid-lg-4-75",
                      "grid-lg-5": "MuiGrid-grid-lg-5-76",
                      "grid-lg-6": "MuiGrid-grid-lg-6-77",
                      "grid-lg-7": "MuiGrid-grid-lg-7-78",
                      "grid-lg-8": "MuiGrid-grid-lg-8-79",
                      "grid-lg-9": "MuiGrid-grid-lg-9-80",
                      "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                      "grid-lg-true": "MuiGrid-grid-lg-true-71",
                      "grid-md-1": "MuiGrid-grid-md-1-58",
                      "grid-md-10": "MuiGrid-grid-md-10-67",
                      "grid-md-11": "MuiGrid-grid-md-11-68",
                      "grid-md-12": "MuiGrid-grid-md-12-69",
                      "grid-md-2": "MuiGrid-grid-md-2-59",
                      "grid-md-3": "MuiGrid-grid-md-3-60",
                      "grid-md-4": "MuiGrid-grid-md-4-61",
                      "grid-md-5": "MuiGrid-grid-md-5-62",
                      "grid-md-6": "MuiGrid-grid-md-6-63",
                      "grid-md-7": "MuiGrid-grid-md-7-64",
                      "grid-md-8": "MuiGrid-grid-md-8-65",
                      "grid-md-9": "MuiGrid-grid-md-9-66",
                      "grid-md-auto": "MuiGrid-grid-md-auto-56",
                      "grid-md-true": "MuiGrid-grid-md-true-57",
                      "grid-sm-1": "MuiGrid-grid-sm-1-44",
                      "grid-sm-10": "MuiGrid-grid-sm-10-53",
                      "grid-sm-11": "MuiGrid-grid-sm-11-54",
                      "grid-sm-12": "MuiGrid-grid-sm-12-55",
                      "grid-sm-2": "MuiGrid-grid-sm-2-45",
                      "grid-sm-3": "MuiGrid-grid-sm-3-46",
                      "grid-sm-4": "MuiGrid-grid-sm-4-47",
                      "grid-sm-5": "MuiGrid-grid-sm-5-48",
                      "grid-sm-6": "MuiGrid-grid-sm-6-49",
                      "grid-sm-7": "MuiGrid-grid-sm-7-50",
                      "grid-sm-8": "MuiGrid-grid-sm-8-51",
                      "grid-sm-9": "MuiGrid-grid-sm-9-52",
                      "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                      "grid-sm-true": "MuiGrid-grid-sm-true-43",
                      "grid-xl-1": "MuiGrid-grid-xl-1-86",
                      "grid-xl-10": "MuiGrid-grid-xl-10-95",
                      "grid-xl-11": "MuiGrid-grid-xl-11-96",
                      "grid-xl-12": "MuiGrid-grid-xl-12-97",
                      "grid-xl-2": "MuiGrid-grid-xl-2-87",
                      "grid-xl-3": "MuiGrid-grid-xl-3-88",
                      "grid-xl-4": "MuiGrid-grid-xl-4-89",
                      "grid-xl-5": "MuiGrid-grid-xl-5-90",
                      "grid-xl-6": "MuiGrid-grid-xl-6-91",
                      "grid-xl-7": "MuiGrid-grid-xl-7-92",
                      "grid-xl-8": "MuiGrid-grid-xl-8-93",
                      "grid-xl-9": "MuiGrid-grid-xl-9-94",
                      "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                      "grid-xl-true": "MuiGrid-grid-xl-true-85",
                      "grid-xs-1": "MuiGrid-grid-xs-1-30",
                      "grid-xs-10": "MuiGrid-grid-xs-10-39",
                      "grid-xs-11": "MuiGrid-grid-xs-11-40",
                      "grid-xs-12": "MuiGrid-grid-xs-12-41",
                      "grid-xs-2": "MuiGrid-grid-xs-2-31",
                      "grid-xs-3": "MuiGrid-grid-xs-3-32",
                      "grid-xs-4": "MuiGrid-grid-xs-4-33",
                      "grid-xs-5": "MuiGrid-grid-xs-5-34",
                      "grid-xs-6": "MuiGrid-grid-xs-6-35",
                      "grid-xs-7": "MuiGrid-grid-xs-7-36",
                      "grid-xs-8": "MuiGrid-grid-xs-8-37",
                      "grid-xs-9": "MuiGrid-grid-xs-9-38",
                      "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                      "grid-xs-true": "MuiGrid-grid-xs-true-29",
                      "item": "MuiGrid-item-2",
                      "justify-xs-center": "MuiGrid-justify-xs-center-18",
                      "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                      "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                      "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                      "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                      "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                      "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                      "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                      "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                      "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                      "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                    }
                  }
                  component="div"
                  container={true}
                  direction="row"
                  item={false}
                  justify="flex-start"
                  lg={false}
                  md={false}
                  sm={false}
                  spacing={8}
                  wrap="wrap"
                  xl={false}
                  xs={false}
                  zeroMinWidth={false}
                >
                  <div
                    className="MuiGrid-container-1 MuiGrid-spacing-xs-8-23"
                  >
                    <WithStyles(Grid)
                      item={true}
                      xs={12}
                    >
                      <Grid
                        alignContent="stretch"
                        alignItems="stretch"
                        classes={
                          Object {
                            "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                            "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                            "container": "MuiGrid-container-1",
                            "direction-xs-column": "MuiGrid-direction-xs-column-4",
                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                            "grid-lg-1": "MuiGrid-grid-lg-1-72",
                            "grid-lg-10": "MuiGrid-grid-lg-10-81",
                            "grid-lg-11": "MuiGrid-grid-lg-11-82",
                            "grid-lg-12": "MuiGrid-grid-lg-12-83",
                            "grid-lg-2": "MuiGrid-grid-lg-2-73",
                            "grid-lg-3": "MuiGrid-grid-lg-3-74",
                            "grid-lg-4": "MuiGrid-grid-lg-4-75",
                            "grid-lg-5": "MuiGrid-grid-lg-5-76",
                            "grid-lg-6": "MuiGrid-grid-lg-6-77",
                            "grid-lg-7": "MuiGrid-grid-lg-7-78",
                            "grid-lg-8": "MuiGrid-grid-lg-8-79",
                            "grid-lg-9": "MuiGrid-grid-lg-9-80",
                            "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                            "grid-lg-true": "MuiGrid-grid-lg-true-71",
                            "grid-md-1": "MuiGrid-grid-md-1-58",
                            "grid-md-10": "MuiGrid-grid-md-10-67",
                            "grid-md-11": "MuiGrid-grid-md-11-68",
                            "grid-md-12": "MuiGrid-grid-md-12-69",
                            "grid-md-2": "MuiGrid-grid-md-2-59",
                            "grid-md-3": "MuiGrid-grid-md-3-60",
                            "grid-md-4": "MuiGrid-grid-md-4-61",
                            "grid-md-5": "MuiGrid-grid-md-5-62",
                            "grid-md-6": "MuiGrid-grid-md-6-63",
                            "grid-md-7": "MuiGrid-grid-md-7-64",
                            "grid-md-8": "MuiGrid-grid-md-8-65",
                            "grid-md-9": "MuiGrid-grid-md-9-66",
                            "grid-md-auto": "MuiGrid-grid-md-auto-56",
                            "grid-md-true": "MuiGrid-grid-md-true-57",
                            "grid-sm-1": "MuiGrid-grid-sm-1-44",
                            "grid-sm-10": "MuiGrid-grid-sm-10-53",
                            "grid-sm-11": "MuiGrid-grid-sm-11-54",
                            "grid-sm-12": "MuiGrid-grid-sm-12-55",
                            "grid-sm-2": "MuiGrid-grid-sm-2-45",
                            "grid-sm-3": "MuiGrid-grid-sm-3-46",
                            "grid-sm-4": "MuiGrid-grid-sm-4-47",
                            "grid-sm-5": "MuiGrid-grid-sm-5-48",
                            "grid-sm-6": "MuiGrid-grid-sm-6-49",
                            "grid-sm-7": "MuiGrid-grid-sm-7-50",
                            "grid-sm-8": "MuiGrid-grid-sm-8-51",
                            "grid-sm-9": "MuiGrid-grid-sm-9-52",
                            "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                            "grid-sm-true": "MuiGrid-grid-sm-true-43",
                            "grid-xl-1": "MuiGrid-grid-xl-1-86",
                            "grid-xl-10": "MuiGrid-grid-xl-10-95",
                            "grid-xl-11": "MuiGrid-grid-xl-11-96",
                            "grid-xl-12": "MuiGrid-grid-xl-12-97",
                            "grid-xl-2": "MuiGrid-grid-xl-2-87",
                            "grid-xl-3": "MuiGrid-grid-xl-3-88",
                            "grid-xl-4": "MuiGrid-grid-xl-4-89",
                            "grid-xl-5": "MuiGrid-grid-xl-5-90",
                            "grid-xl-6": "MuiGrid-grid-xl-6-91",
                            "grid-xl-7": "MuiGrid-grid-xl-7-92",
                            "grid-xl-8": "MuiGrid-grid-xl-8-93",
                            "grid-xl-9": "MuiGrid-grid-xl-9-94",
                            "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                            "grid-xl-true": "MuiGrid-grid-xl-true-85",
                            "grid-xs-1": "MuiGrid-grid-xs-1-30",
                            "grid-xs-10": "MuiGrid-grid-xs-10-39",
                            "grid-xs-11": "MuiGrid-grid-xs-11-40",
                            "grid-xs-12": "MuiGrid-grid-xs-12-41",
                            "grid-xs-2": "MuiGrid-grid-xs-2-31",
                            "grid-xs-3": "MuiGrid-grid-xs-3-32",
                            "grid-xs-4": "MuiGrid-grid-xs-4-33",
                            "grid-xs-5": "MuiGrid-grid-xs-5-34",
                            "grid-xs-6": "MuiGrid-grid-xs-6-35",
                            "grid-xs-7": "MuiGrid-grid-xs-7-36",
                            "grid-xs-8": "MuiGrid-grid-xs-8-37",
                            "grid-xs-9": "MuiGrid-grid-xs-9-38",
                            "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                            "grid-xs-true": "MuiGrid-grid-xs-true-29",
                            "item": "MuiGrid-item-2",
                            "justify-xs-center": "MuiGrid-justify-xs-center-18",
                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                            "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                            "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                            "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                            "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                            "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                            "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                          }
                        }
                        component="div"
                        container={false}
                        direction="row"
                        item={true}
                        justify="flex-start"
                        lg={false}
                        md={false}
                        sm={false}
                        spacing={0}
                        wrap="wrap"
                        xl={false}
                        xs={12}
                        zeroMinWidth={false}
                      >
                        <div
                          className="MuiGrid-item-2 MuiGrid-grid-xs-12-41"
                        >
                          <ContributorForm
                            author={
                              Object {
                                "aut_id": 1,
                              }
                            }
                            canEdit={false}
                            classes={
                              Object {
                                "list": "list",
                                "scroll": "scroll",
                              }
                            }
                            contributor={Object {}}
                            disableNameAsPublished={false}
                            displayCancel={false}
                            editMode={false}
                            enableUqIdentifierOnAffiliationChange={true}
                            hideDelete={false}
                            hideReorder={false}
                            isContributorAssigned={false}
                            isNtro={true}
                            key="null"
                            locale={
                              Object {
                                "addButton": "Add author",
                                "creatorRoleHint": "Role of the creator in relation to the dataset",
                                "creatorRoleLabel": "Creator role",
                                "descriptionStep1": <div>
                                  <span
                                    className="authorSteps"
                                  >
                                    Step 1 of 2
                                  </span>
                                  - Please 
                                  <b>
                                    add to a list of contributors below
                                  </b>
                                  , in the format and order that they are published.
                                </div>,
                                "descriptionStep1NoStep2": <div>
                                  Please 
                                  <b>
                                    add to a list of contributors below
                                  </b>
                                  , in the format and order that they are published.
                                </div>,
                                "identifierLabel": "UQ identifier (if available)",
                                "nameAsPublishedHint": "Please type the name exactly as published",
                                "nameAsPublishedLabel": "Name as published",
                              }
                            }
                            onSubmit={[Function]}
                            required={false}
                            showContributorAssignment={false}
                            showIdentifierLookup={false}
                            showRoleInput={false}
                          >
                            <div>
                              Please 
                              <b>
                                add to a list of contributors below
                              </b>
                              , in the format and order that they are published.
                            </div>
                            <WithStyles(Grid)
                              container={true}
                              spacing={8}
                              style={
                                Object {
                                  "marginTop": 8,
                                }
                              }
                            >
                              <Grid
                                alignContent="stretch"
                                alignItems="stretch"
                                classes={
                                  Object {
                                    "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                                    "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                                    "container": "MuiGrid-container-1",
                                    "direction-xs-column": "MuiGrid-direction-xs-column-4",
                                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                                    "grid-lg-1": "MuiGrid-grid-lg-1-72",
                                    "grid-lg-10": "MuiGrid-grid-lg-10-81",
                                    "grid-lg-11": "MuiGrid-grid-lg-11-82",
                                    "grid-lg-12": "MuiGrid-grid-lg-12-83",
                                    "grid-lg-2": "MuiGrid-grid-lg-2-73",
                                    "grid-lg-3": "MuiGrid-grid-lg-3-74",
                                    "grid-lg-4": "MuiGrid-grid-lg-4-75",
                                    "grid-lg-5": "MuiGrid-grid-lg-5-76",
                                    "grid-lg-6": "MuiGrid-grid-lg-6-77",
                                    "grid-lg-7": "MuiGrid-grid-lg-7-78",
                                    "grid-lg-8": "MuiGrid-grid-lg-8-79",
                                    "grid-lg-9": "MuiGrid-grid-lg-9-80",
                                    "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                                    "grid-lg-true": "MuiGrid-grid-lg-true-71",
                                    "grid-md-1": "MuiGrid-grid-md-1-58",
                                    "grid-md-10": "MuiGrid-grid-md-10-67",
                                    "grid-md-11": "MuiGrid-grid-md-11-68",
                                    "grid-md-12": "MuiGrid-grid-md-12-69",
                                    "grid-md-2": "MuiGrid-grid-md-2-59",
                                    "grid-md-3": "MuiGrid-grid-md-3-60",
                                    "grid-md-4": "MuiGrid-grid-md-4-61",
                                    "grid-md-5": "MuiGrid-grid-md-5-62",
                                    "grid-md-6": "MuiGrid-grid-md-6-63",
                                    "grid-md-7": "MuiGrid-grid-md-7-64",
                                    "grid-md-8": "MuiGrid-grid-md-8-65",
                                    "grid-md-9": "MuiGrid-grid-md-9-66",
                                    "grid-md-auto": "MuiGrid-grid-md-auto-56",
                                    "grid-md-true": "MuiGrid-grid-md-true-57",
                                    "grid-sm-1": "MuiGrid-grid-sm-1-44",
                                    "grid-sm-10": "MuiGrid-grid-sm-10-53",
                                    "grid-sm-11": "MuiGrid-grid-sm-11-54",
                                    "grid-sm-12": "MuiGrid-grid-sm-12-55",
                                    "grid-sm-2": "MuiGrid-grid-sm-2-45",
                                    "grid-sm-3": "MuiGrid-grid-sm-3-46",
                                    "grid-sm-4": "MuiGrid-grid-sm-4-47",
                                    "grid-sm-5": "MuiGrid-grid-sm-5-48",
                                    "grid-sm-6": "MuiGrid-grid-sm-6-49",
                                    "grid-sm-7": "MuiGrid-grid-sm-7-50",
                                    "grid-sm-8": "MuiGrid-grid-sm-8-51",
                                    "grid-sm-9": "MuiGrid-grid-sm-9-52",
                                    "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                                    "grid-sm-true": "MuiGrid-grid-sm-true-43",
                                    "grid-xl-1": "MuiGrid-grid-xl-1-86",
                                    "grid-xl-10": "MuiGrid-grid-xl-10-95",
                                    "grid-xl-11": "MuiGrid-grid-xl-11-96",
                                    "grid-xl-12": "MuiGrid-grid-xl-12-97",
                                    "grid-xl-2": "MuiGrid-grid-xl-2-87",
                                    "grid-xl-3": "MuiGrid-grid-xl-3-88",
                                    "grid-xl-4": "MuiGrid-grid-xl-4-89",
                                    "grid-xl-5": "MuiGrid-grid-xl-5-90",
                                    "grid-xl-6": "MuiGrid-grid-xl-6-91",
                                    "grid-xl-7": "MuiGrid-grid-xl-7-92",
                                    "grid-xl-8": "MuiGrid-grid-xl-8-93",
                                    "grid-xl-9": "MuiGrid-grid-xl-9-94",
                                    "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                                    "grid-xl-true": "MuiGrid-grid-xl-true-85",
                                    "grid-xs-1": "MuiGrid-grid-xs-1-30",
                                    "grid-xs-10": "MuiGrid-grid-xs-10-39",
                                    "grid-xs-11": "MuiGrid-grid-xs-11-40",
                                    "grid-xs-12": "MuiGrid-grid-xs-12-41",
                                    "grid-xs-2": "MuiGrid-grid-xs-2-31",
                                    "grid-xs-3": "MuiGrid-grid-xs-3-32",
                                    "grid-xs-4": "MuiGrid-grid-xs-4-33",
                                    "grid-xs-5": "MuiGrid-grid-xs-5-34",
                                    "grid-xs-6": "MuiGrid-grid-xs-6-35",
                                    "grid-xs-7": "MuiGrid-grid-xs-7-36",
                                    "grid-xs-8": "MuiGrid-grid-xs-8-37",
                                    "grid-xs-9": "MuiGrid-grid-xs-9-38",
                                    "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                                    "grid-xs-true": "MuiGrid-grid-xs-true-29",
                                    "item": "MuiGrid-item-2",
                                    "justify-xs-center": "MuiGrid-justify-xs-center-18",
                                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                                    "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                                    "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                                    "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                                    "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                                    "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                                    "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                                  }
                                }
                                component="div"
                                container={true}
                                direction="row"
                                item={false}
                                justify="flex-start"
                                lg={false}
                                md={false}
                                sm={false}
                                spacing={8}
                                style={
                                  Object {
                                    "marginTop": 8,
                                  }
                                }
                                wrap="wrap"
                                xl={false}
                                xs={false}
                                zeroMinWidth={false}
                              >
                                <div
                                  className="MuiGrid-container-1 MuiGrid-spacing-xs-8-23"
                                  style={
                                    Object {
                                      "marginTop": 8,
                                    }
                                  }
                                >
                                  <WithStyles(Grid)
                                    item={true}
                                    sm={2}
                                    xs={12}
                                  >
                                    <Grid
                                      alignContent="stretch"
                                      alignItems="stretch"
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                                          "container": "MuiGrid-container-1",
                                          "direction-xs-column": "MuiGrid-direction-xs-column-4",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                                          "grid-lg-1": "MuiGrid-grid-lg-1-72",
                                          "grid-lg-10": "MuiGrid-grid-lg-10-81",
                                          "grid-lg-11": "MuiGrid-grid-lg-11-82",
                                          "grid-lg-12": "MuiGrid-grid-lg-12-83",
                                          "grid-lg-2": "MuiGrid-grid-lg-2-73",
                                          "grid-lg-3": "MuiGrid-grid-lg-3-74",
                                          "grid-lg-4": "MuiGrid-grid-lg-4-75",
                                          "grid-lg-5": "MuiGrid-grid-lg-5-76",
                                          "grid-lg-6": "MuiGrid-grid-lg-6-77",
                                          "grid-lg-7": "MuiGrid-grid-lg-7-78",
                                          "grid-lg-8": "MuiGrid-grid-lg-8-79",
                                          "grid-lg-9": "MuiGrid-grid-lg-9-80",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                                          "grid-lg-true": "MuiGrid-grid-lg-true-71",
                                          "grid-md-1": "MuiGrid-grid-md-1-58",
                                          "grid-md-10": "MuiGrid-grid-md-10-67",
                                          "grid-md-11": "MuiGrid-grid-md-11-68",
                                          "grid-md-12": "MuiGrid-grid-md-12-69",
                                          "grid-md-2": "MuiGrid-grid-md-2-59",
                                          "grid-md-3": "MuiGrid-grid-md-3-60",
                                          "grid-md-4": "MuiGrid-grid-md-4-61",
                                          "grid-md-5": "MuiGrid-grid-md-5-62",
                                          "grid-md-6": "MuiGrid-grid-md-6-63",
                                          "grid-md-7": "MuiGrid-grid-md-7-64",
                                          "grid-md-8": "MuiGrid-grid-md-8-65",
                                          "grid-md-9": "MuiGrid-grid-md-9-66",
                                          "grid-md-auto": "MuiGrid-grid-md-auto-56",
                                          "grid-md-true": "MuiGrid-grid-md-true-57",
                                          "grid-sm-1": "MuiGrid-grid-sm-1-44",
                                          "grid-sm-10": "MuiGrid-grid-sm-10-53",
                                          "grid-sm-11": "MuiGrid-grid-sm-11-54",
                                          "grid-sm-12": "MuiGrid-grid-sm-12-55",
                                          "grid-sm-2": "MuiGrid-grid-sm-2-45",
                                          "grid-sm-3": "MuiGrid-grid-sm-3-46",
                                          "grid-sm-4": "MuiGrid-grid-sm-4-47",
                                          "grid-sm-5": "MuiGrid-grid-sm-5-48",
                                          "grid-sm-6": "MuiGrid-grid-sm-6-49",
                                          "grid-sm-7": "MuiGrid-grid-sm-7-50",
                                          "grid-sm-8": "MuiGrid-grid-sm-8-51",
                                          "grid-sm-9": "MuiGrid-grid-sm-9-52",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                                          "grid-sm-true": "MuiGrid-grid-sm-true-43",
                                          "grid-xl-1": "MuiGrid-grid-xl-1-86",
                                          "grid-xl-10": "MuiGrid-grid-xl-10-95",
                                          "grid-xl-11": "MuiGrid-grid-xl-11-96",
                                          "grid-xl-12": "MuiGrid-grid-xl-12-97",
                                          "grid-xl-2": "MuiGrid-grid-xl-2-87",
                                          "grid-xl-3": "MuiGrid-grid-xl-3-88",
                                          "grid-xl-4": "MuiGrid-grid-xl-4-89",
                                          "grid-xl-5": "MuiGrid-grid-xl-5-90",
                                          "grid-xl-6": "MuiGrid-grid-xl-6-91",
                                          "grid-xl-7": "MuiGrid-grid-xl-7-92",
                                          "grid-xl-8": "MuiGrid-grid-xl-8-93",
                                          "grid-xl-9": "MuiGrid-grid-xl-9-94",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                                          "grid-xl-true": "MuiGrid-grid-xl-true-85",
                                          "grid-xs-1": "MuiGrid-grid-xs-1-30",
                                          "grid-xs-10": "MuiGrid-grid-xs-10-39",
                                          "grid-xs-11": "MuiGrid-grid-xs-11-40",
                                          "grid-xs-12": "MuiGrid-grid-xs-12-41",
                                          "grid-xs-2": "MuiGrid-grid-xs-2-31",
                                          "grid-xs-3": "MuiGrid-grid-xs-3-32",
                                          "grid-xs-4": "MuiGrid-grid-xs-4-33",
                                          "grid-xs-5": "MuiGrid-grid-xs-5-34",
                                          "grid-xs-6": "MuiGrid-grid-xs-6-35",
                                          "grid-xs-7": "MuiGrid-grid-xs-7-36",
                                          "grid-xs-8": "MuiGrid-grid-xs-8-37",
                                          "grid-xs-9": "MuiGrid-grid-xs-9-38",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                                          "grid-xs-true": "MuiGrid-grid-xs-true-29",
                                          "item": "MuiGrid-item-2",
                                          "justify-xs-center": "MuiGrid-justify-xs-center-18",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                                          "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                                          "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                                          "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                                          "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                                        }
                                      }
                                      component="div"
                                      container={false}
                                      direction="row"
                                      item={true}
                                      justify="flex-start"
                                      lg={false}
                                      md={false}
                                      sm={2}
                                      spacing={0}
                                      wrap="wrap"
                                      xl={false}
                                      xs={12}
                                      zeroMinWidth={false}
                                    >
                                      <div
                                        className="MuiGrid-item-2 MuiGrid-grid-xs-12-41 MuiGrid-grid-sm-2-45"
                                      >
                                        <OrgAffilicationTypeSelector
                                          affiliation=""
                                          error={false}
                                          locale={
                                            Object {
                                              "inputLabel": "Org affiliation",
                                              "options": Array [
                                                Object {
                                                  "key": "UQ",
                                                  "value": "UQ",
                                                },
                                                Object {
                                                  "key": "NotUQ",
                                                  "value": "Not UQ",
                                                },
                                              ],
                                              "placeholder": "Organisational affiliation at time of publication",
                                            }
                                          }
                                          onAffiliationChange={[Function]}
                                        >
                                          <WithStyles(FormControl)
                                            fullWidth={true}
                                          >
                                            <FormControl
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth-101",
                                                  "marginDense": "MuiFormControl-marginDense-100",
                                                  "marginNormal": "MuiFormControl-marginNormal-99",
                                                  "root": "MuiFormControl-root-98",
                                                }
                                              }
                                              component="div"
                                              disabled={false}
                                              error={false}
                                              fullWidth={true}
                                              margin="none"
                                              required={false}
                                              variant="standard"
                                            >
                                              <div
                                                className="MuiFormControl-root-98 MuiFormControl-fullWidth-101"
                                              >
                                                <WithStyles(WithFormControlContext(InputLabel))>
                                                  <WithFormControlContext(InputLabel)
                                                    classes={
                                                      Object {
                                                        "animated": "MuiInputLabel-animated-110",
                                                        "disabled": "MuiInputLabel-disabled-104",
                                                        "error": "MuiInputLabel-error-105",
                                                        "filled": "MuiInputLabel-filled-111",
                                                        "focused": "MuiInputLabel-focused-103",
                                                        "formControl": "MuiInputLabel-formControl-107",
                                                        "marginDense": "MuiInputLabel-marginDense-108",
                                                        "outlined": "MuiInputLabel-outlined-112",
                                                        "required": "MuiInputLabel-required-106",
                                                        "root": "MuiInputLabel-root-102",
                                                        "shrink": "MuiInputLabel-shrink-109",
                                                      }
                                                    }
                                                  >
                                                    <InputLabel
                                                      classes={
                                                        Object {
                                                          "animated": "MuiInputLabel-animated-110",
                                                          "disabled": "MuiInputLabel-disabled-104",
                                                          "error": "MuiInputLabel-error-105",
                                                          "filled": "MuiInputLabel-filled-111",
                                                          "focused": "MuiInputLabel-focused-103",
                                                          "formControl": "MuiInputLabel-formControl-107",
                                                          "marginDense": "MuiInputLabel-marginDense-108",
                                                          "outlined": "MuiInputLabel-outlined-112",
                                                          "required": "MuiInputLabel-required-106",
                                                          "root": "MuiInputLabel-root-102",
                                                          "shrink": "MuiInputLabel-shrink-109",
                                                        }
                                                      }
                                                      disableAnimation={false}
                                                      muiFormControl={
                                                        Object {
                                                          "adornedStart": false,
                                                          "disabled": false,
                                                          "error": false,
                                                          "filled": false,
                                                          "focused": false,
                                                          "margin": "none",
                                                          "onBlur": [Function],
                                                          "onEmpty": [Function],
                                                          "onFilled": [Function],
                                                          "onFocus": [Function],
                                                          "required": false,
                                                          "variant": "standard",
                                                        }
                                                      }
                                                    >
                                                      <WithStyles(WithFormControlContext(FormLabel))
                                                        className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                        classes={
                                                          Object {
                                                            "disabled": "MuiInputLabel-disabled-104",
                                                            "error": "MuiInputLabel-error-105",
                                                            "focused": "MuiInputLabel-focused-103",
                                                            "required": "MuiInputLabel-required-106",
                                                          }
                                                        }
                                                        data-shrink={false}
                                                      >
                                                        <WithFormControlContext(FormLabel)
                                                          className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                          classes={
                                                            Object {
                                                              "asterisk": "MuiFormLabel-asterisk-119",
                                                              "disabled": "MuiFormLabel-disabled-115 MuiInputLabel-disabled-104",
                                                              "error": "MuiFormLabel-error-116 MuiInputLabel-error-105",
                                                              "filled": "MuiFormLabel-filled-117",
                                                              "focused": "MuiFormLabel-focused-114 MuiInputLabel-focused-103",
                                                              "required": "MuiFormLabel-required-118 MuiInputLabel-required-106",
                                                              "root": "MuiFormLabel-root-113",
                                                            }
                                                          }
                                                          data-shrink={false}
                                                        >
                                                          <FormLabel
                                                            className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                            classes={
                                                              Object {
                                                                "asterisk": "MuiFormLabel-asterisk-119",
                                                                "disabled": "MuiFormLabel-disabled-115 MuiInputLabel-disabled-104",
                                                                "error": "MuiFormLabel-error-116 MuiInputLabel-error-105",
                                                                "filled": "MuiFormLabel-filled-117",
                                                                "focused": "MuiFormLabel-focused-114 MuiInputLabel-focused-103",
                                                                "required": "MuiFormLabel-required-118 MuiInputLabel-required-106",
                                                                "root": "MuiFormLabel-root-113",
                                                              }
                                                            }
                                                            component="label"
                                                            data-shrink={false}
                                                            muiFormControl={
                                                              Object {
                                                                "adornedStart": false,
                                                                "disabled": false,
                                                                "error": false,
                                                                "filled": false,
                                                                "focused": false,
                                                                "margin": "none",
                                                                "onBlur": [Function],
                                                                "onEmpty": [Function],
                                                                "onFilled": [Function],
                                                                "onFocus": [Function],
                                                                "required": false,
                                                                "variant": "standard",
                                                              }
                                                            }
                                                          >
                                                            <label
                                                              className="MuiFormLabel-root-113 MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                              data-shrink={false}
                                                            >
                                                              Org affiliation
                                                            </label>
                                                          </FormLabel>
                                                        </WithFormControlContext(FormLabel)>
                                                      </WithStyles(WithFormControlContext(FormLabel))>
                                                    </InputLabel>
                                                  </WithFormControlContext(InputLabel)>
                                                </WithStyles(WithFormControlContext(InputLabel))>
                                                <WithStyles(WithFormControlContext(Select))
                                                  SelectDisplayProps={
                                                    Object {
                                                      "id": "org-affiliation-selector",
                                                    }
                                                  }
                                                  error={false}
                                                  onChange={[Function]}
                                                  required={true}
                                                  value=""
                                                >
                                                  <WithFormControlContext(Select)
                                                    SelectDisplayProps={
                                                      Object {
                                                        "id": "org-affiliation-selector",
                                                      }
                                                    }
                                                    classes={
                                                      Object {
                                                        "disabled": "MuiSelect-disabled-125",
                                                        "filled": "MuiSelect-filled-122",
                                                        "icon": "MuiSelect-icon-126",
                                                        "outlined": "MuiSelect-outlined-123",
                                                        "root": "MuiSelect-root-120",
                                                        "select": "MuiSelect-select-121",
                                                        "selectMenu": "MuiSelect-selectMenu-124",
                                                      }
                                                    }
                                                    error={false}
                                                    onChange={[Function]}
                                                    required={true}
                                                    value=""
                                                  >
                                                    <Select
                                                      IconComponent={[Function]}
                                                      SelectDisplayProps={
                                                        Object {
                                                          "id": "org-affiliation-selector",
                                                        }
                                                      }
                                                      autoWidth={false}
                                                      classes={
                                                        Object {
                                                          "disabled": "MuiSelect-disabled-125",
                                                          "filled": "MuiSelect-filled-122",
                                                          "icon": "MuiSelect-icon-126",
                                                          "outlined": "MuiSelect-outlined-123",
                                                          "root": "MuiSelect-root-120",
                                                          "select": "MuiSelect-select-121",
                                                          "selectMenu": "MuiSelect-selectMenu-124",
                                                        }
                                                      }
                                                      displayEmpty={false}
                                                      error={false}
                                                      input={<WithStyles(Input) />}
                                                      muiFormControl={
                                                        Object {
                                                          "adornedStart": false,
                                                          "disabled": false,
                                                          "error": false,
                                                          "filled": false,
                                                          "focused": false,
                                                          "margin": "none",
                                                          "onBlur": [Function],
                                                          "onEmpty": [Function],
                                                          "onFilled": [Function],
                                                          "onFocus": [Function],
                                                          "required": false,
                                                          "variant": "standard",
                                                        }
                                                      }
                                                      multiple={false}
                                                      native={false}
                                                      onChange={[Function]}
                                                      required={true}
                                                      value=""
                                                    >
                                                      <WithStyles(Input)
                                                        error={false}
                                                        inputComponent={[Function]}
                                                        inputProps={
                                                          Object {
                                                            "IconComponent": [Function],
                                                            "MenuProps": undefined,
                                                            "SelectDisplayProps": Object {
                                                              "id": "org-affiliation-selector",
                                                            },
                                                            "autoWidth": false,
                                                            "children": Array [
                                                              <WithStyles(MenuItem)
                                                                disabled={true}
                                                                value=""
                                                              >
                                                                Organisational affiliation at time of publication
                                                              </WithStyles(MenuItem)>,
                                                              Array [
                                                                <WithStyles(MenuItem)
                                                                  value="UQ"
                                                                >
                                                                  UQ
                                                                </WithStyles(MenuItem)>,
                                                                <WithStyles(MenuItem)
                                                                  value="NotUQ"
                                                                >
                                                                  Not UQ
                                                                </WithStyles(MenuItem)>,
                                                              ],
                                                            ],
                                                            "classes": Object {
                                                              "disabled": "MuiSelect-disabled-125",
                                                              "filled": "MuiSelect-filled-122",
                                                              "icon": "MuiSelect-icon-126",
                                                              "outlined": "MuiSelect-outlined-123",
                                                              "root": "MuiSelect-root-120",
                                                              "select": "MuiSelect-select-121",
                                                              "selectMenu": "MuiSelect-selectMenu-124",
                                                            },
                                                            "displayEmpty": false,
                                                            "multiple": false,
                                                            "onClose": undefined,
                                                            "onOpen": undefined,
                                                            "open": undefined,
                                                            "renderValue": undefined,
                                                            "type": undefined,
                                                            "variant": "standard",
                                                          }
                                                        }
                                                        onChange={[Function]}
                                                        required={true}
                                                        value=""
                                                      >
                                                        <Input
                                                          classes={
                                                            Object {
                                                              "disabled": "MuiInput-disabled-130",
                                                              "error": "MuiInput-error-132",
                                                              "focused": "MuiInput-focused-129",
                                                              "formControl": "MuiInput-formControl-128",
                                                              "fullWidth": "MuiInput-fullWidth-134",
                                                              "input": "MuiInput-input-135",
                                                              "inputMarginDense": "MuiInput-inputMarginDense-136",
                                                              "inputMultiline": "MuiInput-inputMultiline-137",
                                                              "inputType": "MuiInput-inputType-138",
                                                              "inputTypeSearch": "MuiInput-inputTypeSearch-139",
                                                              "multiline": "MuiInput-multiline-133",
                                                              "root": "MuiInput-root-127",
                                                              "underline": "MuiInput-underline-131",
                                                            }
                                                          }
                                                          error={false}
                                                          inputComponent={[Function]}
                                                          inputProps={
                                                            Object {
                                                              "IconComponent": [Function],
                                                              "MenuProps": undefined,
                                                              "SelectDisplayProps": Object {
                                                                "id": "org-affiliation-selector",
                                                              },
                                                              "autoWidth": false,
                                                              "children": Array [
                                                                <WithStyles(MenuItem)
                                                                  disabled={true}
                                                                  value=""
                                                                >
                                                                  Organisational affiliation at time of publication
                                                                </WithStyles(MenuItem)>,
                                                                Array [
                                                                  <WithStyles(MenuItem)
                                                                    value="UQ"
                                                                  >
                                                                    UQ
                                                                  </WithStyles(MenuItem)>,
                                                                  <WithStyles(MenuItem)
                                                                    value="NotUQ"
                                                                  >
                                                                    Not UQ
                                                                  </WithStyles(MenuItem)>,
                                                                ],
                                                              ],
                                                              "classes": Object {
                                                                "disabled": "MuiSelect-disabled-125",
                                                                "filled": "MuiSelect-filled-122",
                                                                "icon": "MuiSelect-icon-126",
                                                                "outlined": "MuiSelect-outlined-123",
                                                                "root": "MuiSelect-root-120",
                                                                "select": "MuiSelect-select-121",
                                                                "selectMenu": "MuiSelect-selectMenu-124",
                                                              },
                                                              "displayEmpty": false,
                                                              "multiple": false,
                                                              "onClose": undefined,
                                                              "onOpen": undefined,
                                                              "open": undefined,
                                                              "renderValue": undefined,
                                                              "type": undefined,
                                                              "variant": "standard",
                                                            }
                                                          }
                                                          onChange={[Function]}
                                                          required={true}
                                                          value=""
                                                        >
                                                          <WithStyles(WithFormControlContext(InputBase))
                                                            classes={
                                                              Object {
                                                                "disabled": "MuiInput-disabled-130",
                                                                "error": "MuiInput-error-132",
                                                                "focused": "MuiInput-focused-129",
                                                                "formControl": "MuiInput-formControl-128",
                                                                "fullWidth": "MuiInput-fullWidth-134",
                                                                "input": "MuiInput-input-135",
                                                                "inputMarginDense": "MuiInput-inputMarginDense-136",
                                                                "inputMultiline": "MuiInput-inputMultiline-137",
                                                                "inputType": "MuiInput-inputType-138",
                                                                "inputTypeSearch": "MuiInput-inputTypeSearch-139",
                                                                "multiline": "MuiInput-multiline-133",
                                                                "root": "MuiInput-root-127 MuiInput-underline-131",
                                                                "underline": null,
                                                              }
                                                            }
                                                            error={false}
                                                            fullWidth={false}
                                                            inputComponent={[Function]}
                                                            inputProps={
                                                              Object {
                                                                "IconComponent": [Function],
                                                                "MenuProps": undefined,
                                                                "SelectDisplayProps": Object {
                                                                  "id": "org-affiliation-selector",
                                                                },
                                                                "autoWidth": false,
                                                                "children": Array [
                                                                  <WithStyles(MenuItem)
                                                                    disabled={true}
                                                                    value=""
                                                                  >
                                                                    Organisational affiliation at time of publication
                                                                  </WithStyles(MenuItem)>,
                                                                  Array [
                                                                    <WithStyles(MenuItem)
                                                                      value="UQ"
                                                                    >
                                                                      UQ
                                                                    </WithStyles(MenuItem)>,
                                                                    <WithStyles(MenuItem)
                                                                      value="NotUQ"
                                                                    >
                                                                      Not UQ
                                                                    </WithStyles(MenuItem)>,
                                                                  ],
                                                                ],
                                                                "classes": Object {
                                                                  "disabled": "MuiSelect-disabled-125",
                                                                  "filled": "MuiSelect-filled-122",
                                                                  "icon": "MuiSelect-icon-126",
                                                                  "outlined": "MuiSelect-outlined-123",
                                                                  "root": "MuiSelect-root-120",
                                                                  "select": "MuiSelect-select-121",
                                                                  "selectMenu": "MuiSelect-selectMenu-124",
                                                                },
                                                                "displayEmpty": false,
                                                                "multiple": false,
                                                                "onClose": undefined,
                                                                "onOpen": undefined,
                                                                "open": undefined,
                                                                "renderValue": undefined,
                                                                "type": undefined,
                                                                "variant": "standard",
                                                              }
                                                            }
                                                            multiline={false}
                                                            onChange={[Function]}
                                                            required={true}
                                                            type="text"
                                                            value=""
                                                          >
                                                            <WithFormControlContext(InputBase)
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiInputBase-adornedEnd-145",
                                                                  "adornedStart": "MuiInputBase-adornedStart-144",
                                                                  "disabled": "MuiInputBase-disabled-143 MuiInput-disabled-130",
                                                                  "error": "MuiInputBase-error-146 MuiInput-error-132",
                                                                  "focused": "MuiInputBase-focused-142 MuiInput-focused-129",
                                                                  "formControl": "MuiInputBase-formControl-141 MuiInput-formControl-128",
                                                                  "fullWidth": "MuiInputBase-fullWidth-149 MuiInput-fullWidth-134",
                                                                  "input": "MuiInputBase-input-150 MuiInput-input-135",
                                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-156",
                                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart-155",
                                                                  "inputMarginDense": "MuiInputBase-inputMarginDense-151 MuiInput-inputMarginDense-136",
                                                                  "inputMultiline": "MuiInputBase-inputMultiline-152 MuiInput-inputMultiline-137",
                                                                  "inputType": "MuiInputBase-inputType-153 MuiInput-inputType-138",
                                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch-154 MuiInput-inputTypeSearch-139",
                                                                  "marginDense": "MuiInputBase-marginDense-147",
                                                                  "multiline": "MuiInputBase-multiline-148 MuiInput-multiline-133",
                                                                  "root": "MuiInputBase-root-140 MuiInput-root-127 MuiInput-underline-131",
                                                                }
                                                              }
                                                              error={false}
                                                              fullWidth={false}
                                                              inputComponent={[Function]}
                                                              inputProps={
                                                                Object {
                                                                  "IconComponent": [Function],
                                                                  "MenuProps": undefined,
                                                                  "SelectDisplayProps": Object {
                                                                    "id": "org-affiliation-selector",
                                                                  },
                                                                  "autoWidth": false,
                                                                  "children": Array [
                                                                    <WithStyles(MenuItem)
                                                                      disabled={true}
                                                                      value=""
                                                                    >
                                                                      Organisational affiliation at time of publication
                                                                    </WithStyles(MenuItem)>,
                                                                    Array [
                                                                      <WithStyles(MenuItem)
                                                                        value="UQ"
                                                                      >
                                                                        UQ
                                                                      </WithStyles(MenuItem)>,
                                                                      <WithStyles(MenuItem)
                                                                        value="NotUQ"
                                                                      >
                                                                        Not UQ
                                                                      </WithStyles(MenuItem)>,
                                                                    ],
                                                                  ],
                                                                  "classes": Object {
                                                                    "disabled": "MuiSelect-disabled-125",
                                                                    "filled": "MuiSelect-filled-122",
                                                                    "icon": "MuiSelect-icon-126",
                                                                    "outlined": "MuiSelect-outlined-123",
                                                                    "root": "MuiSelect-root-120",
                                                                    "select": "MuiSelect-select-121",
                                                                    "selectMenu": "MuiSelect-selectMenu-124",
                                                                  },
                                                                  "displayEmpty": false,
                                                                  "multiple": false,
                                                                  "onClose": undefined,
                                                                  "onOpen": undefined,
                                                                  "open": undefined,
                                                                  "renderValue": undefined,
                                                                  "type": undefined,
                                                                  "variant": "standard",
                                                                }
                                                              }
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              required={true}
                                                              type="text"
                                                              value=""
                                                            >
                                                              <InputBase
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiInputBase-adornedEnd-145",
                                                                    "adornedStart": "MuiInputBase-adornedStart-144",
                                                                    "disabled": "MuiInputBase-disabled-143 MuiInput-disabled-130",
                                                                    "error": "MuiInputBase-error-146 MuiInput-error-132",
                                                                    "focused": "MuiInputBase-focused-142 MuiInput-focused-129",
                                                                    "formControl": "MuiInputBase-formControl-141 MuiInput-formControl-128",
                                                                    "fullWidth": "MuiInputBase-fullWidth-149 MuiInput-fullWidth-134",
                                                                    "input": "MuiInputBase-input-150 MuiInput-input-135",
                                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-156",
                                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart-155",
                                                                    "inputMarginDense": "MuiInputBase-inputMarginDense-151 MuiInput-inputMarginDense-136",
                                                                    "inputMultiline": "MuiInputBase-inputMultiline-152 MuiInput-inputMultiline-137",
                                                                    "inputType": "MuiInputBase-inputType-153 MuiInput-inputType-138",
                                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch-154 MuiInput-inputTypeSearch-139",
                                                                    "marginDense": "MuiInputBase-marginDense-147",
                                                                    "multiline": "MuiInputBase-multiline-148 MuiInput-multiline-133",
                                                                    "root": "MuiInputBase-root-140 MuiInput-root-127 MuiInput-underline-131",
                                                                  }
                                                                }
                                                                error={false}
                                                                fullWidth={false}
                                                                inputComponent={[Function]}
                                                                inputProps={
                                                                  Object {
                                                                    "IconComponent": [Function],
                                                                    "MenuProps": undefined,
                                                                    "SelectDisplayProps": Object {
                                                                      "id": "org-affiliation-selector",
                                                                    },
                                                                    "autoWidth": false,
                                                                    "children": Array [
                                                                      <WithStyles(MenuItem)
                                                                        disabled={true}
                                                                        value=""
                                                                      >
                                                                        Organisational affiliation at time of publication
                                                                      </WithStyles(MenuItem)>,
                                                                      Array [
                                                                        <WithStyles(MenuItem)
                                                                          value="UQ"
                                                                        >
                                                                          UQ
                                                                        </WithStyles(MenuItem)>,
                                                                        <WithStyles(MenuItem)
                                                                          value="NotUQ"
                                                                        >
                                                                          Not UQ
                                                                        </WithStyles(MenuItem)>,
                                                                      ],
                                                                    ],
                                                                    "classes": Object {
                                                                      "disabled": "MuiSelect-disabled-125",
                                                                      "filled": "MuiSelect-filled-122",
                                                                      "icon": "MuiSelect-icon-126",
                                                                      "outlined": "MuiSelect-outlined-123",
                                                                      "root": "MuiSelect-root-120",
                                                                      "select": "MuiSelect-select-121",
                                                                      "selectMenu": "MuiSelect-selectMenu-124",
                                                                    },
                                                                    "displayEmpty": false,
                                                                    "multiple": false,
                                                                    "onClose": undefined,
                                                                    "onOpen": undefined,
                                                                    "open": undefined,
                                                                    "renderValue": undefined,
                                                                    "type": undefined,
                                                                    "variant": "standard",
                                                                  }
                                                                }
                                                                muiFormControl={
                                                                  Object {
                                                                    "adornedStart": false,
                                                                    "disabled": false,
                                                                    "error": false,
                                                                    "filled": false,
                                                                    "focused": false,
                                                                    "margin": "none",
                                                                    "onBlur": [Function],
                                                                    "onEmpty": [Function],
                                                                    "onFilled": [Function],
                                                                    "onFocus": [Function],
                                                                    "required": false,
                                                                    "variant": "standard",
                                                                  }
                                                                }
                                                                multiline={false}
                                                                onChange={[Function]}
                                                                required={true}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <div
                                                                  className="MuiInputBase-root-140 MuiInput-root-127 MuiInput-underline-131 MuiInputBase-formControl-141 MuiInput-formControl-128"
                                                                  onClick={[Function]}
                                                                  required={true}
                                                                >
                                                                  <SelectInput
                                                                    IconComponent={[Function]}
                                                                    SelectDisplayProps={
                                                                      Object {
                                                                        "id": "org-affiliation-selector",
                                                                      }
                                                                    }
                                                                    aria-invalid={false}
                                                                    autoWidth={false}
                                                                    className="MuiInputBase-input-150 MuiInput-input-135"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "MuiSelect-disabled-125",
                                                                        "filled": "MuiSelect-filled-122",
                                                                        "icon": "MuiSelect-icon-126",
                                                                        "outlined": "MuiSelect-outlined-123",
                                                                        "root": "MuiSelect-root-120",
                                                                        "select": "MuiSelect-select-121",
                                                                        "selectMenu": "MuiSelect-selectMenu-124",
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    displayEmpty={false}
                                                                    inputRef={[Function]}
                                                                    multiple={false}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    required={true}
                                                                    value=""
                                                                    variant="standard"
                                                                  >
                                                                    <div
                                                                      className="MuiSelect-root-120"
                                                                    >
                                                                      <div
                                                                        aria-haspopup="true"
                                                                        aria-pressed="false"
                                                                        className="MuiSelect-select-121 MuiSelect-selectMenu-124 MuiInputBase-input-150 MuiInput-input-135"
                                                                        id="org-affiliation-selector"
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        role="button"
                                                                        tabIndex={0}
                                                                      >
                                                                        <span
                                                                          dangerouslySetInnerHTML={
                                                                            Object {
                                                                              "__html": "&#8203;",
                                                                            }
                                                                          }
                                                                        />
                                                                      </div>
                                                                      <input
                                                                        type="hidden"
                                                                        value=""
                                                                      />
                                                                      <pure(ArrowDropDown)
                                                                        className="MuiSelect-icon-126"
                                                                      >
                                                                        <ArrowDropDown
                                                                          className="MuiSelect-icon-126"
                                                                        >
                                                                          <WithStyles(SvgIcon)
                                                                            className="MuiSelect-icon-126"
                                                                          >
                                                                            <SvgIcon
                                                                              className="MuiSelect-icon-126"
                                                                              classes={
                                                                                Object {
                                                                                  "colorAction": "MuiSvgIcon-colorAction-160",
                                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-162",
                                                                                  "colorError": "MuiSvgIcon-colorError-161",
                                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-158",
                                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-159",
                                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-163",
                                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-165",
                                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-164",
                                                                                  "root": "MuiSvgIcon-root-157",
                                                                                }
                                                                              }
                                                                              color="inherit"
                                                                              component="svg"
                                                                              fontSize="default"
                                                                              viewBox="0 0 24 24"
                                                                            >
                                                                              <svg
                                                                                aria-hidden="true"
                                                                                className="MuiSvgIcon-root-157 MuiSelect-icon-126"
                                                                                focusable="false"
                                                                                role="presentation"
                                                                                viewBox="0 0 24 24"
                                                                              >
                                                                                <path
                                                                                  d="M7 10l5 5 5-5z"
                                                                                />
                                                                              </svg>
                                                                            </SvgIcon>
                                                                          </WithStyles(SvgIcon)>
                                                                        </ArrowDropDown>
                                                                      </pure(ArrowDropDown)>
                                                                      <WithStyles(Menu)
                                                                        MenuListProps={
                                                                          Object {
                                                                            "disableListWrap": true,
                                                                            "role": "listbox",
                                                                          }
                                                                        }
                                                                        PaperProps={
                                                                          Object {
                                                                            "style": Object {
                                                                              "minWidth": null,
                                                                            },
                                                                          }
                                                                        }
                                                                        id="menu-"
                                                                        onClose={[Function]}
                                                                        open={false}
                                                                      >
                                                                        <Menu
                                                                          MenuListProps={
                                                                            Object {
                                                                              "disableListWrap": true,
                                                                              "role": "listbox",
                                                                            }
                                                                          }
                                                                          PaperProps={
                                                                            Object {
                                                                              "style": Object {
                                                                                "minWidth": null,
                                                                              },
                                                                            }
                                                                          }
                                                                          classes={
                                                                            Object {
                                                                              "paper": "MuiMenu-paper-166",
                                                                            }
                                                                          }
                                                                          disableAutoFocusItem={false}
                                                                          id="menu-"
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                          theme={
                                                                            Object {
                                                                              "breakpoints": Object {
                                                                                "between": [Function],
                                                                                "down": [Function],
                                                                                "keys": Array [
                                                                                  "xs",
                                                                                  "sm",
                                                                                  "md",
                                                                                  "lg",
                                                                                  "xl",
                                                                                ],
                                                                                "only": [Function],
                                                                                "up": [Function],
                                                                                "values": Object {
                                                                                  "lg": 1280,
                                                                                  "md": 960,
                                                                                  "sm": 600,
                                                                                  "xl": 1920,
                                                                                  "xs": 0,
                                                                                },
                                                                                "width": [Function],
                                                                              },
                                                                              "direction": "ltr",
                                                                              "graphs": Object {
                                                                                "color1": "#d72865",
                                                                                "color2": "#1e7d94",
                                                                                "color3": "#49075E",
                                                                                "color4": "#468fcc",
                                                                                "color5": "#f28620",
                                                                                "color6": "#333333",
                                                                                "color7": "#595959",
                                                                              },
                                                                              "hexToRGBA": [Function],
                                                                              "mixins": Object {
                                                                                "gutters": [Function],
                                                                                "toolbar": Object {
                                                                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                                    "minHeight": 48,
                                                                                  },
                                                                                  "@media (min-width:600px)": Object {
                                                                                    "minHeight": 64,
                                                                                  },
                                                                                  "minHeight": 56,
                                                                                },
                                                                              },
                                                                              "overrides": Object {
                                                                                "MUIDataTable": Object {
                                                                                  "paper": Object {
                                                                                    "boxShadow": "none",
                                                                                    "margin": 0,
                                                                                    "padding": 0,
                                                                                  },
                                                                                },
                                                                                "MuiFormLabel": Object {
                                                                                  "root": Object {
                                                                                    "overflow": "hidden",
                                                                                    "textOverflow": "ellipsis",
                                                                                    "whiteSpace": "nowrap",
                                                                                    "width": "100%",
                                                                                  },
                                                                                },
                                                                                "MuiMenuItem": Object {
                                                                                  "root": Object {
                                                                                    "&$selected": Object {
                                                                                      "backgroundColor": "#4085C6 !important",
                                                                                      "color": "#FFFFFF",
                                                                                    },
                                                                                  },
                                                                                },
                                                                              },
                                                                              "palette": Object {
                                                                                "accent": Object {
                                                                                  "dark": "#2a557d",
                                                                                  "light": "#54acff",
                                                                                  "main": "#316799",
                                                                                },
                                                                                "action": Object {
                                                                                  "active": "rgba(0, 0, 0, 0.54)",
                                                                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                                                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                                  "hover": "rgba(0, 0, 0, 0.08)",
                                                                                  "hoverOpacity": 0.08,
                                                                                  "selected": "rgba(0, 0, 0, 0.14)",
                                                                                },
                                                                                "augmentColor": [Function],
                                                                                "background": Object {
                                                                                  "default": "#fafafa",
                                                                                  "paper": "#fff",
                                                                                },
                                                                                "common": Object {
                                                                                  "black": "#000",
                                                                                  "white": "#fff",
                                                                                },
                                                                                "contrastThreshold": 3,
                                                                                "divider": "rgba(0, 0, 0, 0.12)",
                                                                                "error": Object {
                                                                                  "contrastText": "#fff",
                                                                                  "dark": "#790000",
                                                                                  "light": "#ff0000",
                                                                                  "main": "#c80000",
                                                                                },
                                                                                "getContrastText": [Function],
                                                                                "grey": Object {
                                                                                  "100": "#f5f5f5",
                                                                                  "200": "#eeeeee",
                                                                                  "300": "#e0e0e0",
                                                                                  "400": "#bdbdbd",
                                                                                  "50": "#fafafa",
                                                                                  "500": "#9e9e9e",
                                                                                  "600": "#757575",
                                                                                  "700": "#616161",
                                                                                  "800": "#424242",
                                                                                  "900": "#212121",
                                                                                  "A100": "#d5d5d5",
                                                                                  "A200": "#aaaaaa",
                                                                                  "A400": "#303030",
                                                                                  "A700": "#616161",
                                                                                },
                                                                                "primary": Object {
                                                                                  "contrastText": "#fff",
                                                                                  "dark": "#3b1a59",
                                                                                  "gradient": Object {
                                                                                    "diagonal": Object {
                                                                                      "background": "linear-gradient(135deg, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                                                                                      "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                                                                                    },
                                                                                    "horizontal": Object {
                                                                                      "background": "linear-gradient(to right, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                                                                                      "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                                                                                    },
                                                                                  },
                                                                                  "light": "#962A8B",
                                                                                  "main": "#51247A",
                                                                                },
                                                                                "secondary": Object {
                                                                                  "contrastText": "#fff",
                                                                                  "dark": "#333333",
                                                                                  "light": "#f2f2f2",
                                                                                  "main": "#595959",
                                                                                },
                                                                                "success": Object {
                                                                                  "dark": "#005000",
                                                                                  "light": "#00a700",
                                                                                  "main": "#007200",
                                                                                },
                                                                                "text": Object {
                                                                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                                                                  "hint": "rgba(0, 0, 0, 0.38)",
                                                                                  "primary": "rgba(0, 0, 0, 0.87)",
                                                                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                                                                },
                                                                                "tonalOffset": 0.2,
                                                                                "type": "light",
                                                                                "warning": Object {
                                                                                  "dark": "#542400",
                                                                                  "light": "#ff9a57",
                                                                                  "main": "#bf5000",
                                                                                },
                                                                                "white": Object {
                                                                                  "main": "#FFFFFF",
                                                                                },
                                                                              },
                                                                              "props": Object {},
                                                                              "shadows": Array [
                                                                                "none",
                                                                                "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                                                                "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                                                                "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                                                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                              ],
                                                                              "shape": Object {
                                                                                "borderRadius": 4,
                                                                              },
                                                                              "spacing": Object {
                                                                                "unit": 8,
                                                                              },
                                                                              "status": Object {
                                                                                "danger": "#f44336",
                                                                                "warning": "#ff9800",
                                                                              },
                                                                              "transitions": Object {
                                                                                "create": [Function],
                                                                                "duration": Object {
                                                                                  "complex": 375,
                                                                                  "enteringScreen": 225,
                                                                                  "leavingScreen": 195,
                                                                                  "short": 250,
                                                                                  "shorter": 200,
                                                                                  "shortest": 150,
                                                                                  "standard": 300,
                                                                                },
                                                                                "easing": Object {
                                                                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                                },
                                                                                "getAutoHeightDuration": [Function],
                                                                              },
                                                                              "typography": Object {
                                                                                "body1": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "1rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0.00938em",
                                                                                  "lineHeight": 1.5,
                                                                                },
                                                                                "body1Next": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "1rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0.00938em",
                                                                                  "lineHeight": 1.5,
                                                                                },
                                                                                "body2": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "0.875rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0.01071em",
                                                                                  "lineHeight": 1.5,
                                                                                },
                                                                                "body2Next": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "0.875rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0.01071em",
                                                                                  "lineHeight": 1.5,
                                                                                },
                                                                                "button": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "0.875rem",
                                                                                  "fontWeight": 400,
                                                                                  "letterSpacing": "0.02857em",
                                                                                  "lineHeight": 1.75,
                                                                                  "textTransform": "uppercase",
                                                                                },
                                                                                "buttonNext": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "0.875rem",
                                                                                  "fontWeight": 400,
                                                                                  "letterSpacing": "0.02857em",
                                                                                  "lineHeight": 1.75,
                                                                                  "textTransform": "uppercase",
                                                                                },
                                                                                "caption": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "0.75rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0.03333em",
                                                                                  "lineHeight": 1.66,
                                                                                },
                                                                                "captionNext": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "0.75rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0.03333em",
                                                                                  "lineHeight": 1.66,
                                                                                },
                                                                                "display1": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.54)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "2.125rem",
                                                                                  "fontWeight": 300,
                                                                                  "lineHeight": "1.20588em",
                                                                                },
                                                                                "display2": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.54)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "2.8125rem",
                                                                                  "fontWeight": 300,
                                                                                  "lineHeight": "1.13333em",
                                                                                  "marginLeft": "-.02em",
                                                                                },
                                                                                "display3": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.54)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "3.5rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "-.02em",
                                                                                  "lineHeight": "1.30357em",
                                                                                  "marginLeft": "-.02em",
                                                                                },
                                                                                "display4": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.54)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "7rem",
                                                                                  "fontWeight": 200,
                                                                                  "letterSpacing": "-.04em",
                                                                                  "lineHeight": "1.14286em",
                                                                                  "marginLeft": "-.04em",
                                                                                },
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": 14,
                                                                                "fontWeightLight": 200,
                                                                                "fontWeightMedium": 400,
                                                                                "fontWeightRegular": 300,
                                                                                "h1": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "6rem",
                                                                                  "fontWeight": 200,
                                                                                  "letterSpacing": "-0.01562em",
                                                                                  "lineHeight": 1,
                                                                                },
                                                                                "h2": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "3.75rem",
                                                                                  "fontWeight": 200,
                                                                                  "letterSpacing": "-0.00833em",
                                                                                  "lineHeight": 1,
                                                                                },
                                                                                "h3": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "3rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0em",
                                                                                  "lineHeight": 1.04,
                                                                                },
                                                                                "h4": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "2.125rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0.00735em",
                                                                                  "lineHeight": 1.17,
                                                                                },
                                                                                "h5": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "1.5rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0em",
                                                                                  "lineHeight": 1.33,
                                                                                },
                                                                                "h6": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "1.25rem",
                                                                                  "fontWeight": 400,
                                                                                  "letterSpacing": "0.0075em",
                                                                                  "lineHeight": 1.6,
                                                                                },
                                                                                "headline": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "1.5rem",
                                                                                  "fontWeight": 300,
                                                                                  "lineHeight": "1.35417em",
                                                                                },
                                                                                "overline": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "0.75rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0.08333em",
                                                                                  "lineHeight": 2.66,
                                                                                  "textTransform": "uppercase",
                                                                                },
                                                                                "pxToRem": [Function],
                                                                                "round": [Function],
                                                                                "subheading": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "1rem",
                                                                                  "fontWeight": 300,
                                                                                  "lineHeight": "1.5em",
                                                                                },
                                                                                "subtitle1": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "1rem",
                                                                                  "fontWeight": 300,
                                                                                  "letterSpacing": "0.00938em",
                                                                                  "lineHeight": 1.75,
                                                                                },
                                                                                "subtitle2": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "0.875rem",
                                                                                  "fontWeight": 400,
                                                                                  "letterSpacing": "0.00714em",
                                                                                  "lineHeight": 1.57,
                                                                                },
                                                                                "suppressDeprecationWarnings": true,
                                                                                "title": Object {
                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                  "fontSize": "1.3125rem",
                                                                                  "fontWeight": 400,
                                                                                  "lineHeight": "1.16667em",
                                                                                },
                                                                                "useNextVariants": true,
                                                                              },
                                                                              "zIndex": Object {
                                                                                "appBar": 1100,
                                                                                "drawer": 1200,
                                                                                "mobileStepper": 1000,
                                                                                "modal": 1300,
                                                                                "snackbar": 1400,
                                                                                "tooltip": 1500,
                                                                              },
                                                                            }
                                                                          }
                                                                          transitionDuration="auto"
                                                                        >
                                                                          <WithStyles(Popover)
                                                                            PaperProps={
                                                                              Object {
                                                                                "classes": Object {
                                                                                  "root": "MuiMenu-paper-166",
                                                                                },
                                                                                "style": Object {
                                                                                  "minWidth": null,
                                                                                },
                                                                              }
                                                                            }
                                                                            anchorOrigin={
                                                                              Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                                            }
                                                                            getContentAnchorEl={[Function]}
                                                                            id="menu-"
                                                                            onClose={[Function]}
                                                                            onEntering={[Function]}
                                                                            open={false}
                                                                            transformOrigin={
                                                                              Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                                            }
                                                                            transitionDuration="auto"
                                                                          >
                                                                            <Popover
                                                                              PaperProps={
                                                                                Object {
                                                                                  "classes": Object {
                                                                                    "root": "MuiMenu-paper-166",
                                                                                  },
                                                                                  "style": Object {
                                                                                    "minWidth": null,
                                                                                  },
                                                                                }
                                                                              }
                                                                              TransitionComponent={[Function]}
                                                                              anchorOrigin={
                                                                                Object {
                                                                                  "horizontal": "left",
                                                                                  "vertical": "top",
                                                                                }
                                                                              }
                                                                              anchorReference="anchorEl"
                                                                              classes={
                                                                                Object {
                                                                                  "paper": "MuiPopover-paper-167",
                                                                                }
                                                                              }
                                                                              elevation={8}
                                                                              getContentAnchorEl={[Function]}
                                                                              id="menu-"
                                                                              marginThreshold={16}
                                                                              onClose={[Function]}
                                                                              onEntering={[Function]}
                                                                              open={false}
                                                                              transformOrigin={
                                                                                Object {
                                                                                  "horizontal": "left",
                                                                                  "vertical": "top",
                                                                                }
                                                                              }
                                                                              transitionDuration="auto"
                                                                            >
                                                                              <WithStyles(Modal)
                                                                                BackdropProps={
                                                                                  Object {
                                                                                    "invisible": true,
                                                                                  }
                                                                                }
                                                                                id="menu-"
                                                                                onClose={[Function]}
                                                                                open={false}
                                                                              >
                                                                                <Modal
                                                                                  BackdropComponent={[Function]}
                                                                                  BackdropProps={
                                                                                    Object {
                                                                                      "invisible": true,
                                                                                    }
                                                                                  }
                                                                                  classes={
                                                                                    Object {
                                                                                      "hidden": "MuiModal-hidden-169",
                                                                                      "root": "MuiModal-root-168",
                                                                                    }
                                                                                  }
                                                                                  closeAfterTransition={false}
                                                                                  disableAutoFocus={false}
                                                                                  disableBackdropClick={false}
                                                                                  disableEnforceFocus={false}
                                                                                  disableEscapeKeyDown={false}
                                                                                  disablePortal={false}
                                                                                  disableRestoreFocus={false}
                                                                                  hideBackdrop={false}
                                                                                  id="menu-"
                                                                                  keepMounted={false}
                                                                                  manager={
                                                                                    ModalManager {
                                                                                      "data": Array [],
                                                                                      "handleContainerOverflow": true,
                                                                                      "hideSiblingNodes": true,
                                                                                      "modals": Array [],
                                                                                    }
                                                                                  }
                                                                                  onClose={[Function]}
                                                                                  open={false}
                                                                                />
                                                                              </WithStyles(Modal)>
                                                                            </Popover>
                                                                          </WithStyles(Popover)>
                                                                        </Menu>
                                                                      </WithStyles(Menu)>
                                                                    </div>
                                                                  </SelectInput>
                                                                </div>
                                                              </InputBase>
                                                            </WithFormControlContext(InputBase)>
                                                          </WithStyles(WithFormControlContext(InputBase))>
                                                        </Input>
                                                      </WithStyles(Input)>
                                                    </Select>
                                                  </WithFormControlContext(Select)>
                                                </WithStyles(WithFormControlContext(Select))>
                                              </div>
                                            </FormControl>
                                          </WithStyles(FormControl)>
                                        </OrgAffilicationTypeSelector>
                                      </div>
                                    </Grid>
                                  </WithStyles(Grid)>
                                  <WithStyles(Grid)
                                    item={true}
                                    sm={true}
                                    xs={12}
                                  >
                                    <Grid
                                      alignContent="stretch"
                                      alignItems="stretch"
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                                          "container": "MuiGrid-container-1",
                                          "direction-xs-column": "MuiGrid-direction-xs-column-4",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                                          "grid-lg-1": "MuiGrid-grid-lg-1-72",
                                          "grid-lg-10": "MuiGrid-grid-lg-10-81",
                                          "grid-lg-11": "MuiGrid-grid-lg-11-82",
                                          "grid-lg-12": "MuiGrid-grid-lg-12-83",
                                          "grid-lg-2": "MuiGrid-grid-lg-2-73",
                                          "grid-lg-3": "MuiGrid-grid-lg-3-74",
                                          "grid-lg-4": "MuiGrid-grid-lg-4-75",
                                          "grid-lg-5": "MuiGrid-grid-lg-5-76",
                                          "grid-lg-6": "MuiGrid-grid-lg-6-77",
                                          "grid-lg-7": "MuiGrid-grid-lg-7-78",
                                          "grid-lg-8": "MuiGrid-grid-lg-8-79",
                                          "grid-lg-9": "MuiGrid-grid-lg-9-80",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                                          "grid-lg-true": "MuiGrid-grid-lg-true-71",
                                          "grid-md-1": "MuiGrid-grid-md-1-58",
                                          "grid-md-10": "MuiGrid-grid-md-10-67",
                                          "grid-md-11": "MuiGrid-grid-md-11-68",
                                          "grid-md-12": "MuiGrid-grid-md-12-69",
                                          "grid-md-2": "MuiGrid-grid-md-2-59",
                                          "grid-md-3": "MuiGrid-grid-md-3-60",
                                          "grid-md-4": "MuiGrid-grid-md-4-61",
                                          "grid-md-5": "MuiGrid-grid-md-5-62",
                                          "grid-md-6": "MuiGrid-grid-md-6-63",
                                          "grid-md-7": "MuiGrid-grid-md-7-64",
                                          "grid-md-8": "MuiGrid-grid-md-8-65",
                                          "grid-md-9": "MuiGrid-grid-md-9-66",
                                          "grid-md-auto": "MuiGrid-grid-md-auto-56",
                                          "grid-md-true": "MuiGrid-grid-md-true-57",
                                          "grid-sm-1": "MuiGrid-grid-sm-1-44",
                                          "grid-sm-10": "MuiGrid-grid-sm-10-53",
                                          "grid-sm-11": "MuiGrid-grid-sm-11-54",
                                          "grid-sm-12": "MuiGrid-grid-sm-12-55",
                                          "grid-sm-2": "MuiGrid-grid-sm-2-45",
                                          "grid-sm-3": "MuiGrid-grid-sm-3-46",
                                          "grid-sm-4": "MuiGrid-grid-sm-4-47",
                                          "grid-sm-5": "MuiGrid-grid-sm-5-48",
                                          "grid-sm-6": "MuiGrid-grid-sm-6-49",
                                          "grid-sm-7": "MuiGrid-grid-sm-7-50",
                                          "grid-sm-8": "MuiGrid-grid-sm-8-51",
                                          "grid-sm-9": "MuiGrid-grid-sm-9-52",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                                          "grid-sm-true": "MuiGrid-grid-sm-true-43",
                                          "grid-xl-1": "MuiGrid-grid-xl-1-86",
                                          "grid-xl-10": "MuiGrid-grid-xl-10-95",
                                          "grid-xl-11": "MuiGrid-grid-xl-11-96",
                                          "grid-xl-12": "MuiGrid-grid-xl-12-97",
                                          "grid-xl-2": "MuiGrid-grid-xl-2-87",
                                          "grid-xl-3": "MuiGrid-grid-xl-3-88",
                                          "grid-xl-4": "MuiGrid-grid-xl-4-89",
                                          "grid-xl-5": "MuiGrid-grid-xl-5-90",
                                          "grid-xl-6": "MuiGrid-grid-xl-6-91",
                                          "grid-xl-7": "MuiGrid-grid-xl-7-92",
                                          "grid-xl-8": "MuiGrid-grid-xl-8-93",
                                          "grid-xl-9": "MuiGrid-grid-xl-9-94",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                                          "grid-xl-true": "MuiGrid-grid-xl-true-85",
                                          "grid-xs-1": "MuiGrid-grid-xs-1-30",
                                          "grid-xs-10": "MuiGrid-grid-xs-10-39",
                                          "grid-xs-11": "MuiGrid-grid-xs-11-40",
                                          "grid-xs-12": "MuiGrid-grid-xs-12-41",
                                          "grid-xs-2": "MuiGrid-grid-xs-2-31",
                                          "grid-xs-3": "MuiGrid-grid-xs-3-32",
                                          "grid-xs-4": "MuiGrid-grid-xs-4-33",
                                          "grid-xs-5": "MuiGrid-grid-xs-5-34",
                                          "grid-xs-6": "MuiGrid-grid-xs-6-35",
                                          "grid-xs-7": "MuiGrid-grid-xs-7-36",
                                          "grid-xs-8": "MuiGrid-grid-xs-8-37",
                                          "grid-xs-9": "MuiGrid-grid-xs-9-38",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                                          "grid-xs-true": "MuiGrid-grid-xs-true-29",
                                          "item": "MuiGrid-item-2",
                                          "justify-xs-center": "MuiGrid-justify-xs-center-18",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                                          "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                                          "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                                          "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                                          "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                                        }
                                      }
                                      component="div"
                                      container={false}
                                      direction="row"
                                      item={true}
                                      justify="flex-start"
                                      lg={false}
                                      md={false}
                                      sm={true}
                                      spacing={0}
                                      wrap="wrap"
                                      xl={false}
                                      xs={12}
                                      zeroMinWidth={false}
                                    >
                                      <div
                                        className="MuiGrid-item-2 MuiGrid-grid-xs-12-41 MuiGrid-grid-sm-true-43"
                                      >
                                        <WithStyles(TextFieldWrapper)
                                          autoComplete="off"
                                          disabled={true}
                                          error={false}
                                          fullWidth={true}
                                          id="nameAsPublishedField"
                                          label="Name as published"
                                          onChange={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder="Please type the name exactly as published"
                                          required={false}
                                          value=""
                                        >
                                          <TextFieldWrapper
                                            autoComplete="off"
                                            classes={Object {}}
                                            disabled={true}
                                            error={false}
                                            fullWidth={true}
                                            id="nameAsPublishedField"
                                            label="Name as published"
                                            onChange={[Function]}
                                            onKeyDown={[Function]}
                                            placeholder="Please type the name exactly as published"
                                            required={false}
                                            value=""
                                          >
                                            <TextField
                                              InputLabelProps={
                                                Object {
                                                  "hidden": false,
                                                  "htmlFor": "nameAsPublishedField",
                                                  "id": "nameAsPublishedField-label",
                                                  "shrink": undefined,
                                                }
                                              }
                                              autoComplete="off"
                                              classes={Object {}}
                                              disabled={true}
                                              error={false}
                                              fullWidth={true}
                                              id="nameAsPublishedField"
                                              inputProps={
                                                Object {
                                                  "aria-label": "Name as published",
                                                  "aria-labelledby": "nameAsPublishedField-label",
                                                  "id": "nameAsPublishedField",
                                                  "label": "Name as published",
                                                }
                                              }
                                              label="Name as published"
                                              onChange={[Function]}
                                              onKeyDown={[Function]}
                                              placeholder="Please type the name exactly as published"
                                              required={false}
                                              select={false}
                                              value=""
                                              variant="standard"
                                            >
                                              <WithStyles(FormControl)
                                                classes={Object {}}
                                                disabled={true}
                                                error={false}
                                                fullWidth={true}
                                                onKeyDown={[Function]}
                                                required={false}
                                                variant="standard"
                                              >
                                                <FormControl
                                                  classes={
                                                    Object {
                                                      "fullWidth": "MuiFormControl-fullWidth-101",
                                                      "marginDense": "MuiFormControl-marginDense-100",
                                                      "marginNormal": "MuiFormControl-marginNormal-99",
                                                      "root": "MuiFormControl-root-98",
                                                    }
                                                  }
                                                  component="div"
                                                  disabled={true}
                                                  error={false}
                                                  fullWidth={true}
                                                  margin="none"
                                                  onKeyDown={[Function]}
                                                  required={false}
                                                  variant="standard"
                                                >
                                                  <div
                                                    className="MuiFormControl-root-98 MuiFormControl-fullWidth-101"
                                                    onKeyDown={[Function]}
                                                  >
                                                    <WithStyles(WithFormControlContext(InputLabel))
                                                      hidden={false}
                                                      htmlFor="nameAsPublishedField"
                                                      id="nameAsPublishedField-label"
                                                    >
                                                      <WithFormControlContext(InputLabel)
                                                        classes={
                                                          Object {
                                                            "animated": "MuiInputLabel-animated-110",
                                                            "disabled": "MuiInputLabel-disabled-104",
                                                            "error": "MuiInputLabel-error-105",
                                                            "filled": "MuiInputLabel-filled-111",
                                                            "focused": "MuiInputLabel-focused-103",
                                                            "formControl": "MuiInputLabel-formControl-107",
                                                            "marginDense": "MuiInputLabel-marginDense-108",
                                                            "outlined": "MuiInputLabel-outlined-112",
                                                            "required": "MuiInputLabel-required-106",
                                                            "root": "MuiInputLabel-root-102",
                                                            "shrink": "MuiInputLabel-shrink-109",
                                                          }
                                                        }
                                                        hidden={false}
                                                        htmlFor="nameAsPublishedField"
                                                        id="nameAsPublishedField-label"
                                                      >
                                                        <InputLabel
                                                          classes={
                                                            Object {
                                                              "animated": "MuiInputLabel-animated-110",
                                                              "disabled": "MuiInputLabel-disabled-104",
                                                              "error": "MuiInputLabel-error-105",
                                                              "filled": "MuiInputLabel-filled-111",
                                                              "focused": "MuiInputLabel-focused-103",
                                                              "formControl": "MuiInputLabel-formControl-107",
                                                              "marginDense": "MuiInputLabel-marginDense-108",
                                                              "outlined": "MuiInputLabel-outlined-112",
                                                              "required": "MuiInputLabel-required-106",
                                                              "root": "MuiInputLabel-root-102",
                                                              "shrink": "MuiInputLabel-shrink-109",
                                                            }
                                                          }
                                                          disableAnimation={false}
                                                          hidden={false}
                                                          htmlFor="nameAsPublishedField"
                                                          id="nameAsPublishedField-label"
                                                          muiFormControl={
                                                            Object {
                                                              "adornedStart": false,
                                                              "disabled": true,
                                                              "error": false,
                                                              "filled": false,
                                                              "focused": false,
                                                              "margin": "none",
                                                              "onBlur": [Function],
                                                              "onEmpty": [Function],
                                                              "onFilled": [Function],
                                                              "onFocus": [Function],
                                                              "required": false,
                                                              "variant": "standard",
                                                            }
                                                          }
                                                        >
                                                          <WithStyles(WithFormControlContext(FormLabel))
                                                            className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                            classes={
                                                              Object {
                                                                "disabled": "MuiInputLabel-disabled-104",
                                                                "error": "MuiInputLabel-error-105",
                                                                "focused": "MuiInputLabel-focused-103",
                                                                "required": "MuiInputLabel-required-106",
                                                              }
                                                            }
                                                            data-shrink={false}
                                                            hidden={false}
                                                            htmlFor="nameAsPublishedField"
                                                            id="nameAsPublishedField-label"
                                                          >
                                                            <WithFormControlContext(FormLabel)
                                                              className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                              classes={
                                                                Object {
                                                                  "asterisk": "MuiFormLabel-asterisk-119",
                                                                  "disabled": "MuiFormLabel-disabled-115 MuiInputLabel-disabled-104",
                                                                  "error": "MuiFormLabel-error-116 MuiInputLabel-error-105",
                                                                  "filled": "MuiFormLabel-filled-117",
                                                                  "focused": "MuiFormLabel-focused-114 MuiInputLabel-focused-103",
                                                                  "required": "MuiFormLabel-required-118 MuiInputLabel-required-106",
                                                                  "root": "MuiFormLabel-root-113",
                                                                }
                                                              }
                                                              data-shrink={false}
                                                              hidden={false}
                                                              htmlFor="nameAsPublishedField"
                                                              id="nameAsPublishedField-label"
                                                            >
                                                              <FormLabel
                                                                className="MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiFormLabel-asterisk-119",
                                                                    "disabled": "MuiFormLabel-disabled-115 MuiInputLabel-disabled-104",
                                                                    "error": "MuiFormLabel-error-116 MuiInputLabel-error-105",
                                                                    "filled": "MuiFormLabel-filled-117",
                                                                    "focused": "MuiFormLabel-focused-114 MuiInputLabel-focused-103",
                                                                    "required": "MuiFormLabel-required-118 MuiInputLabel-required-106",
                                                                    "root": "MuiFormLabel-root-113",
                                                                  }
                                                                }
                                                                component="label"
                                                                data-shrink={false}
                                                                hidden={false}
                                                                htmlFor="nameAsPublishedField"
                                                                id="nameAsPublishedField-label"
                                                                muiFormControl={
                                                                  Object {
                                                                    "adornedStart": false,
                                                                    "disabled": true,
                                                                    "error": false,
                                                                    "filled": false,
                                                                    "focused": false,
                                                                    "margin": "none",
                                                                    "onBlur": [Function],
                                                                    "onEmpty": [Function],
                                                                    "onFilled": [Function],
                                                                    "onFocus": [Function],
                                                                    "required": false,
                                                                    "variant": "standard",
                                                                  }
                                                                }
                                                              >
                                                                <label
                                                                  className="MuiFormLabel-root-113 MuiFormLabel-disabled-115 MuiInputLabel-disabled-104 MuiInputLabel-root-102 MuiInputLabel-formControl-107 MuiInputLabel-animated-110"
                                                                  data-shrink={false}
                                                                  hidden={false}
                                                                  htmlFor="nameAsPublishedField"
                                                                  id="nameAsPublishedField-label"
                                                                >
                                                                  Name as published
                                                                </label>
                                                              </FormLabel>
                                                            </WithFormControlContext(FormLabel)>
                                                          </WithStyles(WithFormControlContext(FormLabel))>
                                                        </InputLabel>
                                                      </WithFormControlContext(InputLabel)>
                                                    </WithStyles(WithFormControlContext(InputLabel))>
                                                    <WithStyles(Input)
                                                      autoComplete="off"
                                                      fullWidth={true}
                                                      id="nameAsPublishedField"
                                                      inputProps={
                                                        Object {
                                                          "aria-label": "Name as published",
                                                          "aria-labelledby": "nameAsPublishedField-label",
                                                          "id": "nameAsPublishedField",
                                                          "label": "Name as published",
                                                        }
                                                      }
                                                      onChange={[Function]}
                                                      placeholder="Please type the name exactly as published"
                                                      value=""
                                                    >
                                                      <Input
                                                        autoComplete="off"
                                                        classes={
                                                          Object {
                                                            "disabled": "MuiInput-disabled-130",
                                                            "error": "MuiInput-error-132",
                                                            "focused": "MuiInput-focused-129",
                                                            "formControl": "MuiInput-formControl-128",
                                                            "fullWidth": "MuiInput-fullWidth-134",
                                                            "input": "MuiInput-input-135",
                                                            "inputMarginDense": "MuiInput-inputMarginDense-136",
                                                            "inputMultiline": "MuiInput-inputMultiline-137",
                                                            "inputType": "MuiInput-inputType-138",
                                                            "inputTypeSearch": "MuiInput-inputTypeSearch-139",
                                                            "multiline": "MuiInput-multiline-133",
                                                            "root": "MuiInput-root-127",
                                                            "underline": "MuiInput-underline-131",
                                                          }
                                                        }
                                                        fullWidth={true}
                                                        id="nameAsPublishedField"
                                                        inputProps={
                                                          Object {
                                                            "aria-label": "Name as published",
                                                            "aria-labelledby": "nameAsPublishedField-label",
                                                            "id": "nameAsPublishedField",
                                                            "label": "Name as published",
                                                          }
                                                        }
                                                        onChange={[Function]}
                                                        placeholder="Please type the name exactly as published"
                                                        value=""
                                                      >
                                                        <WithStyles(WithFormControlContext(InputBase))
                                                          autoComplete="off"
                                                          classes={
                                                            Object {
                                                              "disabled": "MuiInput-disabled-130",
                                                              "error": "MuiInput-error-132",
                                                              "focused": "MuiInput-focused-129",
                                                              "formControl": "MuiInput-formControl-128",
                                                              "fullWidth": "MuiInput-fullWidth-134",
                                                              "input": "MuiInput-input-135",
                                                              "inputMarginDense": "MuiInput-inputMarginDense-136",
                                                              "inputMultiline": "MuiInput-inputMultiline-137",
                                                              "inputType": "MuiInput-inputType-138",
                                                              "inputTypeSearch": "MuiInput-inputTypeSearch-139",
                                                              "multiline": "MuiInput-multiline-133",
                                                              "root": "MuiInput-root-127 MuiInput-underline-131",
                                                              "underline": null,
                                                            }
                                                          }
                                                          fullWidth={true}
                                                          id="nameAsPublishedField"
                                                          inputComponent="input"
                                                          inputProps={
                                                            Object {
                                                              "aria-label": "Name as published",
                                                              "aria-labelledby": "nameAsPublishedField-label",
                                                              "id": "nameAsPublishedField",
                                                              "label": "Name as published",
                                                            }
                                                          }
                                                          multiline={false}
                                                          onChange={[Function]}
                                                          placeholder="Please type the name exactly as published"
                                                          type="text"
                                                          value=""
                                                        >
                                                          <WithFormControlContext(InputBase)
                                                            autoComplete="off"
                                                            classes={
                                                              Object {
                                                                "adornedEnd": "MuiInputBase-adornedEnd-145",
                                                                "adornedStart": "MuiInputBase-adornedStart-144",
                                                                "disabled": "MuiInputBase-disabled-143 MuiInput-disabled-130",
                                                                "error": "MuiInputBase-error-146 MuiInput-error-132",
                                                                "focused": "MuiInputBase-focused-142 MuiInput-focused-129",
                                                                "formControl": "MuiInputBase-formControl-141 MuiInput-formControl-128",
                                                                "fullWidth": "MuiInputBase-fullWidth-149 MuiInput-fullWidth-134",
                                                                "input": "MuiInputBase-input-150 MuiInput-input-135",
                                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-156",
                                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart-155",
                                                                "inputMarginDense": "MuiInputBase-inputMarginDense-151 MuiInput-inputMarginDense-136",
                                                                "inputMultiline": "MuiInputBase-inputMultiline-152 MuiInput-inputMultiline-137",
                                                                "inputType": "MuiInputBase-inputType-153 MuiInput-inputType-138",
                                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch-154 MuiInput-inputTypeSearch-139",
                                                                "marginDense": "MuiInputBase-marginDense-147",
                                                                "multiline": "MuiInputBase-multiline-148 MuiInput-multiline-133",
                                                                "root": "MuiInputBase-root-140 MuiInput-root-127 MuiInput-underline-131",
                                                              }
                                                            }
                                                            fullWidth={true}
                                                            id="nameAsPublishedField"
                                                            inputComponent="input"
                                                            inputProps={
                                                              Object {
                                                                "aria-label": "Name as published",
                                                                "aria-labelledby": "nameAsPublishedField-label",
                                                                "id": "nameAsPublishedField",
                                                                "label": "Name as published",
                                                              }
                                                            }
                                                            multiline={false}
                                                            onChange={[Function]}
                                                            placeholder="Please type the name exactly as published"
                                                            type="text"
                                                            value=""
                                                          >
                                                            <InputBase
                                                              autoComplete="off"
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiInputBase-adornedEnd-145",
                                                                  "adornedStart": "MuiInputBase-adornedStart-144",
                                                                  "disabled": "MuiInputBase-disabled-143 MuiInput-disabled-130",
                                                                  "error": "MuiInputBase-error-146 MuiInput-error-132",
                                                                  "focused": "MuiInputBase-focused-142 MuiInput-focused-129",
                                                                  "formControl": "MuiInputBase-formControl-141 MuiInput-formControl-128",
                                                                  "fullWidth": "MuiInputBase-fullWidth-149 MuiInput-fullWidth-134",
                                                                  "input": "MuiInputBase-input-150 MuiInput-input-135",
                                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-156",
                                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart-155",
                                                                  "inputMarginDense": "MuiInputBase-inputMarginDense-151 MuiInput-inputMarginDense-136",
                                                                  "inputMultiline": "MuiInputBase-inputMultiline-152 MuiInput-inputMultiline-137",
                                                                  "inputType": "MuiInputBase-inputType-153 MuiInput-inputType-138",
                                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch-154 MuiInput-inputTypeSearch-139",
                                                                  "marginDense": "MuiInputBase-marginDense-147",
                                                                  "multiline": "MuiInputBase-multiline-148 MuiInput-multiline-133",
                                                                  "root": "MuiInputBase-root-140 MuiInput-root-127 MuiInput-underline-131",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              id="nameAsPublishedField"
                                                              inputComponent="input"
                                                              inputProps={
                                                                Object {
                                                                  "aria-label": "Name as published",
                                                                  "aria-labelledby": "nameAsPublishedField-label",
                                                                  "id": "nameAsPublishedField",
                                                                  "label": "Name as published",
                                                                }
                                                              }
                                                              muiFormControl={
                                                                Object {
                                                                  "adornedStart": false,
                                                                  "disabled": true,
                                                                  "error": false,
                                                                  "filled": false,
                                                                  "focused": false,
                                                                  "margin": "none",
                                                                  "onBlur": [Function],
                                                                  "onEmpty": [Function],
                                                                  "onFilled": [Function],
                                                                  "onFocus": [Function],
                                                                  "required": false,
                                                                  "variant": "standard",
                                                                }
                                                              }
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              placeholder="Please type the name exactly as published"
                                                              type="text"
                                                              value=""
                                                            >
                                                              <div
                                                                className="MuiInputBase-root-140 MuiInput-root-127 MuiInput-underline-131 MuiInputBase-disabled-143 MuiInput-disabled-130 MuiInputBase-fullWidth-149 MuiInput-fullWidth-134 MuiInputBase-formControl-141 MuiInput-formControl-128"
                                                                onClick={[Function]}
                                                              >
                                                                <input
                                                                  aria-invalid={false}
                                                                  aria-label="Name as published"
                                                                  aria-labelledby="nameAsPublishedField-label"
                                                                  autoComplete="off"
                                                                  className="MuiInputBase-input-150 MuiInput-input-135 MuiInputBase-disabled-143 MuiInput-disabled-130"
                                                                  disabled={true}
                                                                  id="nameAsPublishedField"
                                                                  label="Name as published"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  placeholder="Please type the name exactly as published"
                                                                  required={false}
                                                                  type="text"
                                                                  value=""
                                                                />
                                                              </div>
                                                            </InputBase>
                                                          </WithFormControlContext(InputBase)>
                                                        </WithStyles(WithFormControlContext(InputBase))>
                                                      </Input>
                                                    </WithStyles(Input)>
                                                  </div>
                                                </FormControl>
                                              </WithStyles(FormControl)>
                                            </TextField>
                                          </TextFieldWrapper>
                                        </WithStyles(TextFieldWrapper)>
                                      </div>
                                    </Grid>
                                  </WithStyles(Grid)>
                                </div>
                              </Grid>
                            </WithStyles(Grid)>
                            <WithStyles(Grid)
                              container={true}
                              spacing={8}
                              style={
                                Object {
                                  "marginTop": 8,
                                }
                              }
                            >
                              <Grid
                                alignContent="stretch"
                                alignItems="stretch"
                                classes={
                                  Object {
                                    "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                                    "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                                    "container": "MuiGrid-container-1",
                                    "direction-xs-column": "MuiGrid-direction-xs-column-4",
                                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                                    "grid-lg-1": "MuiGrid-grid-lg-1-72",
                                    "grid-lg-10": "MuiGrid-grid-lg-10-81",
                                    "grid-lg-11": "MuiGrid-grid-lg-11-82",
                                    "grid-lg-12": "MuiGrid-grid-lg-12-83",
                                    "grid-lg-2": "MuiGrid-grid-lg-2-73",
                                    "grid-lg-3": "MuiGrid-grid-lg-3-74",
                                    "grid-lg-4": "MuiGrid-grid-lg-4-75",
                                    "grid-lg-5": "MuiGrid-grid-lg-5-76",
                                    "grid-lg-6": "MuiGrid-grid-lg-6-77",
                                    "grid-lg-7": "MuiGrid-grid-lg-7-78",
                                    "grid-lg-8": "MuiGrid-grid-lg-8-79",
                                    "grid-lg-9": "MuiGrid-grid-lg-9-80",
                                    "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                                    "grid-lg-true": "MuiGrid-grid-lg-true-71",
                                    "grid-md-1": "MuiGrid-grid-md-1-58",
                                    "grid-md-10": "MuiGrid-grid-md-10-67",
                                    "grid-md-11": "MuiGrid-grid-md-11-68",
                                    "grid-md-12": "MuiGrid-grid-md-12-69",
                                    "grid-md-2": "MuiGrid-grid-md-2-59",
                                    "grid-md-3": "MuiGrid-grid-md-3-60",
                                    "grid-md-4": "MuiGrid-grid-md-4-61",
                                    "grid-md-5": "MuiGrid-grid-md-5-62",
                                    "grid-md-6": "MuiGrid-grid-md-6-63",
                                    "grid-md-7": "MuiGrid-grid-md-7-64",
                                    "grid-md-8": "MuiGrid-grid-md-8-65",
                                    "grid-md-9": "MuiGrid-grid-md-9-66",
                                    "grid-md-auto": "MuiGrid-grid-md-auto-56",
                                    "grid-md-true": "MuiGrid-grid-md-true-57",
                                    "grid-sm-1": "MuiGrid-grid-sm-1-44",
                                    "grid-sm-10": "MuiGrid-grid-sm-10-53",
                                    "grid-sm-11": "MuiGrid-grid-sm-11-54",
                                    "grid-sm-12": "MuiGrid-grid-sm-12-55",
                                    "grid-sm-2": "MuiGrid-grid-sm-2-45",
                                    "grid-sm-3": "MuiGrid-grid-sm-3-46",
                                    "grid-sm-4": "MuiGrid-grid-sm-4-47",
                                    "grid-sm-5": "MuiGrid-grid-sm-5-48",
                                    "grid-sm-6": "MuiGrid-grid-sm-6-49",
                                    "grid-sm-7": "MuiGrid-grid-sm-7-50",
                                    "grid-sm-8": "MuiGrid-grid-sm-8-51",
                                    "grid-sm-9": "MuiGrid-grid-sm-9-52",
                                    "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                                    "grid-sm-true": "MuiGrid-grid-sm-true-43",
                                    "grid-xl-1": "MuiGrid-grid-xl-1-86",
                                    "grid-xl-10": "MuiGrid-grid-xl-10-95",
                                    "grid-xl-11": "MuiGrid-grid-xl-11-96",
                                    "grid-xl-12": "MuiGrid-grid-xl-12-97",
                                    "grid-xl-2": "MuiGrid-grid-xl-2-87",
                                    "grid-xl-3": "MuiGrid-grid-xl-3-88",
                                    "grid-xl-4": "MuiGrid-grid-xl-4-89",
                                    "grid-xl-5": "MuiGrid-grid-xl-5-90",
                                    "grid-xl-6": "MuiGrid-grid-xl-6-91",
                                    "grid-xl-7": "MuiGrid-grid-xl-7-92",
                                    "grid-xl-8": "MuiGrid-grid-xl-8-93",
                                    "grid-xl-9": "MuiGrid-grid-xl-9-94",
                                    "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                                    "grid-xl-true": "MuiGrid-grid-xl-true-85",
                                    "grid-xs-1": "MuiGrid-grid-xs-1-30",
                                    "grid-xs-10": "MuiGrid-grid-xs-10-39",
                                    "grid-xs-11": "MuiGrid-grid-xs-11-40",
                                    "grid-xs-12": "MuiGrid-grid-xs-12-41",
                                    "grid-xs-2": "MuiGrid-grid-xs-2-31",
                                    "grid-xs-3": "MuiGrid-grid-xs-3-32",
                                    "grid-xs-4": "MuiGrid-grid-xs-4-33",
                                    "grid-xs-5": "MuiGrid-grid-xs-5-34",
                                    "grid-xs-6": "MuiGrid-grid-xs-6-35",
                                    "grid-xs-7": "MuiGrid-grid-xs-7-36",
                                    "grid-xs-8": "MuiGrid-grid-xs-8-37",
                                    "grid-xs-9": "MuiGrid-grid-xs-9-38",
                                    "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                                    "grid-xs-true": "MuiGrid-grid-xs-true-29",
                                    "item": "MuiGrid-item-2",
                                    "justify-xs-center": "MuiGrid-justify-xs-center-18",
                                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                                    "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                                    "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                                    "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                                    "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                                    "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                                    "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                                  }
                                }
                                component="div"
                                container={true}
                                direction="row"
                                item={false}
                                justify="flex-start"
                                lg={false}
                                md={false}
                                sm={false}
                                spacing={8}
                                style={
                                  Object {
                                    "marginTop": 8,
                                  }
                                }
                                wrap="wrap"
                                xl={false}
                                xs={false}
                                zeroMinWidth={false}
                              >
                                <div
                                  className="MuiGrid-container-1 MuiGrid-spacing-xs-8-23"
                                  style={
                                    Object {
                                      "marginTop": 8,
                                    }
                                  }
                                >
                                  <WithStyles(Grid)
                                    item={true}
                                    style={
                                      Object {
                                        "marginBottom": 8,
                                      }
                                    }
                                    xs={12}
                                  >
                                    <Grid
                                      alignContent="stretch"
                                      alignItems="stretch"
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center-13",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-15",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-14",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-17",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-16",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-12",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center-9",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-11",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-10",
                                          "container": "MuiGrid-container-1",
                                          "direction-xs-column": "MuiGrid-direction-xs-column-4",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-5",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-6",
                                          "grid-lg-1": "MuiGrid-grid-lg-1-72",
                                          "grid-lg-10": "MuiGrid-grid-lg-10-81",
                                          "grid-lg-11": "MuiGrid-grid-lg-11-82",
                                          "grid-lg-12": "MuiGrid-grid-lg-12-83",
                                          "grid-lg-2": "MuiGrid-grid-lg-2-73",
                                          "grid-lg-3": "MuiGrid-grid-lg-3-74",
                                          "grid-lg-4": "MuiGrid-grid-lg-4-75",
                                          "grid-lg-5": "MuiGrid-grid-lg-5-76",
                                          "grid-lg-6": "MuiGrid-grid-lg-6-77",
                                          "grid-lg-7": "MuiGrid-grid-lg-7-78",
                                          "grid-lg-8": "MuiGrid-grid-lg-8-79",
                                          "grid-lg-9": "MuiGrid-grid-lg-9-80",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto-70",
                                          "grid-lg-true": "MuiGrid-grid-lg-true-71",
                                          "grid-md-1": "MuiGrid-grid-md-1-58",
                                          "grid-md-10": "MuiGrid-grid-md-10-67",
                                          "grid-md-11": "MuiGrid-grid-md-11-68",
                                          "grid-md-12": "MuiGrid-grid-md-12-69",
                                          "grid-md-2": "MuiGrid-grid-md-2-59",
                                          "grid-md-3": "MuiGrid-grid-md-3-60",
                                          "grid-md-4": "MuiGrid-grid-md-4-61",
                                          "grid-md-5": "MuiGrid-grid-md-5-62",
                                          "grid-md-6": "MuiGrid-grid-md-6-63",
                                          "grid-md-7": "MuiGrid-grid-md-7-64",
                                          "grid-md-8": "MuiGrid-grid-md-8-65",
                                          "grid-md-9": "MuiGrid-grid-md-9-66",
                                          "grid-md-auto": "MuiGrid-grid-md-auto-56",
                                          "grid-md-true": "MuiGrid-grid-md-true-57",
                                          "grid-sm-1": "MuiGrid-grid-sm-1-44",
                                          "grid-sm-10": "MuiGrid-grid-sm-10-53",
                                          "grid-sm-11": "MuiGrid-grid-sm-11-54",
                                          "grid-sm-12": "MuiGrid-grid-sm-12-55",
                                          "grid-sm-2": "MuiGrid-grid-sm-2-45",
                                          "grid-sm-3": "MuiGrid-grid-sm-3-46",
                                          "grid-sm-4": "MuiGrid-grid-sm-4-47",
                                          "grid-sm-5": "MuiGrid-grid-sm-5-48",
                                          "grid-sm-6": "MuiGrid-grid-sm-6-49",
                                          "grid-sm-7": "MuiGrid-grid-sm-7-50",
                                          "grid-sm-8": "MuiGrid-grid-sm-8-51",
                                          "grid-sm-9": "MuiGrid-grid-sm-9-52",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto-42",
                                          "grid-sm-true": "MuiGrid-grid-sm-true-43",
                                          "grid-xl-1": "MuiGrid-grid-xl-1-86",
                                          "grid-xl-10": "MuiGrid-grid-xl-10-95",
                                          "grid-xl-11": "MuiGrid-grid-xl-11-96",
                                          "grid-xl-12": "MuiGrid-grid-xl-12-97",
                                          "grid-xl-2": "MuiGrid-grid-xl-2-87",
                                          "grid-xl-3": "MuiGrid-grid-xl-3-88",
                                          "grid-xl-4": "MuiGrid-grid-xl-4-89",
                                          "grid-xl-5": "MuiGrid-grid-xl-5-90",
                                          "grid-xl-6": "MuiGrid-grid-xl-6-91",
                                          "grid-xl-7": "MuiGrid-grid-xl-7-92",
                                          "grid-xl-8": "MuiGrid-grid-xl-8-93",
                                          "grid-xl-9": "MuiGrid-grid-xl-9-94",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto-84",
                                          "grid-xl-true": "MuiGrid-grid-xl-true-85",
                                          "grid-xs-1": "MuiGrid-grid-xs-1-30",
                                          "grid-xs-10": "MuiGrid-grid-xs-10-39",
                                          "grid-xs-11": "MuiGrid-grid-xs-11-40",
                                          "grid-xs-12": "MuiGrid-grid-xs-12-41",
                                          "grid-xs-2": "MuiGrid-grid-xs-2-31",
                                          "grid-xs-3": "MuiGrid-grid-xs-3-32",
                                          "grid-xs-4": "MuiGrid-grid-xs-4-33",
                                          "grid-xs-5": "MuiGrid-grid-xs-5-34",
                                          "grid-xs-6": "MuiGrid-grid-xs-6-35",
                                          "grid-xs-7": "MuiGrid-grid-xs-7-36",
                                          "grid-xs-8": "MuiGrid-grid-xs-8-37",
                                          "grid-xs-9": "MuiGrid-grid-xs-9-38",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto-28",
                                          "grid-xs-true": "MuiGrid-grid-xs-true-29",
                                          "item": "MuiGrid-item-2",
                                          "justify-xs-center": "MuiGrid-justify-xs-center-18",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-19",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around-21",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between-20",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-22",
                                          "spacing-xs-16": "MuiGrid-spacing-xs-16-24",
                                          "spacing-xs-24": "MuiGrid-spacing-xs-24-25",
                                          "spacing-xs-32": "MuiGrid-spacing-xs-32-26",
                                          "spacing-xs-40": "MuiGrid-spacing-xs-40-27",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8-23",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-7",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-8",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth-3",
                                        }
                                      }
                                      component="div"
                                      container={false}
                                      direction="row"
                                      item={true}
                                      justify="flex-start"
                                      lg={false}
                                      md={false}
                                      sm={false}
                                      spacing={0}
                                      style={
                                        Object {
                                          "marginBottom": 8,
                                        }
                                      }
                                      wrap="wrap"
                                      xl={false}
                                      xs={12}
                                      zeroMinWidth={false}
                                    >
                                      <div
                                        className="MuiGrid-item-2 MuiGrid-grid-xs-12-41"
                                        style={
                                          Object {
                                            "marginBottom": 8,
                                          }
                                        }
                                      >
                                        <WithStyles(Button)
                                          color="primary"
                                          disabled={true}
                                          fullWidth={true}
                                          id="submit-author"
                                          onClick={[Function]}
                                          variant="contained"
                                        >
                                          <Button
                                            classes={
                                              Object {
                                                "colorInherit": "MuiButton-colorInherit-191",
                                                "contained": "MuiButton-contained-181",
                                                "containedPrimary": "MuiButton-containedPrimary-182",
                                                "containedSecondary": "MuiButton-containedSecondary-183",
                                                "disabled": "MuiButton-disabled-190",
                                                "extendedFab": "MuiButton-extendedFab-188",
                                                "fab": "MuiButton-fab-187",
                                                "flat": "MuiButton-flat-175",
                                                "flatPrimary": "MuiButton-flatPrimary-176",
                                                "flatSecondary": "MuiButton-flatSecondary-177",
                                                "focusVisible": "MuiButton-focusVisible-189",
                                                "fullWidth": "MuiButton-fullWidth-195",
                                                "label": "MuiButton-label-171",
                                                "mini": "MuiButton-mini-192",
                                                "outlined": "MuiButton-outlined-178",
                                                "outlinedPrimary": "MuiButton-outlinedPrimary-179",
                                                "outlinedSecondary": "MuiButton-outlinedSecondary-180",
                                                "raised": "MuiButton-raised-184",
                                                "raisedPrimary": "MuiButton-raisedPrimary-185",
                                                "raisedSecondary": "MuiButton-raisedSecondary-186",
                                                "root": "MuiButton-root-170",
                                                "sizeLarge": "MuiButton-sizeLarge-194",
                                                "sizeSmall": "MuiButton-sizeSmall-193",
                                                "text": "MuiButton-text-172",
                                                "textPrimary": "MuiButton-textPrimary-173",
                                                "textSecondary": "MuiButton-textSecondary-174",
                                              }
                                            }
                                            color="primary"
                                            component="button"
                                            disableFocusRipple={false}
                                            disabled={true}
                                            fullWidth={true}
                                            id="submit-author"
                                            mini={false}
                                            onClick={[Function]}
                                            size="medium"
                                            type="button"
                                            variant="contained"
                                          >
                                            <WithStyles(ButtonBase)
                                              className="MuiButton-root-170 MuiButton-contained-181 MuiButton-containedPrimary-182 MuiButton-raised-184 MuiButton-raisedPrimary-185 MuiButton-disabled-190 MuiButton-fullWidth-195"
                                              component="button"
                                              disabled={true}
                                              focusRipple={true}
                                              focusVisibleClassName="MuiButton-focusVisible-189"
                                              id="submit-author"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <ButtonBase
                                                centerRipple={false}
                                                className="MuiButton-root-170 MuiButton-contained-181 MuiButton-containedPrimary-182 MuiButton-raised-184 MuiButton-raisedPrimary-185 MuiButton-disabled-190 MuiButton-fullWidth-195"
                                                classes={
                                                  Object {
                                                    "disabled": "MuiButtonBase-disabled-197",
                                                    "focusVisible": "MuiButtonBase-focusVisible-198",
                                                    "root": "MuiButtonBase-root-196",
                                                  }
                                                }
                                                component="button"
                                                disableRipple={false}
                                                disableTouchRipple={false}
                                                disabled={true}
                                                focusRipple={true}
                                                focusVisibleClassName="MuiButton-focusVisible-189"
                                                id="submit-author"
                                                onClick={[Function]}
                                                tabIndex="0"
                                                type="button"
                                              >
                                                <button
                                                  className="MuiButtonBase-root-196 MuiButtonBase-disabled-197 MuiButton-root-170 MuiButton-contained-181 MuiButton-containedPrimary-182 MuiButton-raised-184 MuiButton-raisedPrimary-185 MuiButton-disabled-190 MuiButton-fullWidth-195"
                                                  disabled={true}
                                                  id="submit-author"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onContextMenu={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex="-1"
                                                  type="button"
                                                >
                                                  <span
                                                    className="MuiButton-label-171"
                                                  >
                                                    Add author
                                                  </span>
                                                </button>
                                              </ButtonBase>
                                            </WithStyles(ButtonBase)>
                                          </Button>
                                        </WithStyles(Button)>
                                      </div>
                                    </Grid>
                                  </WithStyles(Grid)>
                                </div>
                              </Grid>
                            </WithStyles(Grid)>
                          </ContributorForm>
                        </div>
                      </Grid>
                    </WithStyles(Grid)>
                  </div>
                </Grid>
              </WithStyles(Grid)>
            </div>
          </ContributorsEditor>
        </MuiPickersUtilsProvider>
      </MuiThemeProviderOld>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`ContributorsEditor renders full component with a defined className 1`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <ContributorForm
        author={
          Object {
            "aut_id": 1,
          }
        }
        canEdit={false}
        className="requiredField"
        classes={
          Object {
            "list": "list",
            "scroll": "scroll",
          }
        }
        contributor={Object {}}
        disableNameAsPublished={false}
        displayCancel={false}
        editMode={false}
        enableUqIdentifierOnAffiliationChange={true}
        hideDelete={false}
        hideReorder={false}
        isContributorAssigned={false}
        isNtro={false}
        key="null"
        locale={
          Object {
            "addButton": "Add author",
            "creatorRoleHint": "Role of the creator in relation to the dataset",
            "creatorRoleLabel": "Creator role",
            "descriptionStep1": <div>
              <span
                className="authorSteps"
              >
                Step 1 of 2
              </span>
              - Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "descriptionStep1NoStep2": <div>
              Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "identifierLabel": "UQ identifier (if available)",
            "nameAsPublishedHint": "Please type the name exactly as published",
            "nameAsPublishedLabel": "Name as published",
          }
        }
        onSubmit={[Function]}
        required={false}
        showContributorAssignment={false}
        showIdentifierLookup={false}
        showRoleInput={false}
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</div>
`;

exports[`ContributorsEditor renders full component with identifier lookup 1`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <ContributorForm
        author={
          Object {
            "aut_id": 1,
          }
        }
        canEdit={false}
        classes={
          Object {
            "list": "list",
            "scroll": "scroll",
          }
        }
        contributor={Object {}}
        disableNameAsPublished={false}
        displayCancel={false}
        editMode={false}
        enableUqIdentifierOnAffiliationChange={true}
        hideDelete={false}
        hideReorder={false}
        isContributorAssigned={false}
        isNtro={false}
        key="null"
        locale={
          Object {
            "addButton": "Add author",
            "creatorRoleHint": "Role of the creator in relation to the dataset",
            "creatorRoleLabel": "Creator role",
            "descriptionStep1": <div>
              <span
                className="authorSteps"
              >
                Step 1 of 2
              </span>
              - Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "descriptionStep1NoStep2": <div>
              Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "identifierLabel": "UQ identifier (if available)",
            "nameAsPublishedHint": "Please type the name exactly as published",
            "nameAsPublishedLabel": "Name as published",
          }
        }
        onSubmit={[Function]}
        required={false}
        showContributorAssignment={false}
        showIdentifierLookup={true}
        showRoleInput={false}
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</div>
`;

exports[`ContributorsEditor renders full component with role input 1`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <ContributorForm
        author={
          Object {
            "aut_id": 1,
          }
        }
        canEdit={false}
        classes={
          Object {
            "list": "list",
            "scroll": "scroll",
          }
        }
        contributor={Object {}}
        disableNameAsPublished={false}
        displayCancel={false}
        editMode={false}
        enableUqIdentifierOnAffiliationChange={true}
        hideDelete={false}
        hideReorder={false}
        isContributorAssigned={false}
        isNtro={false}
        key="null"
        locale={
          Object {
            "addButton": "Add author",
            "creatorRoleHint": "Role of the creator in relation to the dataset",
            "creatorRoleLabel": "Creator role",
            "descriptionStep1": <div>
              <span
                className="authorSteps"
              >
                Step 1 of 2
              </span>
              - Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "descriptionStep1NoStep2": <div>
              Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "identifierLabel": "UQ identifier (if available)",
            "nameAsPublishedHint": "Please type the name exactly as published",
            "nameAsPublishedLabel": "Name as published",
          }
        }
        onSubmit={[Function]}
        required={false}
        showContributorAssignment={false}
        showIdentifierLookup={false}
        showRoleInput={true}
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</div>
`;

exports[`ContributorsEditor renders no contributor rows with no infinite scroll 1`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <ContributorForm
        author={
          Object {
            "aut_id": 1,
          }
        }
        canEdit={false}
        classes={
          Object {
            "list": "list",
            "scroll": "scroll",
          }
        }
        contributor={Object {}}
        contributors={Array []}
        disableNameAsPublished={false}
        displayCancel={false}
        editMode={false}
        enableUqIdentifierOnAffiliationChange={true}
        hideDelete={false}
        hideReorder={false}
        isContributorAssigned={false}
        isNtro={false}
        key="null"
        locale={
          Object {
            "addButton": "Add author",
            "creatorRoleHint": "Role of the creator in relation to the dataset",
            "creatorRoleLabel": "Creator role",
            "descriptionStep1": <div>
              <span
                className="authorSteps"
              >
                Step 1 of 2
              </span>
              - Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "descriptionStep1NoStep2": <div>
              Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "identifierLabel": "UQ identifier (if available)",
            "nameAsPublishedHint": "Please type the name exactly as published",
            "nameAsPublishedLabel": "Name as published",
          }
        }
        onSubmit={[Function]}
        required={false}
        showContributorAssignment={false}
        showIdentifierLookup={false}
        showRoleInput={false}
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</div>
`;

exports[`ContributorsEditor returns contributor form with expected props 1`] = `
<ContributorForm
  author={
    Object {
      "aut_id": 1,
    }
  }
  canEdit={false}
  classes={
    Object {
      "list": "list",
      "scroll": "scroll",
    }
  }
  contributor={Object {}}
  contributors={
    Array [
      Object {
        "nameAsPublished": 1,
      },
    ]
  }
  disableNameAsPublished={false}
  displayCancel={false}
  editMode={false}
  enableUqIdentifierOnAffiliationChange={true}
  hideDelete={false}
  hideReorder={false}
  isContributorAssigned={false}
  isNtro={false}
  locale={
    Object {
      "addButton": "Add author",
      "creatorRoleHint": "Role of the creator in relation to the dataset",
      "creatorRoleLabel": "Creator role",
      "descriptionStep1": <div>
        <span
          className="authorSteps"
        >
          Step 1 of 2
        </span>
        - Please 
        <b>
          add to a list of contributors below
        </b>
        , in the format and order that they are published.
      </div>,
      "descriptionStep1NoStep2": <div>
        Please 
        <b>
          add to a list of contributors below
        </b>
        , in the format and order that they are published.
      </div>,
      "identifierLabel": "UQ identifier (if available)",
      "nameAsPublishedHint": "Please type the name exactly as published",
      "nameAsPublishedLabel": "Name as published",
    }
  }
  onSubmit={[MockFunction]}
  required={false}
  showContributorAssignment={false}
  showIdentifierLookup={false}
  showRoleInput={false}
/>
`;

exports[`ContributorsEditor returns contributor form with expected props 2`] = `
<ContributorForm
  author={
    Object {
      "aut_id": 1,
    }
  }
  canEdit={true}
  classes={
    Object {
      "list": "list",
      "scroll": "scroll",
    }
  }
  contributor={Object {}}
  contributors={
    Array [
      Object {
        "nameAsPublished": 1,
      },
    ]
  }
  disableNameAsPublished={false}
  displayCancel={true}
  editMode={true}
  enableUqIdentifierOnAffiliationChange={true}
  hideDelete={false}
  hideReorder={false}
  isContributorAssigned={false}
  isNtro={false}
  locale={
    Object {
      "addButton": "test",
    }
  }
  meta={
    Object {
      "initial": Object {
        "toJS": [Function],
      },
    }
  }
  onSubmit={[MockFunction]}
  required={false}
  showContributorAssignment={false}
  showIdentifierLookup={false}
  showRoleInput={false}
/>
`;

exports[`ContributorsEditor should get contributors from props and input value set as an Immutable list 1`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <ContributorForm
        author={
          Object {
            "aut_id": 1,
          }
        }
        canEdit={false}
        classes={
          Object {
            "list": "list",
            "scroll": "scroll",
          }
        }
        contributor={Object {}}
        disableNameAsPublished={false}
        displayCancel={false}
        editMode={false}
        enableUqIdentifierOnAffiliationChange={true}
        hideDelete={false}
        hideReorder={false}
        input={
          Object {
            "name": "test",
            "value": Immutable.List [
              Object {
                "displayName": "test 1",
              },
              Object {
                "displayName": "test 2",
              },
            ],
          }
        }
        isContributorAssigned={true}
        isNtro={false}
        key="null"
        locale={
          Object {
            "addButton": "Add author",
            "creatorRoleHint": "Role of the creator in relation to the dataset",
            "creatorRoleLabel": "Creator role",
            "descriptionStep1": <div>
              <span
                className="authorSteps"
              >
                Step 1 of 2
              </span>
              - Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "descriptionStep1NoStep2": <div>
              Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "identifierLabel": "UQ identifier (if available)",
            "nameAsPublishedHint": "Please type the name exactly as published",
            "nameAsPublishedLabel": "Name as published",
          }
        }
        onSubmit={[Function]}
        required={false}
        showContributorAssignment={false}
        showIdentifierLookup={false}
        showRoleInput={false}
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(List)
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <WithStyles(ContributorRowHeader)
          hideDelete={false}
          isInfinite={false}
          isNtro={false}
          onDeleteAll={[Function]}
          showContributorAssignment={false}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
      </WithStyles(List)>
      <WithStyles(List)
        classes={
          Object {
            "root": "ContributorList list ",
          }
        }
      >
        <WithStyles(WithTheme(WithWidth(ContributorRow)))
          canEdit={false}
          canMoveDown={true}
          canMoveUp={false}
          className="ContributorRow"
          contributor={
            Object {
              "displayName": "test 1",
            }
          }
          enableSelect={false}
          hideDelete={false}
          hideReorder={false}
          index={0}
          key="ContributorRow_0"
          onDelete={[Function]}
          onEdit={[Function]}
          onMoveDown={[Function]}
          onMoveUp={[Function]}
          onSelect={[Function]}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
        <WithStyles(WithTheme(WithWidth(ContributorRow)))
          canEdit={false}
          canMoveDown={false}
          canMoveUp={true}
          className="ContributorRow"
          contributor={
            Object {
              "displayName": "test 2",
            }
          }
          enableSelect={false}
          hideDelete={false}
          hideReorder={false}
          index={1}
          key="ContributorRow_1"
          onDelete={[Function]}
          onEdit={[Function]}
          onMoveDown={[Function]}
          onMoveUp={[Function]}
          onSelect={[Function]}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
      </WithStyles(List)>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</div>
`;

exports[`ContributorsEditor should get contributors from props and input value set as an array 1`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <ContributorForm
        author={
          Object {
            "aut_id": 1,
          }
        }
        canEdit={false}
        classes={
          Object {
            "list": "list",
            "scroll": "scroll",
          }
        }
        contributor={Object {}}
        disableNameAsPublished={false}
        displayCancel={false}
        editMode={false}
        enableUqIdentifierOnAffiliationChange={true}
        hideDelete={false}
        hideReorder={false}
        input={
          Object {
            "name": "test",
            "value": Array [
              Object {
                "displayName": "test 1",
              },
              Object {
                "displayName": "test 2",
              },
            ],
          }
        }
        isContributorAssigned={true}
        isNtro={false}
        key="null"
        locale={
          Object {
            "addButton": "Add author",
            "creatorRoleHint": "Role of the creator in relation to the dataset",
            "creatorRoleLabel": "Creator role",
            "descriptionStep1": <div>
              <span
                className="authorSteps"
              >
                Step 1 of 2
              </span>
              - Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "descriptionStep1NoStep2": <div>
              Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "identifierLabel": "UQ identifier (if available)",
            "nameAsPublishedHint": "Please type the name exactly as published",
            "nameAsPublishedLabel": "Name as published",
          }
        }
        onSubmit={[Function]}
        required={false}
        showContributorAssignment={false}
        showIdentifierLookup={false}
        showRoleInput={false}
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(List)
        style={
          Object {
            "marginBottom": 0,
          }
        }
      >
        <WithStyles(ContributorRowHeader)
          hideDelete={false}
          isInfinite={false}
          isNtro={false}
          onDeleteAll={[Function]}
          showContributorAssignment={false}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
      </WithStyles(List)>
      <WithStyles(List)
        classes={
          Object {
            "root": "ContributorList list ",
          }
        }
      >
        <WithStyles(WithTheme(WithWidth(ContributorRow)))
          canEdit={false}
          canMoveDown={true}
          canMoveUp={false}
          className="ContributorRow"
          contributor={
            Object {
              "displayName": "test 1",
            }
          }
          enableSelect={false}
          hideDelete={false}
          hideReorder={false}
          index={0}
          key="ContributorRow_0"
          onDelete={[Function]}
          onEdit={[Function]}
          onMoveDown={[Function]}
          onMoveUp={[Function]}
          onSelect={[Function]}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
        <WithStyles(WithTheme(WithWidth(ContributorRow)))
          canEdit={false}
          canMoveDown={false}
          canMoveUp={true}
          className="ContributorRow"
          contributor={
            Object {
              "displayName": "test 2",
            }
          }
          enableSelect={false}
          hideDelete={false}
          hideReorder={false}
          index={1}
          key="ContributorRow_1"
          onDelete={[Function]}
          onEdit={[Function]}
          onMoveDown={[Function]}
          onMoveUp={[Function]}
          onSelect={[Function]}
          showIdentifierLookup={false}
          showRoleInput={false}
        />
      </WithStyles(List)>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</div>
`;

exports[`ContributorsEditor should have a proper style generator 1`] = `
Object {
  "list": Object {
    "margin": "0",
    "marginBottom": 16,
    "maxHeight": 225,
    "overflow": "hidden",
    "width": "100%",
  },
  "scroll": Object {
    "overflowY": "scroll",
  },
}
`;

exports[`ContributorsEditor should not move contributor down 1`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <ContributorForm
        author={
          Object {
            "aut_id": 1,
          }
        }
        canEdit={false}
        classes={
          Object {
            "list": "list",
            "scroll": "scroll",
          }
        }
        contributor={Object {}}
        disableNameAsPublished={false}
        displayCancel={false}
        editMode={false}
        enableUqIdentifierOnAffiliationChange={true}
        hideDelete={false}
        hideReorder={false}
        isContributorAssigned={false}
        isNtro={false}
        key="null"
        locale={
          Object {
            "addButton": "Add author",
            "creatorRoleHint": "Role of the creator in relation to the dataset",
            "creatorRoleLabel": "Creator role",
            "descriptionStep1": <div>
              <span
                className="authorSteps"
              >
                Step 1 of 2
              </span>
              - Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "descriptionStep1NoStep2": <div>
              Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "identifierLabel": "UQ identifier (if available)",
            "nameAsPublishedHint": "Please type the name exactly as published",
            "nameAsPublishedLabel": "Name as published",
          }
        }
        onSubmit={[Function]}
        required={false}
        showContributorAssignment={false}
        showIdentifierLookup={false}
        showRoleInput={false}
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</div>
`;

exports[`ContributorsEditor should render error as html 1`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <ContributorForm
        author={
          Object {
            "aut_id": 1,
          }
        }
        canEdit={false}
        classes={
          Object {
            "list": "list",
            "scroll": "scroll",
          }
        }
        contributor={Object {}}
        disableNameAsPublished={false}
        displayCancel={false}
        editMode={false}
        enableUqIdentifierOnAffiliationChange={true}
        hideDelete={false}
        hideReorder={false}
        isContributorAssigned={false}
        isNtro={false}
        key="null"
        locale={
          Object {
            "addButton": "Add author",
            "creatorRoleHint": "Role of the creator in relation to the dataset",
            "creatorRoleLabel": "Creator role",
            "descriptionStep1": <div>
              <span
                className="authorSteps"
              >
                Step 1 of 2
              </span>
              - Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "descriptionStep1NoStep2": <div>
              Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "identifierLabel": "UQ identifier (if available)",
            "nameAsPublishedHint": "Please type the name exactly as published",
            "nameAsPublishedLabel": "Name as published",
          }
        }
        meta={
          Object {
            "error": <p>
              <span>
                test
              </span>
            </p>,
          }
        }
        onSubmit={[Function]}
        required={false}
        showContributorAssignment={false}
        showIdentifierLookup={false}
        showRoleInput={false}
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
  <WithStyles(Typography)
    color="error"
    variant="caption"
  >
    <span
      key="0/.0"
    >
      test
    </span>
  </WithStyles(Typography)>
</div>
`;

exports[`ContributorsEditor should render error as one child 1`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <ContributorForm
        author={
          Object {
            "aut_id": 1,
          }
        }
        canEdit={false}
        classes={
          Object {
            "list": "list",
            "scroll": "scroll",
          }
        }
        contributor={Object {}}
        disableNameAsPublished={false}
        displayCancel={false}
        editMode={false}
        enableUqIdentifierOnAffiliationChange={true}
        hideDelete={false}
        hideReorder={false}
        isContributorAssigned={false}
        isNtro={false}
        key="null"
        locale={
          Object {
            "addButton": "Add author",
            "creatorRoleHint": "Role of the creator in relation to the dataset",
            "creatorRoleLabel": "Creator role",
            "descriptionStep1": <div>
              <span
                className="authorSteps"
              >
                Step 1 of 2
              </span>
              - Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "descriptionStep1NoStep2": <div>
              Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "identifierLabel": "UQ identifier (if available)",
            "nameAsPublishedHint": "Please type the name exactly as published",
            "nameAsPublishedLabel": "Name as published",
          }
        }
        meta={
          Object {
            "error": <span>
              test
            </span>,
          }
        }
        onSubmit={[Function]}
        required={false}
        showContributorAssignment={false}
        showIdentifierLookup={false}
        showRoleInput={false}
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
  <WithStyles(Typography)
    color="error"
    variant="caption"
  >
    test
  </WithStyles(Typography)>
</div>
`;

exports[`ContributorsEditor should show validation error 1`] = `
<div>
  <WithStyles(Grid)
    container={true}
    spacing={8}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <ContributorForm
        author={
          Object {
            "aut_id": 1,
          }
        }
        canEdit={false}
        classes={
          Object {
            "list": "list",
            "scroll": "scroll",
          }
        }
        contributor={Object {}}
        contributors={Array []}
        disableNameAsPublished={false}
        displayCancel={false}
        editMode={false}
        enableUqIdentifierOnAffiliationChange={true}
        hideDelete={false}
        hideReorder={false}
        isContributorAssigned={false}
        isNtro={false}
        key="null"
        locale={
          Object {
            "addButton": "Add author",
            "creatorRoleHint": "Role of the creator in relation to the dataset",
            "creatorRoleLabel": "Creator role",
            "descriptionStep1": <div>
              <span
                className="authorSteps"
              >
                Step 1 of 2
              </span>
              - Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "descriptionStep1NoStep2": <div>
              Please 
              <b>
                add to a list of contributors below
              </b>
              , in the format and order that they are published.
            </div>,
            "identifierLabel": "UQ identifier (if available)",
            "nameAsPublishedHint": "Please type the name exactly as published",
            "nameAsPublishedLabel": "Name as published",
          }
        }
        meta={
          Object {
            "error": "This is a test error",
          }
        }
        onSubmit={[Function]}
        required={false}
        showContributorAssignment={false}
        showIdentifierLookup={false}
        showRoleInput={false}
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
  <WithStyles(Typography)
    color="error"
    variant="caption"
  >
    This is a test error
  </WithStyles(Typography)>
</div>
`;
