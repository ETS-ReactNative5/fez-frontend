// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`File Name Component  should display file name link 1`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction],
      "subscribe": [MockFunction],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <FileName
        allowDownload={true}
        fileName="UQ676287_OA.pdf"
        mimeType="application/pdf"
        onFileSelect={[MockFunction]}
        pid="UQ:676287"
        thumbnailFileName="test.jpg"
      >
        <div
          className="columns is-gapless is-mobile fileDetails"
        >
          <div
            className="column fileInfo"
          >
            <ExternalLink
              className="fileName"
              href="https://espace.library.uq.edu.au/view/UQ:676287/UQ676287_OA.pdf"
              openInNewIcon={true}
              rel="noopener noreferrer"
              target="_blank"
              title="UQ676287_OA.pdf"
            >
              <a
                className="fileName externalLink showIcon"
                href="https://espace.library.uq.edu.au/view/UQ:676287/UQ676287_OA.pdf"
                rel="noopener noreferrer"
                tabIndex="0"
                target="_blank"
                title="UQ676287_OA.pdf"
              >
                UQ676287_OA.pdf
              </a>
            </ExternalLink>
          </div>
        </div>
      </FileName>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`File Name Component  should render audio player 1`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction],
      "subscribe": [MockFunction],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <FileName
        allowDownload={true}
        fileName="UQ676287_OA.pdf"
        mimeType="audio/mp3"
        onFileSelect={[MockFunction]}
        pid="UQ:676287"
      >
        <div
          className="columns is-gapless is-mobile fileDetails"
        >
          <div
            className="column fileInfo"
          >
            <ExternalLink
              className="fileName"
              href="https://espace.library.uq.edu.au/view/UQ:676287/UQ676287_OA.pdf"
              openInNewIcon={true}
              rel="noopener noreferrer"
              target="_blank"
              title="UQ676287_OA.pdf"
            >
              <a
                className="fileName externalLink showIcon"
                href="https://espace.library.uq.edu.au/view/UQ:676287/UQ676287_OA.pdf"
                rel="noopener noreferrer"
                tabIndex="0"
                target="_blank"
                title="UQ676287_OA.pdf"
              >
                UQ676287_OA.pdf
              </a>
            </ExternalLink>
          </div>
          <div
            className="column is-narrow audioWrapper is-hidden-mobile"
          >
            <AudioPlayer
              fileName="UQ676287_OA.pdf"
              mimeType="audio/mp3"
              pid="UQ:676287"
            >
              <div>
                <audio>
                  <source
                    src="https://espace.library.uq.edu.au/view/UQ:676287/UQ676287_OA.pdf"
                    type="audio/mp3"
                  />
                </audio>
                <IconButton
                  aria-label="Click to play audio file UQ676287_OA.pdf"
                  className="audioButton play"
                  disableTouchRipple={false}
                  disabled={false}
                  iconStyle={Object {}}
                  onClick={[Function]}
                  tooltipPosition="bottom-center"
                  touch={true}
                >
                  <EnhancedButton
                    aria-label="Click to play audio file UQ676287_OA.pdf"
                    centerRipple={true}
                    className="audioButton play"
                    containerElement="button"
                    disableTouchRipple={false}
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onKeyboardFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseOut={[Function]}
                    onTouchStart={[Function]}
                    style={
                      Object {
                        "boxSizing": "border-box",
                        "fontSize": 0,
                        "height": 48,
                        "overflow": "visible",
                        "padding": 12,
                        "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                        "width": 48,
                      }
                    }
                    tabIndex={0}
                    type="button"
                  >
                    <button
                      aria-label="Click to play audio file UQ676287_OA.pdf"
                      className="audioButton play"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onMouseOut={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                          "background": "none",
                          "border": 10,
                          "boxSizing": "border-box",
                          "cursor": "pointer",
                          "display": "inline-block",
                          "fontFamily": "Roboto, sans-serif",
                          "fontSize": 0,
                          "fontWeight": "inherit",
                          "height": 48,
                          "margin": 0,
                          "muiPrepared": true,
                          "outline": "none",
                          "overflow": "visible",
                          "padding": 12,
                          "position": "relative",
                          "textDecoration": "none",
                          "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                          "verticalAlign": null,
                          "width": 48,
                        }
                      }
                      tabIndex={0}
                      type="button"
                    >
                      <TouchRipple
                        abortOnScroll={true}
                        centerRipple={true}
                        key="touchRipple"
                      >
                        <div
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchStart={[Function]}
                        >
                          <AvPlayArrow
                            key=".0"
                            style={Object {}}
                          >
                            <AvPlayArrow
                              style={Object {}}
                            >
                              <SvgIcon
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                style={Object {}}
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  style={
                                    Object {
                                      "color": "rgba(0, 0, 0, 0.87)",
                                      "display": "inline-block",
                                      "fill": "currentColor",
                                      "height": 24,
                                      "muiPrepared": true,
                                      "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                      "userSelect": "none",
                                      "width": 24,
                                    }
                                  }
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M8 5v14l11-7z"
                                  />
                                </svg>
                              </SvgIcon>
                            </AvPlayArrow>
                          </AvPlayArrow>
                        </div>
                      </TouchRipple>
                    </button>
                  </EnhancedButton>
                </IconButton>
              </div>
            </AudioPlayer>
          </div>
        </div>
      </FileName>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`File Name Component  should render component and display file name only 1`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction],
      "subscribe": [MockFunction],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <FileName
        fileName="UQ676287_OA.pdf"
        mimeType="application/pdf"
        onFileSelect={[MockFunction]}
        pid="UQ:676287"
      >
        <div
          className="columns is-gapless is-mobile fileDetails"
        >
          <div
            className="column fileInfo"
          >
            UQ676287_OA.pdf
          </div>
        </div>
      </FileName>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`File Name Component  should run onFileSelect function on click 1`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction],
      "subscribe": [MockFunction],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <FileName
        allowDownload={true}
        fileName="UQ676287_OA.pdf"
        mimeType="image/jpeg"
        onFileSelect={[MockFunction]}
        pid="UQ:676287"
        thumbnailFileName="test.jpg"
      >
        <div
          className="columns is-gapless is-mobile fileDetails"
        >
          <div
            className="column fileInfo"
          >
            <a
              className="fileName"
              href="#"
              onClick={[Function]}
              onKeyPress={[Function]}
            >
              UQ676287_OA.pdf
            </a>
          </div>
        </div>
      </FileName>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`File Name Component  should run onFileSelect function on key press 1`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction],
      "subscribe": [MockFunction],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <FileName
        allowDownload={true}
        fileName="UQ676287_OA.pdf"
        mimeType="image/jpeg"
        onFileSelect={[MockFunction]}
        pid="UQ:676287"
        thumbnailFileName="test.jpg"
      >
        <div
          className="columns is-gapless is-mobile fileDetails"
        >
          <div
            className="column fileInfo"
          >
            <a
              className="fileName"
              href="#"
              onClick={[Function]}
              onKeyPress={[Function]}
            >
              UQ676287_OA.pdf
            </a>
          </div>
        </div>
      </FileName>
    </Router>
  </MemoryRouter>
</Provider>
`;
