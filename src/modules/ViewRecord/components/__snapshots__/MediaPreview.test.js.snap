// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Media Preview Component  should call open new window on touch tap 1`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction],
      "subscribe": [MockFunction],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <MuiThemeProvider
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "hexToRGBA": [Function],
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {},
            "palette": Object {
              "accent": Object {
                "dark": "#005EA5",
                "light": "#288BED",
                "main": "#2377CB",
              },
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#790000",
                "light": "#ff0000",
                "main": "#c80000",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#370546",
                "light": "#760d98",
                "main": "#49075E",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#333333",
                "light": "#f2f2f2",
                "main": "#595959",
              },
              "success": Object {
                "dark": "#005000",
                "light": "#00a700",
                "main": "#007200",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
              "warning": Object {
                "dark": "#994708",
                "light": "#ff9a57",
                "main": "#f06f0d",
              },
              "white": Object {
                "main": "#FFFFFF",
              },
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
              "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
              "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
              "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
              "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
              "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
              "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
              "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
              "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
              "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
              "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
              "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
              "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
              "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
              "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
              "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
              "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
              "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "status": Object {
              "danger": "#f44336",
              "warning": "#ff9800",
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "lineHeight": "1.46429em",
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "lineHeight": "1.71429em",
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "lineHeight": "1.375em",
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 300,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 300,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 200,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 200,
              "fontWeightMedium": 400,
              "fontWeightRegular": 300,
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "lineHeight": "1.35417em",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "lineHeight": "1.5em",
              },
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "lineHeight": "1.16667em",
              },
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
      >
        <MediaPreview
          mediaUrl="https://test.com/test.jpg"
          mimeType="text/plain"
          onClose={[MockFunction]}
          previewMediaUrl="https://test.com/preview_test.jpg"
        >
          <StandardCard
            className="mediaPreview"
            title="Image preview"
          >
            <WithStyles(Cards)
              className="mediaPreview"
              title="Image preview"
            >
              <Cards
                className="mediaPreview"
                classes={
                  Object {
                    "card": "Cards-card-1",
                    "cardContent": "Cards-cardContent-4",
                    "cardHeader": "Cards-cardHeader-3",
                    "cardHeaderPurple": "Cards-cardHeaderPurple-2",
                  }
                }
                theme={
                  Object {
                    "breakpoints": Object {
                      "between": [Function],
                      "down": [Function],
                      "keys": Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ],
                      "only": [Function],
                      "up": [Function],
                      "values": Object {
                        "lg": 1280,
                        "md": 960,
                        "sm": 600,
                        "xl": 1920,
                        "xs": 0,
                      },
                      "width": [Function],
                    },
                    "direction": "ltr",
                    "hexToRGBA": [Function],
                    "mixins": Object {
                      "gutters": [Function],
                      "toolbar": Object {
                        "@media (min-width:0px) and (orientation: landscape)": Object {
                          "minHeight": 48,
                        },
                        "@media (min-width:600px)": Object {
                          "minHeight": 64,
                        },
                        "minHeight": 56,
                      },
                    },
                    "overrides": Object {},
                    "palette": Object {
                      "accent": Object {
                        "dark": "#005EA5",
                        "light": "#288BED",
                        "main": "#2377CB",
                      },
                      "action": Object {
                        "active": "rgba(0, 0, 0, 0.54)",
                        "disabled": "rgba(0, 0, 0, 0.26)",
                        "disabledBackground": "rgba(0, 0, 0, 0.12)",
                        "hover": "rgba(0, 0, 0, 0.08)",
                        "hoverOpacity": 0.08,
                        "selected": "rgba(0, 0, 0, 0.14)",
                      },
                      "augmentColor": [Function],
                      "background": Object {
                        "default": "#fafafa",
                        "paper": "#fff",
                      },
                      "common": Object {
                        "black": "#000",
                        "white": "#fff",
                      },
                      "contrastThreshold": 3,
                      "divider": "rgba(0, 0, 0, 0.12)",
                      "error": Object {
                        "contrastText": "#fff",
                        "dark": "#790000",
                        "light": "#ff0000",
                        "main": "#c80000",
                      },
                      "getContrastText": [Function],
                      "grey": Object {
                        "100": "#f5f5f5",
                        "200": "#eeeeee",
                        "300": "#e0e0e0",
                        "400": "#bdbdbd",
                        "50": "#fafafa",
                        "500": "#9e9e9e",
                        "600": "#757575",
                        "700": "#616161",
                        "800": "#424242",
                        "900": "#212121",
                        "A100": "#d5d5d5",
                        "A200": "#aaaaaa",
                        "A400": "#303030",
                        "A700": "#616161",
                      },
                      "primary": Object {
                        "contrastText": "#fff",
                        "dark": "#370546",
                        "light": "#760d98",
                        "main": "#49075E",
                      },
                      "secondary": Object {
                        "contrastText": "#fff",
                        "dark": "#333333",
                        "light": "#f2f2f2",
                        "main": "#595959",
                      },
                      "success": Object {
                        "dark": "#005000",
                        "light": "#00a700",
                        "main": "#007200",
                      },
                      "text": Object {
                        "disabled": "rgba(0, 0, 0, 0.38)",
                        "hint": "rgba(0, 0, 0, 0.38)",
                        "primary": "rgba(0, 0, 0, 0.87)",
                        "secondary": "rgba(0, 0, 0, 0.54)",
                      },
                      "tonalOffset": 0.2,
                      "type": "light",
                      "warning": Object {
                        "dark": "#994708",
                        "light": "#ff9a57",
                        "main": "#f06f0d",
                      },
                      "white": Object {
                        "main": "#FFFFFF",
                      },
                    },
                    "props": Object {},
                    "shadows": Array [
                      "none",
                      "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                      "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                      "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                      "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                      "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                      "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                      "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                      "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                      "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                      "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                      "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                      "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                      "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                      "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                      "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                      "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                      "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                      "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                      "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                      "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                      "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                      "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                      "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                      "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                    ],
                    "shape": Object {
                      "borderRadius": 4,
                    },
                    "spacing": Object {
                      "unit": 8,
                    },
                    "status": Object {
                      "danger": "#f44336",
                      "warning": "#ff9800",
                    },
                    "transitions": Object {
                      "create": [Function],
                      "duration": Object {
                        "complex": 375,
                        "enteringScreen": 225,
                        "leavingScreen": 195,
                        "short": 250,
                        "shorter": 200,
                        "shortest": 150,
                        "standard": 300,
                      },
                      "easing": Object {
                        "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                        "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                        "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                        "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                      },
                      "getAutoHeightDuration": [Function],
                    },
                    "typography": Object {
                      "body1": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 300,
                        "lineHeight": "1.46429em",
                      },
                      "body2": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "lineHeight": "1.71429em",
                      },
                      "button": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.875rem",
                        "fontWeight": 400,
                        "textTransform": "uppercase",
                      },
                      "caption": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "0.75rem",
                        "fontWeight": 300,
                        "lineHeight": "1.375em",
                      },
                      "display1": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.125rem",
                        "fontWeight": 300,
                        "lineHeight": "1.20588em",
                      },
                      "display2": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "2.8125rem",
                        "fontWeight": 300,
                        "lineHeight": "1.13333em",
                        "marginLeft": "-.02em",
                      },
                      "display3": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "3.5rem",
                        "fontWeight": 300,
                        "letterSpacing": "-.02em",
                        "lineHeight": "1.30357em",
                        "marginLeft": "-.02em",
                      },
                      "display4": Object {
                        "color": "rgba(0, 0, 0, 0.54)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "7rem",
                        "fontWeight": 200,
                        "letterSpacing": "-.04em",
                        "lineHeight": "1.14286em",
                        "marginLeft": "-.04em",
                      },
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": 14,
                      "fontWeightLight": 200,
                      "fontWeightMedium": 400,
                      "fontWeightRegular": 300,
                      "headline": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 300,
                        "lineHeight": "1.35417em",
                      },
                      "pxToRem": [Function],
                      "round": [Function],
                      "subheading": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1rem",
                        "fontWeight": 300,
                        "lineHeight": "1.5em",
                      },
                      "title": Object {
                        "color": "rgba(0, 0, 0, 0.87)",
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": "1.5rem",
                        "fontWeight": 300,
                        "lineHeight": "1.16667em",
                      },
                    },
                    "zIndex": Object {
                      "appBar": 1100,
                      "drawer": 1200,
                      "mobileStepper": 1000,
                      "modal": 1300,
                      "snackbar": 1400,
                      "tooltip": 1500,
                    },
                  }
                }
                title="Image preview"
              >
                <WithStyles(Card)
                  className="Cards-card-1"
                >
                  <Card
                    className="Cards-card-1"
                    classes={
                      Object {
                        "root": "MuiCard-root-5",
                      }
                    }
                    raised={false}
                  >
                    <WithStyles(Paper)
                      className="MuiCard-root-5 Cards-card-1"
                      elevation={1}
                    >
                      <Paper
                        className="MuiCard-root-5 Cards-card-1"
                        classes={
                          Object {
                            "elevation0": "MuiPaper-elevation0-8",
                            "elevation1": "MuiPaper-elevation1-9",
                            "elevation10": "MuiPaper-elevation10-18",
                            "elevation11": "MuiPaper-elevation11-19",
                            "elevation12": "MuiPaper-elevation12-20",
                            "elevation13": "MuiPaper-elevation13-21",
                            "elevation14": "MuiPaper-elevation14-22",
                            "elevation15": "MuiPaper-elevation15-23",
                            "elevation16": "MuiPaper-elevation16-24",
                            "elevation17": "MuiPaper-elevation17-25",
                            "elevation18": "MuiPaper-elevation18-26",
                            "elevation19": "MuiPaper-elevation19-27",
                            "elevation2": "MuiPaper-elevation2-10",
                            "elevation20": "MuiPaper-elevation20-28",
                            "elevation21": "MuiPaper-elevation21-29",
                            "elevation22": "MuiPaper-elevation22-30",
                            "elevation23": "MuiPaper-elevation23-31",
                            "elevation24": "MuiPaper-elevation24-32",
                            "elevation3": "MuiPaper-elevation3-11",
                            "elevation4": "MuiPaper-elevation4-12",
                            "elevation5": "MuiPaper-elevation5-13",
                            "elevation6": "MuiPaper-elevation6-14",
                            "elevation7": "MuiPaper-elevation7-15",
                            "elevation8": "MuiPaper-elevation8-16",
                            "elevation9": "MuiPaper-elevation9-17",
                            "root": "MuiPaper-root-6",
                            "rounded": "MuiPaper-rounded-7",
                          }
                        }
                        component="div"
                        elevation={1}
                        square={false}
                      >
                        <div
                          className="MuiPaper-root-6 MuiPaper-elevation1-9 MuiPaper-rounded-7 MuiCard-root-5 Cards-card-1"
                        >
                          <WithStyles(Grid)
                            container={true}
                            spacing={24}
                          >
                            <Grid
                              alignContent="stretch"
                              alignItems="stretch"
                              classes={
                                Object {
                                  "align-content-xs-center": "MuiGrid-align-content-xs-center-45",
                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-47",
                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-46",
                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-49",
                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-48",
                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-44",
                                  "align-items-xs-center": "MuiGrid-align-items-xs-center-41",
                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-43",
                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-42",
                                  "container": "MuiGrid-container-33",
                                  "direction-xs-column": "MuiGrid-direction-xs-column-36",
                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-37",
                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-38",
                                  "grid-lg-1": "MuiGrid-grid-lg-1-104",
                                  "grid-lg-10": "MuiGrid-grid-lg-10-113",
                                  "grid-lg-11": "MuiGrid-grid-lg-11-114",
                                  "grid-lg-12": "MuiGrid-grid-lg-12-115",
                                  "grid-lg-2": "MuiGrid-grid-lg-2-105",
                                  "grid-lg-3": "MuiGrid-grid-lg-3-106",
                                  "grid-lg-4": "MuiGrid-grid-lg-4-107",
                                  "grid-lg-5": "MuiGrid-grid-lg-5-108",
                                  "grid-lg-6": "MuiGrid-grid-lg-6-109",
                                  "grid-lg-7": "MuiGrid-grid-lg-7-110",
                                  "grid-lg-8": "MuiGrid-grid-lg-8-111",
                                  "grid-lg-9": "MuiGrid-grid-lg-9-112",
                                  "grid-lg-auto": "MuiGrid-grid-lg-auto-102",
                                  "grid-lg-true": "MuiGrid-grid-lg-true-103",
                                  "grid-md-1": "MuiGrid-grid-md-1-90",
                                  "grid-md-10": "MuiGrid-grid-md-10-99",
                                  "grid-md-11": "MuiGrid-grid-md-11-100",
                                  "grid-md-12": "MuiGrid-grid-md-12-101",
                                  "grid-md-2": "MuiGrid-grid-md-2-91",
                                  "grid-md-3": "MuiGrid-grid-md-3-92",
                                  "grid-md-4": "MuiGrid-grid-md-4-93",
                                  "grid-md-5": "MuiGrid-grid-md-5-94",
                                  "grid-md-6": "MuiGrid-grid-md-6-95",
                                  "grid-md-7": "MuiGrid-grid-md-7-96",
                                  "grid-md-8": "MuiGrid-grid-md-8-97",
                                  "grid-md-9": "MuiGrid-grid-md-9-98",
                                  "grid-md-auto": "MuiGrid-grid-md-auto-88",
                                  "grid-md-true": "MuiGrid-grid-md-true-89",
                                  "grid-sm-1": "MuiGrid-grid-sm-1-76",
                                  "grid-sm-10": "MuiGrid-grid-sm-10-85",
                                  "grid-sm-11": "MuiGrid-grid-sm-11-86",
                                  "grid-sm-12": "MuiGrid-grid-sm-12-87",
                                  "grid-sm-2": "MuiGrid-grid-sm-2-77",
                                  "grid-sm-3": "MuiGrid-grid-sm-3-78",
                                  "grid-sm-4": "MuiGrid-grid-sm-4-79",
                                  "grid-sm-5": "MuiGrid-grid-sm-5-80",
                                  "grid-sm-6": "MuiGrid-grid-sm-6-81",
                                  "grid-sm-7": "MuiGrid-grid-sm-7-82",
                                  "grid-sm-8": "MuiGrid-grid-sm-8-83",
                                  "grid-sm-9": "MuiGrid-grid-sm-9-84",
                                  "grid-sm-auto": "MuiGrid-grid-sm-auto-74",
                                  "grid-sm-true": "MuiGrid-grid-sm-true-75",
                                  "grid-xl-1": "MuiGrid-grid-xl-1-118",
                                  "grid-xl-10": "MuiGrid-grid-xl-10-127",
                                  "grid-xl-11": "MuiGrid-grid-xl-11-128",
                                  "grid-xl-12": "MuiGrid-grid-xl-12-129",
                                  "grid-xl-2": "MuiGrid-grid-xl-2-119",
                                  "grid-xl-3": "MuiGrid-grid-xl-3-120",
                                  "grid-xl-4": "MuiGrid-grid-xl-4-121",
                                  "grid-xl-5": "MuiGrid-grid-xl-5-122",
                                  "grid-xl-6": "MuiGrid-grid-xl-6-123",
                                  "grid-xl-7": "MuiGrid-grid-xl-7-124",
                                  "grid-xl-8": "MuiGrid-grid-xl-8-125",
                                  "grid-xl-9": "MuiGrid-grid-xl-9-126",
                                  "grid-xl-auto": "MuiGrid-grid-xl-auto-116",
                                  "grid-xl-true": "MuiGrid-grid-xl-true-117",
                                  "grid-xs-1": "MuiGrid-grid-xs-1-62",
                                  "grid-xs-10": "MuiGrid-grid-xs-10-71",
                                  "grid-xs-11": "MuiGrid-grid-xs-11-72",
                                  "grid-xs-12": "MuiGrid-grid-xs-12-73",
                                  "grid-xs-2": "MuiGrid-grid-xs-2-63",
                                  "grid-xs-3": "MuiGrid-grid-xs-3-64",
                                  "grid-xs-4": "MuiGrid-grid-xs-4-65",
                                  "grid-xs-5": "MuiGrid-grid-xs-5-66",
                                  "grid-xs-6": "MuiGrid-grid-xs-6-67",
                                  "grid-xs-7": "MuiGrid-grid-xs-7-68",
                                  "grid-xs-8": "MuiGrid-grid-xs-8-69",
                                  "grid-xs-9": "MuiGrid-grid-xs-9-70",
                                  "grid-xs-auto": "MuiGrid-grid-xs-auto-60",
                                  "grid-xs-true": "MuiGrid-grid-xs-true-61",
                                  "item": "MuiGrid-item-34",
                                  "justify-xs-center": "MuiGrid-justify-xs-center-50",
                                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-51",
                                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around-53",
                                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between-52",
                                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-54",
                                  "spacing-xs-16": "MuiGrid-spacing-xs-16-56",
                                  "spacing-xs-24": "MuiGrid-spacing-xs-24-57",
                                  "spacing-xs-32": "MuiGrid-spacing-xs-32-58",
                                  "spacing-xs-40": "MuiGrid-spacing-xs-40-59",
                                  "spacing-xs-8": "MuiGrid-spacing-xs-8-55",
                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-39",
                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-40",
                                  "zeroMinWidth": "MuiGrid-zeroMinWidth-35",
                                }
                              }
                              component="div"
                              container={true}
                              direction="row"
                              item={false}
                              justify="flex-start"
                              lg={false}
                              md={false}
                              sm={false}
                              spacing={24}
                              wrap="wrap"
                              xl={false}
                              xs={false}
                              zeroMinWidth={false}
                            >
                              <div
                                className="MuiGrid-container-33 MuiGrid-spacing-xs-24-57"
                              >
                                <WithStyles(Grid)
                                  className="Cards-cardHeader-3"
                                  item={true}
                                  xs={true}
                                >
                                  <Grid
                                    alignContent="stretch"
                                    alignItems="stretch"
                                    className="Cards-cardHeader-3"
                                    classes={
                                      Object {
                                        "align-content-xs-center": "MuiGrid-align-content-xs-center-45",
                                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-47",
                                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-46",
                                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-49",
                                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-48",
                                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-44",
                                        "align-items-xs-center": "MuiGrid-align-items-xs-center-41",
                                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-43",
                                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-42",
                                        "container": "MuiGrid-container-33",
                                        "direction-xs-column": "MuiGrid-direction-xs-column-36",
                                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-37",
                                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-38",
                                        "grid-lg-1": "MuiGrid-grid-lg-1-104",
                                        "grid-lg-10": "MuiGrid-grid-lg-10-113",
                                        "grid-lg-11": "MuiGrid-grid-lg-11-114",
                                        "grid-lg-12": "MuiGrid-grid-lg-12-115",
                                        "grid-lg-2": "MuiGrid-grid-lg-2-105",
                                        "grid-lg-3": "MuiGrid-grid-lg-3-106",
                                        "grid-lg-4": "MuiGrid-grid-lg-4-107",
                                        "grid-lg-5": "MuiGrid-grid-lg-5-108",
                                        "grid-lg-6": "MuiGrid-grid-lg-6-109",
                                        "grid-lg-7": "MuiGrid-grid-lg-7-110",
                                        "grid-lg-8": "MuiGrid-grid-lg-8-111",
                                        "grid-lg-9": "MuiGrid-grid-lg-9-112",
                                        "grid-lg-auto": "MuiGrid-grid-lg-auto-102",
                                        "grid-lg-true": "MuiGrid-grid-lg-true-103",
                                        "grid-md-1": "MuiGrid-grid-md-1-90",
                                        "grid-md-10": "MuiGrid-grid-md-10-99",
                                        "grid-md-11": "MuiGrid-grid-md-11-100",
                                        "grid-md-12": "MuiGrid-grid-md-12-101",
                                        "grid-md-2": "MuiGrid-grid-md-2-91",
                                        "grid-md-3": "MuiGrid-grid-md-3-92",
                                        "grid-md-4": "MuiGrid-grid-md-4-93",
                                        "grid-md-5": "MuiGrid-grid-md-5-94",
                                        "grid-md-6": "MuiGrid-grid-md-6-95",
                                        "grid-md-7": "MuiGrid-grid-md-7-96",
                                        "grid-md-8": "MuiGrid-grid-md-8-97",
                                        "grid-md-9": "MuiGrid-grid-md-9-98",
                                        "grid-md-auto": "MuiGrid-grid-md-auto-88",
                                        "grid-md-true": "MuiGrid-grid-md-true-89",
                                        "grid-sm-1": "MuiGrid-grid-sm-1-76",
                                        "grid-sm-10": "MuiGrid-grid-sm-10-85",
                                        "grid-sm-11": "MuiGrid-grid-sm-11-86",
                                        "grid-sm-12": "MuiGrid-grid-sm-12-87",
                                        "grid-sm-2": "MuiGrid-grid-sm-2-77",
                                        "grid-sm-3": "MuiGrid-grid-sm-3-78",
                                        "grid-sm-4": "MuiGrid-grid-sm-4-79",
                                        "grid-sm-5": "MuiGrid-grid-sm-5-80",
                                        "grid-sm-6": "MuiGrid-grid-sm-6-81",
                                        "grid-sm-7": "MuiGrid-grid-sm-7-82",
                                        "grid-sm-8": "MuiGrid-grid-sm-8-83",
                                        "grid-sm-9": "MuiGrid-grid-sm-9-84",
                                        "grid-sm-auto": "MuiGrid-grid-sm-auto-74",
                                        "grid-sm-true": "MuiGrid-grid-sm-true-75",
                                        "grid-xl-1": "MuiGrid-grid-xl-1-118",
                                        "grid-xl-10": "MuiGrid-grid-xl-10-127",
                                        "grid-xl-11": "MuiGrid-grid-xl-11-128",
                                        "grid-xl-12": "MuiGrid-grid-xl-12-129",
                                        "grid-xl-2": "MuiGrid-grid-xl-2-119",
                                        "grid-xl-3": "MuiGrid-grid-xl-3-120",
                                        "grid-xl-4": "MuiGrid-grid-xl-4-121",
                                        "grid-xl-5": "MuiGrid-grid-xl-5-122",
                                        "grid-xl-6": "MuiGrid-grid-xl-6-123",
                                        "grid-xl-7": "MuiGrid-grid-xl-7-124",
                                        "grid-xl-8": "MuiGrid-grid-xl-8-125",
                                        "grid-xl-9": "MuiGrid-grid-xl-9-126",
                                        "grid-xl-auto": "MuiGrid-grid-xl-auto-116",
                                        "grid-xl-true": "MuiGrid-grid-xl-true-117",
                                        "grid-xs-1": "MuiGrid-grid-xs-1-62",
                                        "grid-xs-10": "MuiGrid-grid-xs-10-71",
                                        "grid-xs-11": "MuiGrid-grid-xs-11-72",
                                        "grid-xs-12": "MuiGrid-grid-xs-12-73",
                                        "grid-xs-2": "MuiGrid-grid-xs-2-63",
                                        "grid-xs-3": "MuiGrid-grid-xs-3-64",
                                        "grid-xs-4": "MuiGrid-grid-xs-4-65",
                                        "grid-xs-5": "MuiGrid-grid-xs-5-66",
                                        "grid-xs-6": "MuiGrid-grid-xs-6-67",
                                        "grid-xs-7": "MuiGrid-grid-xs-7-68",
                                        "grid-xs-8": "MuiGrid-grid-xs-8-69",
                                        "grid-xs-9": "MuiGrid-grid-xs-9-70",
                                        "grid-xs-auto": "MuiGrid-grid-xs-auto-60",
                                        "grid-xs-true": "MuiGrid-grid-xs-true-61",
                                        "item": "MuiGrid-item-34",
                                        "justify-xs-center": "MuiGrid-justify-xs-center-50",
                                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-51",
                                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around-53",
                                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between-52",
                                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-54",
                                        "spacing-xs-16": "MuiGrid-spacing-xs-16-56",
                                        "spacing-xs-24": "MuiGrid-spacing-xs-24-57",
                                        "spacing-xs-32": "MuiGrid-spacing-xs-32-58",
                                        "spacing-xs-40": "MuiGrid-spacing-xs-40-59",
                                        "spacing-xs-8": "MuiGrid-spacing-xs-8-55",
                                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-39",
                                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-40",
                                        "zeroMinWidth": "MuiGrid-zeroMinWidth-35",
                                      }
                                    }
                                    component="div"
                                    container={false}
                                    direction="row"
                                    item={true}
                                    justify="flex-start"
                                    lg={false}
                                    md={false}
                                    sm={false}
                                    spacing={0}
                                    wrap="wrap"
                                    xl={false}
                                    xs={true}
                                    zeroMinWidth={false}
                                  >
                                    <div
                                      className="MuiGrid-item-34 MuiGrid-grid-xs-true-61 Cards-cardHeader-3"
                                    >
                                      <WithStyles(Typography)
                                        color="inherit"
                                        variant="title"
                                      >
                                        <Typography
                                          align="inherit"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter-143",
                                              "alignJustify": "MuiTypography-alignJustify-145",
                                              "alignLeft": "MuiTypography-alignLeft-142",
                                              "alignRight": "MuiTypography-alignRight-144",
                                              "body1": "MuiTypography-body1-139",
                                              "body2": "MuiTypography-body2-138",
                                              "button": "MuiTypography-button-141",
                                              "caption": "MuiTypography-caption-140",
                                              "colorError": "MuiTypography-colorError-154",
                                              "colorInherit": "MuiTypography-colorInherit-149",
                                              "colorPrimary": "MuiTypography-colorPrimary-150",
                                              "colorSecondary": "MuiTypography-colorSecondary-151",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary-152",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary-153",
                                              "display1": "MuiTypography-display1-134",
                                              "display2": "MuiTypography-display2-133",
                                              "display3": "MuiTypography-display3-132",
                                              "display4": "MuiTypography-display4-131",
                                              "gutterBottom": "MuiTypography-gutterBottom-147",
                                              "headline": "MuiTypography-headline-135",
                                              "noWrap": "MuiTypography-noWrap-146",
                                              "paragraph": "MuiTypography-paragraph-148",
                                              "root": "MuiTypography-root-130",
                                              "subheading": "MuiTypography-subheading-137",
                                              "title": "MuiTypography-title-136",
                                            }
                                          }
                                          color="inherit"
                                          gutterBottom={false}
                                          headlineMapping={
                                            Object {
                                              "body1": "p",
                                              "body2": "aside",
                                              "display1": "h1",
                                              "display2": "h1",
                                              "display3": "h1",
                                              "display4": "h1",
                                              "headline": "h1",
                                              "subheading": "h3",
                                              "title": "h2",
                                            }
                                          }
                                          noWrap={false}
                                          paragraph={false}
                                          variant="title"
                                        >
                                          <h2
                                            className="MuiTypography-root-130 MuiTypography-title-136 MuiTypography-colorInherit-149"
                                          >
                                            Image preview
                                          </h2>
                                        </Typography>
                                      </WithStyles(Typography)>
                                    </div>
                                  </Grid>
                                </WithStyles(Grid)>
                              </div>
                            </Grid>
                          </WithStyles(Grid)>
                          <WithStyles(CardContent)>
                            <CardContent
                              classes={
                                Object {
                                  "root": "MuiCardContent-root-155",
                                }
                              }
                              component="div"
                            >
                              <div
                                className="MuiCardContent-root-155"
                              >
                                <WithStyles(Grid)
                                  container={true}
                                  spacing={24}
                                >
                                  <Grid
                                    alignContent="stretch"
                                    alignItems="stretch"
                                    classes={
                                      Object {
                                        "align-content-xs-center": "MuiGrid-align-content-xs-center-45",
                                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-47",
                                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-46",
                                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-49",
                                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-48",
                                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-44",
                                        "align-items-xs-center": "MuiGrid-align-items-xs-center-41",
                                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-43",
                                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-42",
                                        "container": "MuiGrid-container-33",
                                        "direction-xs-column": "MuiGrid-direction-xs-column-36",
                                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-37",
                                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-38",
                                        "grid-lg-1": "MuiGrid-grid-lg-1-104",
                                        "grid-lg-10": "MuiGrid-grid-lg-10-113",
                                        "grid-lg-11": "MuiGrid-grid-lg-11-114",
                                        "grid-lg-12": "MuiGrid-grid-lg-12-115",
                                        "grid-lg-2": "MuiGrid-grid-lg-2-105",
                                        "grid-lg-3": "MuiGrid-grid-lg-3-106",
                                        "grid-lg-4": "MuiGrid-grid-lg-4-107",
                                        "grid-lg-5": "MuiGrid-grid-lg-5-108",
                                        "grid-lg-6": "MuiGrid-grid-lg-6-109",
                                        "grid-lg-7": "MuiGrid-grid-lg-7-110",
                                        "grid-lg-8": "MuiGrid-grid-lg-8-111",
                                        "grid-lg-9": "MuiGrid-grid-lg-9-112",
                                        "grid-lg-auto": "MuiGrid-grid-lg-auto-102",
                                        "grid-lg-true": "MuiGrid-grid-lg-true-103",
                                        "grid-md-1": "MuiGrid-grid-md-1-90",
                                        "grid-md-10": "MuiGrid-grid-md-10-99",
                                        "grid-md-11": "MuiGrid-grid-md-11-100",
                                        "grid-md-12": "MuiGrid-grid-md-12-101",
                                        "grid-md-2": "MuiGrid-grid-md-2-91",
                                        "grid-md-3": "MuiGrid-grid-md-3-92",
                                        "grid-md-4": "MuiGrid-grid-md-4-93",
                                        "grid-md-5": "MuiGrid-grid-md-5-94",
                                        "grid-md-6": "MuiGrid-grid-md-6-95",
                                        "grid-md-7": "MuiGrid-grid-md-7-96",
                                        "grid-md-8": "MuiGrid-grid-md-8-97",
                                        "grid-md-9": "MuiGrid-grid-md-9-98",
                                        "grid-md-auto": "MuiGrid-grid-md-auto-88",
                                        "grid-md-true": "MuiGrid-grid-md-true-89",
                                        "grid-sm-1": "MuiGrid-grid-sm-1-76",
                                        "grid-sm-10": "MuiGrid-grid-sm-10-85",
                                        "grid-sm-11": "MuiGrid-grid-sm-11-86",
                                        "grid-sm-12": "MuiGrid-grid-sm-12-87",
                                        "grid-sm-2": "MuiGrid-grid-sm-2-77",
                                        "grid-sm-3": "MuiGrid-grid-sm-3-78",
                                        "grid-sm-4": "MuiGrid-grid-sm-4-79",
                                        "grid-sm-5": "MuiGrid-grid-sm-5-80",
                                        "grid-sm-6": "MuiGrid-grid-sm-6-81",
                                        "grid-sm-7": "MuiGrid-grid-sm-7-82",
                                        "grid-sm-8": "MuiGrid-grid-sm-8-83",
                                        "grid-sm-9": "MuiGrid-grid-sm-9-84",
                                        "grid-sm-auto": "MuiGrid-grid-sm-auto-74",
                                        "grid-sm-true": "MuiGrid-grid-sm-true-75",
                                        "grid-xl-1": "MuiGrid-grid-xl-1-118",
                                        "grid-xl-10": "MuiGrid-grid-xl-10-127",
                                        "grid-xl-11": "MuiGrid-grid-xl-11-128",
                                        "grid-xl-12": "MuiGrid-grid-xl-12-129",
                                        "grid-xl-2": "MuiGrid-grid-xl-2-119",
                                        "grid-xl-3": "MuiGrid-grid-xl-3-120",
                                        "grid-xl-4": "MuiGrid-grid-xl-4-121",
                                        "grid-xl-5": "MuiGrid-grid-xl-5-122",
                                        "grid-xl-6": "MuiGrid-grid-xl-6-123",
                                        "grid-xl-7": "MuiGrid-grid-xl-7-124",
                                        "grid-xl-8": "MuiGrid-grid-xl-8-125",
                                        "grid-xl-9": "MuiGrid-grid-xl-9-126",
                                        "grid-xl-auto": "MuiGrid-grid-xl-auto-116",
                                        "grid-xl-true": "MuiGrid-grid-xl-true-117",
                                        "grid-xs-1": "MuiGrid-grid-xs-1-62",
                                        "grid-xs-10": "MuiGrid-grid-xs-10-71",
                                        "grid-xs-11": "MuiGrid-grid-xs-11-72",
                                        "grid-xs-12": "MuiGrid-grid-xs-12-73",
                                        "grid-xs-2": "MuiGrid-grid-xs-2-63",
                                        "grid-xs-3": "MuiGrid-grid-xs-3-64",
                                        "grid-xs-4": "MuiGrid-grid-xs-4-65",
                                        "grid-xs-5": "MuiGrid-grid-xs-5-66",
                                        "grid-xs-6": "MuiGrid-grid-xs-6-67",
                                        "grid-xs-7": "MuiGrid-grid-xs-7-68",
                                        "grid-xs-8": "MuiGrid-grid-xs-8-69",
                                        "grid-xs-9": "MuiGrid-grid-xs-9-70",
                                        "grid-xs-auto": "MuiGrid-grid-xs-auto-60",
                                        "grid-xs-true": "MuiGrid-grid-xs-true-61",
                                        "item": "MuiGrid-item-34",
                                        "justify-xs-center": "MuiGrid-justify-xs-center-50",
                                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-51",
                                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around-53",
                                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between-52",
                                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-54",
                                        "spacing-xs-16": "MuiGrid-spacing-xs-16-56",
                                        "spacing-xs-24": "MuiGrid-spacing-xs-24-57",
                                        "spacing-xs-32": "MuiGrid-spacing-xs-32-58",
                                        "spacing-xs-40": "MuiGrid-spacing-xs-40-59",
                                        "spacing-xs-8": "MuiGrid-spacing-xs-8-55",
                                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-39",
                                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-40",
                                        "zeroMinWidth": "MuiGrid-zeroMinWidth-35",
                                      }
                                    }
                                    component="div"
                                    container={true}
                                    direction="row"
                                    item={false}
                                    justify="flex-start"
                                    lg={false}
                                    md={false}
                                    sm={false}
                                    spacing={24}
                                    wrap="wrap"
                                    xl={false}
                                    xs={false}
                                    zeroMinWidth={false}
                                  >
                                    <div
                                      className="MuiGrid-container-33 MuiGrid-spacing-xs-24-57"
                                    >
                                      <WithStyles(Grid)
                                        className="Cards-cardContent-4"
                                        item={true}
                                        xs={12}
                                      >
                                        <Grid
                                          alignContent="stretch"
                                          alignItems="stretch"
                                          className="Cards-cardContent-4"
                                          classes={
                                            Object {
                                              "align-content-xs-center": "MuiGrid-align-content-xs-center-45",
                                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-47",
                                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-46",
                                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-49",
                                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-48",
                                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-44",
                                              "align-items-xs-center": "MuiGrid-align-items-xs-center-41",
                                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-43",
                                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-42",
                                              "container": "MuiGrid-container-33",
                                              "direction-xs-column": "MuiGrid-direction-xs-column-36",
                                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-37",
                                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-38",
                                              "grid-lg-1": "MuiGrid-grid-lg-1-104",
                                              "grid-lg-10": "MuiGrid-grid-lg-10-113",
                                              "grid-lg-11": "MuiGrid-grid-lg-11-114",
                                              "grid-lg-12": "MuiGrid-grid-lg-12-115",
                                              "grid-lg-2": "MuiGrid-grid-lg-2-105",
                                              "grid-lg-3": "MuiGrid-grid-lg-3-106",
                                              "grid-lg-4": "MuiGrid-grid-lg-4-107",
                                              "grid-lg-5": "MuiGrid-grid-lg-5-108",
                                              "grid-lg-6": "MuiGrid-grid-lg-6-109",
                                              "grid-lg-7": "MuiGrid-grid-lg-7-110",
                                              "grid-lg-8": "MuiGrid-grid-lg-8-111",
                                              "grid-lg-9": "MuiGrid-grid-lg-9-112",
                                              "grid-lg-auto": "MuiGrid-grid-lg-auto-102",
                                              "grid-lg-true": "MuiGrid-grid-lg-true-103",
                                              "grid-md-1": "MuiGrid-grid-md-1-90",
                                              "grid-md-10": "MuiGrid-grid-md-10-99",
                                              "grid-md-11": "MuiGrid-grid-md-11-100",
                                              "grid-md-12": "MuiGrid-grid-md-12-101",
                                              "grid-md-2": "MuiGrid-grid-md-2-91",
                                              "grid-md-3": "MuiGrid-grid-md-3-92",
                                              "grid-md-4": "MuiGrid-grid-md-4-93",
                                              "grid-md-5": "MuiGrid-grid-md-5-94",
                                              "grid-md-6": "MuiGrid-grid-md-6-95",
                                              "grid-md-7": "MuiGrid-grid-md-7-96",
                                              "grid-md-8": "MuiGrid-grid-md-8-97",
                                              "grid-md-9": "MuiGrid-grid-md-9-98",
                                              "grid-md-auto": "MuiGrid-grid-md-auto-88",
                                              "grid-md-true": "MuiGrid-grid-md-true-89",
                                              "grid-sm-1": "MuiGrid-grid-sm-1-76",
                                              "grid-sm-10": "MuiGrid-grid-sm-10-85",
                                              "grid-sm-11": "MuiGrid-grid-sm-11-86",
                                              "grid-sm-12": "MuiGrid-grid-sm-12-87",
                                              "grid-sm-2": "MuiGrid-grid-sm-2-77",
                                              "grid-sm-3": "MuiGrid-grid-sm-3-78",
                                              "grid-sm-4": "MuiGrid-grid-sm-4-79",
                                              "grid-sm-5": "MuiGrid-grid-sm-5-80",
                                              "grid-sm-6": "MuiGrid-grid-sm-6-81",
                                              "grid-sm-7": "MuiGrid-grid-sm-7-82",
                                              "grid-sm-8": "MuiGrid-grid-sm-8-83",
                                              "grid-sm-9": "MuiGrid-grid-sm-9-84",
                                              "grid-sm-auto": "MuiGrid-grid-sm-auto-74",
                                              "grid-sm-true": "MuiGrid-grid-sm-true-75",
                                              "grid-xl-1": "MuiGrid-grid-xl-1-118",
                                              "grid-xl-10": "MuiGrid-grid-xl-10-127",
                                              "grid-xl-11": "MuiGrid-grid-xl-11-128",
                                              "grid-xl-12": "MuiGrid-grid-xl-12-129",
                                              "grid-xl-2": "MuiGrid-grid-xl-2-119",
                                              "grid-xl-3": "MuiGrid-grid-xl-3-120",
                                              "grid-xl-4": "MuiGrid-grid-xl-4-121",
                                              "grid-xl-5": "MuiGrid-grid-xl-5-122",
                                              "grid-xl-6": "MuiGrid-grid-xl-6-123",
                                              "grid-xl-7": "MuiGrid-grid-xl-7-124",
                                              "grid-xl-8": "MuiGrid-grid-xl-8-125",
                                              "grid-xl-9": "MuiGrid-grid-xl-9-126",
                                              "grid-xl-auto": "MuiGrid-grid-xl-auto-116",
                                              "grid-xl-true": "MuiGrid-grid-xl-true-117",
                                              "grid-xs-1": "MuiGrid-grid-xs-1-62",
                                              "grid-xs-10": "MuiGrid-grid-xs-10-71",
                                              "grid-xs-11": "MuiGrid-grid-xs-11-72",
                                              "grid-xs-12": "MuiGrid-grid-xs-12-73",
                                              "grid-xs-2": "MuiGrid-grid-xs-2-63",
                                              "grid-xs-3": "MuiGrid-grid-xs-3-64",
                                              "grid-xs-4": "MuiGrid-grid-xs-4-65",
                                              "grid-xs-5": "MuiGrid-grid-xs-5-66",
                                              "grid-xs-6": "MuiGrid-grid-xs-6-67",
                                              "grid-xs-7": "MuiGrid-grid-xs-7-68",
                                              "grid-xs-8": "MuiGrid-grid-xs-8-69",
                                              "grid-xs-9": "MuiGrid-grid-xs-9-70",
                                              "grid-xs-auto": "MuiGrid-grid-xs-auto-60",
                                              "grid-xs-true": "MuiGrid-grid-xs-true-61",
                                              "item": "MuiGrid-item-34",
                                              "justify-xs-center": "MuiGrid-justify-xs-center-50",
                                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-51",
                                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around-53",
                                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between-52",
                                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-54",
                                              "spacing-xs-16": "MuiGrid-spacing-xs-16-56",
                                              "spacing-xs-24": "MuiGrid-spacing-xs-24-57",
                                              "spacing-xs-32": "MuiGrid-spacing-xs-32-58",
                                              "spacing-xs-40": "MuiGrid-spacing-xs-40-59",
                                              "spacing-xs-8": "MuiGrid-spacing-xs-8-55",
                                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-39",
                                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-40",
                                              "zeroMinWidth": "MuiGrid-zeroMinWidth-35",
                                            }
                                          }
                                          component="div"
                                          container={false}
                                          direction="row"
                                          item={true}
                                          justify="flex-start"
                                          lg={false}
                                          md={false}
                                          sm={false}
                                          spacing={0}
                                          wrap="wrap"
                                          xl={false}
                                          xs={12}
                                          zeroMinWidth={false}
                                        >
                                          <div
                                            className="MuiGrid-item-34 MuiGrid-grid-xs-12-73 Cards-cardContent-4"
                                          >
                                            <div
                                              className="columns is-gapless buttons is-hidden-mobile is-clearfix"
                                            >
                                              <div
                                                className="column"
                                              />
                                              <div
                                                className="column is-narrow download"
                                              >
                                                <RaisedButton
                                                  disabled={false}
                                                  fullWidth={false}
                                                  label="Open file in a new window"
                                                  labelPosition="after"
                                                  onClick={[Function]}
                                                  primary={true}
                                                  secondary={false}
                                                >
                                                  <Paper
                                                    circle={false}
                                                    rounded={true}
                                                    style={
                                                      Object {
                                                        "display": "inline-block",
                                                        "minWidth": 88,
                                                        "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                      }
                                                    }
                                                    transitionEnabled={true}
                                                    zDepth={1}
                                                  >
                                                    <div
                                                      style={
                                                        Object {
                                                          "WebkitTapHighlightColor": "rgba(0,0,0,0)",
                                                          "backgroundColor": "#ffffff",
                                                          "borderRadius": 2,
                                                          "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
         0 1px 4px rgba(0, 0, 0, 0.12)",
                                                          "boxSizing": "border-box",
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "display": "inline-block",
                                                          "fontFamily": "Roboto, sans-serif",
                                                          "minWidth": 88,
                                                          "muiPrepared": true,
                                                          "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                        }
                                                      }
                                                    >
                                                      <EnhancedButton
                                                        containerElement="button"
                                                        disabled={false}
                                                        focusRippleColor="#ffffff"
                                                        focusRippleOpacity={0.16}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onKeyboardFocus={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchStart={[Function]}
                                                        style={
                                                          Object {
                                                            "backgroundColor": "#00bcd4",
                                                            "borderRadius": 2,
                                                            "height": 36,
                                                            "lineHeight": "36px",
                                                            "padding": 0,
                                                            "textAlign": "center",
                                                            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                            "width": "100%",
                                                          }
                                                        }
                                                        tabIndex={0}
                                                        touchRippleColor="#ffffff"
                                                        touchRippleOpacity={0.16}
                                                        type="button"
                                                      >
                                                        <button
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchStart={[Function]}
                                                          style={
                                                            Object {
                                                              "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                                                              "backgroundColor": "#00bcd4",
                                                              "border": 10,
                                                              "borderRadius": 2,
                                                              "boxSizing": "border-box",
                                                              "cursor": "pointer",
                                                              "display": "inline-block",
                                                              "fontFamily": "Roboto, sans-serif",
                                                              "fontSize": "inherit",
                                                              "fontWeight": "inherit",
                                                              "height": 36,
                                                              "lineHeight": "36px",
                                                              "margin": 0,
                                                              "muiPrepared": true,
                                                              "outline": "none",
                                                              "padding": 0,
                                                              "position": "relative",
                                                              "textAlign": "center",
                                                              "textDecoration": "none",
                                                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                              "verticalAlign": null,
                                                              "width": "100%",
                                                            }
                                                          }
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <TouchRipple
                                                            abortOnScroll={true}
                                                            color="#ffffff"
                                                            key="touchRipple"
                                                            opacity={0.16}
                                                          >
                                                            <div
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchStart={[Function]}
                                                            >
                                                              <div
                                                                style={
                                                                  Object {
                                                                    "backgroundColor": false,
                                                                    "borderRadius": 2,
                                                                    "height": 36,
                                                                    "muiPrepared": true,
                                                                    "top": 0,
                                                                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  key="labelElement"
                                                                  style={
                                                                    Object {
                                                                      "color": "#ffffff",
                                                                      "fontSize": 14,
                                                                      "fontWeight": 500,
                                                                      "letterSpacing": 0,
                                                                      "margin": 0,
                                                                      "muiPrepared": true,
                                                                      "opacity": 1,
                                                                      "paddingLeft": 16,
                                                                      "paddingRight": 16,
                                                                      "position": "relative",
                                                                      "textTransform": "uppercase",
                                                                      "userSelect": "none",
                                                                    }
                                                                  }
                                                                >
                                                                  Open file in a new window
                                                                </span>
                                                              </div>
                                                            </div>
                                                          </TouchRipple>
                                                        </button>
                                                      </EnhancedButton>
                                                    </div>
                                                  </Paper>
                                                </RaisedButton>
                                              </div>
                                              <div
                                                className="column is-narrow"
                                              >
                                                <RaisedButton
                                                  disabled={false}
                                                  fullWidth={false}
                                                  label="Close"
                                                  labelPosition="after"
                                                  onClick={[MockFunction]}
                                                  primary={false}
                                                  secondary={false}
                                                >
                                                  <Paper
                                                    circle={false}
                                                    rounded={true}
                                                    style={
                                                      Object {
                                                        "display": "inline-block",
                                                        "minWidth": 88,
                                                        "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                      }
                                                    }
                                                    transitionEnabled={true}
                                                    zDepth={1}
                                                  >
                                                    <div
                                                      style={
                                                        Object {
                                                          "WebkitTapHighlightColor": "rgba(0,0,0,0)",
                                                          "backgroundColor": "#ffffff",
                                                          "borderRadius": 2,
                                                          "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
         0 1px 4px rgba(0, 0, 0, 0.12)",
                                                          "boxSizing": "border-box",
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "display": "inline-block",
                                                          "fontFamily": "Roboto, sans-serif",
                                                          "minWidth": 88,
                                                          "muiPrepared": true,
                                                          "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                        }
                                                      }
                                                    >
                                                      <EnhancedButton
                                                        containerElement="button"
                                                        disabled={false}
                                                        focusRippleColor="rgba(0, 0, 0, 0.87)"
                                                        focusRippleOpacity={0.1}
                                                        onBlur={[Function]}
                                                        onClick={[MockFunction]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onKeyboardFocus={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchStart={[Function]}
                                                        style={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderRadius": 2,
                                                            "height": 36,
                                                            "lineHeight": "36px",
                                                            "padding": 0,
                                                            "textAlign": "center",
                                                            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                            "width": "100%",
                                                          }
                                                        }
                                                        tabIndex={0}
                                                        touchRippleColor="rgba(0, 0, 0, 0.87)"
                                                        touchRippleOpacity={0.1}
                                                        type="button"
                                                      >
                                                        <button
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchStart={[Function]}
                                                          style={
                                                            Object {
                                                              "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                                                              "backgroundColor": "#ffffff",
                                                              "border": 10,
                                                              "borderRadius": 2,
                                                              "boxSizing": "border-box",
                                                              "cursor": "pointer",
                                                              "display": "inline-block",
                                                              "fontFamily": "Roboto, sans-serif",
                                                              "fontSize": "inherit",
                                                              "fontWeight": "inherit",
                                                              "height": 36,
                                                              "lineHeight": "36px",
                                                              "margin": 0,
                                                              "muiPrepared": true,
                                                              "outline": "none",
                                                              "padding": 0,
                                                              "position": "relative",
                                                              "textAlign": "center",
                                                              "textDecoration": "none",
                                                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                              "verticalAlign": null,
                                                              "width": "100%",
                                                            }
                                                          }
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <TouchRipple
                                                            abortOnScroll={true}
                                                            color="rgba(0, 0, 0, 0.87)"
                                                            key="touchRipple"
                                                            opacity={0.1}
                                                          >
                                                            <div
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchStart={[Function]}
                                                            >
                                                              <div
                                                                style={
                                                                  Object {
                                                                    "backgroundColor": false,
                                                                    "borderRadius": 2,
                                                                    "height": 36,
                                                                    "muiPrepared": true,
                                                                    "top": 0,
                                                                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  key="labelElement"
                                                                  style={
                                                                    Object {
                                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                                      "fontSize": 14,
                                                                      "fontWeight": 500,
                                                                      "letterSpacing": 0,
                                                                      "margin": 0,
                                                                      "muiPrepared": true,
                                                                      "opacity": 1,
                                                                      "paddingLeft": 16,
                                                                      "paddingRight": 16,
                                                                      "position": "relative",
                                                                      "textTransform": "uppercase",
                                                                      "userSelect": "none",
                                                                    }
                                                                  }
                                                                >
                                                                  Close
                                                                </span>
                                                              </div>
                                                            </div>
                                                          </TouchRipple>
                                                        </button>
                                                      </EnhancedButton>
                                                    </div>
                                                  </Paper>
                                                </RaisedButton>
                                              </div>
                                            </div>
                                            <div
                                              className="columns is-gapless buttons is-hidden-tablet is-clearfix"
                                            >
                                              <div
                                                className="column is-12 download"
                                              >
                                                <RaisedButton
                                                  disabled={false}
                                                  fullWidth={true}
                                                  label="Open file in a new window"
                                                  labelPosition="after"
                                                  onClick={[Function]}
                                                  primary={true}
                                                  secondary={false}
                                                >
                                                  <Paper
                                                    circle={false}
                                                    rounded={true}
                                                    style={
                                                      Object {
                                                        "display": "inline-block",
                                                        "minWidth": "100%",
                                                        "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                      }
                                                    }
                                                    transitionEnabled={true}
                                                    zDepth={1}
                                                  >
                                                    <div
                                                      style={
                                                        Object {
                                                          "WebkitTapHighlightColor": "rgba(0,0,0,0)",
                                                          "backgroundColor": "#ffffff",
                                                          "borderRadius": 2,
                                                          "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
         0 1px 4px rgba(0, 0, 0, 0.12)",
                                                          "boxSizing": "border-box",
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "display": "inline-block",
                                                          "fontFamily": "Roboto, sans-serif",
                                                          "minWidth": "100%",
                                                          "muiPrepared": true,
                                                          "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                        }
                                                      }
                                                    >
                                                      <EnhancedButton
                                                        containerElement="button"
                                                        disabled={false}
                                                        focusRippleColor="#ffffff"
                                                        focusRippleOpacity={0.16}
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onKeyboardFocus={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchStart={[Function]}
                                                        style={
                                                          Object {
                                                            "backgroundColor": "#00bcd4",
                                                            "borderRadius": 2,
                                                            "height": 36,
                                                            "lineHeight": "36px",
                                                            "padding": 0,
                                                            "textAlign": "center",
                                                            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                            "width": "100%",
                                                          }
                                                        }
                                                        tabIndex={0}
                                                        touchRippleColor="#ffffff"
                                                        touchRippleOpacity={0.16}
                                                        type="button"
                                                      >
                                                        <button
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchStart={[Function]}
                                                          style={
                                                            Object {
                                                              "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                                                              "backgroundColor": "#00bcd4",
                                                              "border": 10,
                                                              "borderRadius": 2,
                                                              "boxSizing": "border-box",
                                                              "cursor": "pointer",
                                                              "display": "inline-block",
                                                              "fontFamily": "Roboto, sans-serif",
                                                              "fontSize": "inherit",
                                                              "fontWeight": "inherit",
                                                              "height": 36,
                                                              "lineHeight": "36px",
                                                              "margin": 0,
                                                              "muiPrepared": true,
                                                              "outline": "none",
                                                              "padding": 0,
                                                              "position": "relative",
                                                              "textAlign": "center",
                                                              "textDecoration": "none",
                                                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                              "verticalAlign": null,
                                                              "width": "100%",
                                                            }
                                                          }
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <TouchRipple
                                                            abortOnScroll={true}
                                                            color="#ffffff"
                                                            key="touchRipple"
                                                            opacity={0.16}
                                                          >
                                                            <div
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchStart={[Function]}
                                                            >
                                                              <div
                                                                style={
                                                                  Object {
                                                                    "backgroundColor": false,
                                                                    "borderRadius": 2,
                                                                    "height": 36,
                                                                    "muiPrepared": true,
                                                                    "top": 0,
                                                                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  key="labelElement"
                                                                  style={
                                                                    Object {
                                                                      "color": "#ffffff",
                                                                      "fontSize": 14,
                                                                      "fontWeight": 500,
                                                                      "letterSpacing": 0,
                                                                      "margin": 0,
                                                                      "muiPrepared": true,
                                                                      "opacity": 1,
                                                                      "paddingLeft": 16,
                                                                      "paddingRight": 16,
                                                                      "position": "relative",
                                                                      "textTransform": "uppercase",
                                                                      "userSelect": "none",
                                                                    }
                                                                  }
                                                                >
                                                                  Open file in a new window
                                                                </span>
                                                              </div>
                                                            </div>
                                                          </TouchRipple>
                                                        </button>
                                                      </EnhancedButton>
                                                    </div>
                                                  </Paper>
                                                </RaisedButton>
                                              </div>
                                              <div
                                                className="column is-12"
                                              >
                                                <RaisedButton
                                                  disabled={false}
                                                  fullWidth={true}
                                                  label="Close"
                                                  labelPosition="after"
                                                  onClick={[MockFunction]}
                                                  primary={false}
                                                  secondary={false}
                                                >
                                                  <Paper
                                                    circle={false}
                                                    rounded={true}
                                                    style={
                                                      Object {
                                                        "display": "inline-block",
                                                        "minWidth": "100%",
                                                        "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                      }
                                                    }
                                                    transitionEnabled={true}
                                                    zDepth={1}
                                                  >
                                                    <div
                                                      style={
                                                        Object {
                                                          "WebkitTapHighlightColor": "rgba(0,0,0,0)",
                                                          "backgroundColor": "#ffffff",
                                                          "borderRadius": 2,
                                                          "boxShadow": "0 1px 6px rgba(0, 0, 0, 0.12),
         0 1px 4px rgba(0, 0, 0, 0.12)",
                                                          "boxSizing": "border-box",
                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                          "display": "inline-block",
                                                          "fontFamily": "Roboto, sans-serif",
                                                          "minWidth": "100%",
                                                          "muiPrepared": true,
                                                          "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                        }
                                                      }
                                                    >
                                                      <EnhancedButton
                                                        containerElement="button"
                                                        disabled={false}
                                                        focusRippleColor="rgba(0, 0, 0, 0.87)"
                                                        focusRippleOpacity={0.1}
                                                        onBlur={[Function]}
                                                        onClick={[MockFunction]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onKeyboardFocus={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseEnter={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchStart={[Function]}
                                                        style={
                                                          Object {
                                                            "backgroundColor": "#ffffff",
                                                            "borderRadius": 2,
                                                            "height": 36,
                                                            "lineHeight": "36px",
                                                            "padding": 0,
                                                            "textAlign": "center",
                                                            "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                            "width": "100%",
                                                          }
                                                        }
                                                        tabIndex={0}
                                                        touchRippleColor="rgba(0, 0, 0, 0.87)"
                                                        touchRippleOpacity={0.1}
                                                        type="button"
                                                      >
                                                        <button
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseEnter={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchStart={[Function]}
                                                          style={
                                                            Object {
                                                              "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                                                              "backgroundColor": "#ffffff",
                                                              "border": 10,
                                                              "borderRadius": 2,
                                                              "boxSizing": "border-box",
                                                              "cursor": "pointer",
                                                              "display": "inline-block",
                                                              "fontFamily": "Roboto, sans-serif",
                                                              "fontSize": "inherit",
                                                              "fontWeight": "inherit",
                                                              "height": 36,
                                                              "lineHeight": "36px",
                                                              "margin": 0,
                                                              "muiPrepared": true,
                                                              "outline": "none",
                                                              "padding": 0,
                                                              "position": "relative",
                                                              "textAlign": "center",
                                                              "textDecoration": "none",
                                                              "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                              "verticalAlign": null,
                                                              "width": "100%",
                                                            }
                                                          }
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <TouchRipple
                                                            abortOnScroll={true}
                                                            color="rgba(0, 0, 0, 0.87)"
                                                            key="touchRipple"
                                                            opacity={0.1}
                                                          >
                                                            <div
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchStart={[Function]}
                                                            >
                                                              <div
                                                                style={
                                                                  Object {
                                                                    "backgroundColor": false,
                                                                    "borderRadius": 2,
                                                                    "height": 36,
                                                                    "muiPrepared": true,
                                                                    "top": 0,
                                                                    "transition": "all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  key="labelElement"
                                                                  style={
                                                                    Object {
                                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                                      "fontSize": 14,
                                                                      "fontWeight": 500,
                                                                      "letterSpacing": 0,
                                                                      "margin": 0,
                                                                      "muiPrepared": true,
                                                                      "opacity": 1,
                                                                      "paddingLeft": 16,
                                                                      "paddingRight": 16,
                                                                      "position": "relative",
                                                                      "textTransform": "uppercase",
                                                                      "userSelect": "none",
                                                                    }
                                                                  }
                                                                >
                                                                  Close
                                                                </span>
                                                              </div>
                                                            </div>
                                                          </TouchRipple>
                                                        </button>
                                                      </EnhancedButton>
                                                    </div>
                                                  </Paper>
                                                </RaisedButton>
                                              </div>
                                            </div>
                                          </div>
                                        </Grid>
                                      </WithStyles(Grid)>
                                    </div>
                                  </Grid>
                                </WithStyles(Grid)>
                              </div>
                            </CardContent>
                          </WithStyles(CardContent)>
                        </div>
                      </Paper>
                    </WithStyles(Paper)>
                  </Card>
                </WithStyles(Card)>
              </Cards>
            </WithStyles(Cards)>
          </StandardCard>
        </MediaPreview>
      </MuiThemeProvider>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Media Preview Component  should render component 1`] = `
<StandardCard
  className="mediaPreview"
  title="Image preview"
>
  <div
    className="columns is-gapless buttons is-hidden-mobile is-clearfix"
  >
    <div
      className="column"
    />
    <React.Fragment>
      <div
        className="column is-narrow download"
      >
        <RaisedButton
          disabled={false}
          fullWidth={false}
          label="Open file in a new window"
          labelPosition="after"
          onClick={[Function]}
          primary={true}
          secondary={false}
        />
      </div>
      <div
        className="column is-narrow"
      >
        <RaisedButton
          disabled={false}
          fullWidth={false}
          label="Close"
          labelPosition="after"
          onClick={[MockFunction]}
          primary={false}
          secondary={false}
        />
      </div>
    </React.Fragment>
  </div>
  <div
    className="columns is-gapless buttons is-hidden-tablet is-clearfix"
  >
    <React.Fragment>
      <div
        className="column is-12 download"
      >
        <RaisedButton
          disabled={false}
          fullWidth={true}
          label="Open file in a new window"
          labelPosition="after"
          onClick={[Function]}
          primary={true}
          secondary={false}
        />
      </div>
      <div
        className="column is-12"
      >
        <RaisedButton
          disabled={false}
          fullWidth={true}
          label="Close"
          labelPosition="after"
          onClick={[MockFunction]}
          primary={false}
          secondary={false}
        />
      </div>
    </React.Fragment>
  </div>
</StandardCard>
`;

exports[`Media Preview Component  should render component with image 1`] = `
<StandardCard
  className="mediaPreview"
  title="Image preview"
>
  <div
    className="columns is-gapless buttons is-hidden-mobile is-clearfix"
  >
    <div
      className="column"
    />
    <React.Fragment>
      <div
        className="column is-narrow download"
      >
        <RaisedButton
          disabled={false}
          fullWidth={false}
          label="Open file in a new window"
          labelPosition="after"
          onClick={[Function]}
          primary={true}
          secondary={false}
        />
      </div>
      <div
        className="column is-narrow"
      >
        <RaisedButton
          disabled={false}
          fullWidth={false}
          label="Close"
          labelPosition="after"
          onClick={[MockFunction]}
          primary={false}
          secondary={false}
        />
      </div>
    </React.Fragment>
  </div>
  <img
    alt="https://test.com/test.jpg"
    id="previewImage"
    src="https://test.com/preview_test.jpg"
  />
  <div
    className="columns is-gapless buttons is-hidden-tablet is-clearfix"
  >
    <React.Fragment>
      <div
        className="column is-12 download"
      >
        <RaisedButton
          disabled={false}
          fullWidth={true}
          label="Open file in a new window"
          labelPosition="after"
          onClick={[Function]}
          primary={true}
          secondary={false}
        />
      </div>
      <div
        className="column is-12"
      >
        <RaisedButton
          disabled={false}
          fullWidth={true}
          label="Close"
          labelPosition="after"
          onClick={[MockFunction]}
          primary={false}
          secondary={false}
        />
      </div>
    </React.Fragment>
  </div>
</StandardCard>
`;

exports[`Media Preview Component  should render component with video 1`] = `
<StandardCard
  className="mediaPreview"
  title="Video preview"
>
  <div
    className="columns is-gapless buttons is-hidden-mobile is-clearfix"
  >
    <div
      className="column"
    />
    <React.Fragment>
      <div
        className="column is-narrow download"
      >
        <RaisedButton
          disabled={false}
          fullWidth={false}
          label="Open file in a new window"
          labelPosition="after"
          onClick={[Function]}
          primary={true}
          secondary={false}
        />
      </div>
      <div
        className="column is-narrow"
      >
        <RaisedButton
          disabled={false}
          fullWidth={false}
          label="Close"
          labelPosition="after"
          onClick={[MockFunction]}
          primary={false}
          secondary={false}
        />
      </div>
    </React.Fragment>
  </div>
  <video
    controls={true}
  >
    <source
      src="https://test.com/preview_test.jpg"
      type="video/mp4"
    />
  </video>
  <div
    className="columns is-gapless buttons is-hidden-tablet is-clearfix"
  >
    <React.Fragment>
      <div
        className="column is-12 download"
      >
        <RaisedButton
          disabled={false}
          fullWidth={true}
          label="Open file in a new window"
          labelPosition="after"
          onClick={[Function]}
          primary={true}
          secondary={false}
        />
      </div>
      <div
        className="column is-12"
      >
        <RaisedButton
          disabled={false}
          fullWidth={true}
          label="Close"
          labelPosition="after"
          onClick={[MockFunction]}
          primary={false}
          secondary={false}
        />
      </div>
    </React.Fragment>
  </div>
</StandardCard>
`;
