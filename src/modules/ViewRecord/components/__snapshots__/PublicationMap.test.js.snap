// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GoogleMapViewComponent component should render component 1`] = `
<div
  id="googleMap"
>
  <GoogleMap>
    <DrawingManager
      defaultDrawingMode="marker"
      defaultOptions={
        Object {
          "drawingControl": true,
          "drawingControlOptions": Object {
            "drawingModes": Array [
              "marker",
              "polygon",
              "rectangle",
            ],
            "position": 1,
          },
        }
      }
    />
    <SearchBox
      controlPosition={1}
    >
      <input
        placeholder="Search..."
        style={
          Object {
            "border": "1px solid transparent",
            "borderRadius": "3px 0px 0px 3px",
            "boxShadow": "0 2px 6px rgba(0, 0, 0, 0.3)",
            "boxSizing": "border-box",
            "fontSize": "14px",
            "height": "24px",
            "marginTop": "5px",
            "outline": "none",
            "padding": "0 12px",
            "textOverflow": "ellipses",
            "width": "240px",
          }
        }
        type="text"
      />
    </SearchBox>
  </GoogleMap>
</div>
`;

exports[`GoogleMapViewComponent component should render in read-only mode 1`] = `
<div
  id="googleMap"
>
  <GoogleMap>
    <Polygon
      options={
        Object {
          "fillColor": "#FF0000",
          "fillOpacity": 0.35,
          "strokeColor": "#FF0000",
          "strokeOpacity": 0.8,
          "strokeWeight": 2,
        }
      }
      paths={
        Array [
          Object {
            "lat": [Function],
            "lng": [Function],
          },
          Object {
            "lat": [Function],
            "lng": [Function],
          },
        ]
      }
    />
  </GoogleMap>
</div>
`;

exports[`GoogleMapViewComponent component should render in read-only mode 2`] = `
<div
  id="googleMap"
>
  <GoogleMap>
    <Marker
      position={
        Object {
          "lat": [Function],
          "lng": [Function],
        }
      }
    />
  </GoogleMap>
</div>
`;

exports[`Publication's map coordinates should mount component 1`] = `
<withScriptjs(withGoogleMap(GoogleMapViewComponent))
  center={
    Object {
      "lat": -27.499433,
      "lng": 153.00502749999998,
    }
  }
  coordinates="153.021781,-27.489337 152.988274,-27.489337 152.988274,-27.509529 153.021781,-27.509529 153.021781,-27.489337"
  currentOverlay={null}
  geoCoords={
    Array [
      Object {
        "lat": -27.489337,
        "lng": 153.021781,
      },
      Object {
        "lat": -27.489337,
        "lng": 152.988274,
      },
      Object {
        "lat": -27.509529,
        "lng": 152.988274,
      },
      Object {
        "lat": -27.509529,
        "lng": 153.021781,
      },
      Object {
        "lat": -27.489337,
        "lng": 153.021781,
      },
    ]
  }
  googleMapURL="https://maps.googleapis.com/maps/api/js?key=GOOGLE_MAPS_API_KEY&v=3.exp&libraries=geometry,drawing,places"
  handleMarkerComplete={[Function]}
  handlePolygonComplete={[Function]}
  handleRectangleComplete={[Function]}
  loadingElement={<div />}
  onBoundsChanged={[Function]}
  onDrawingManagerMounted={[Function]}
  onMapMounted={[Function]}
  onPlacesChanged={[Function]}
  onSearchBoxMounted={[Function]}
  zoom={13}
/>
`;

exports[`Publication's map coordinates should mount component in readonly mode 1`] = `
<withScriptjs(withGoogleMap(GoogleMapViewComponent))
  center={
    Object {
      "lat": -27.499433,
      "lng": 153.00502749999998,
    }
  }
  coordinates="153.021781,-27.489337 152.988274,-27.489337 152.988274,-27.509529 153.021781,-27.509529 153.021781,-27.489337"
  currentOverlay={null}
  geoCoords={
    Array [
      Object {
        "lat": -27.489337,
        "lng": 153.021781,
      },
      Object {
        "lat": -27.489337,
        "lng": 152.988274,
      },
      Object {
        "lat": -27.509529,
        "lng": 152.988274,
      },
      Object {
        "lat": -27.509529,
        "lng": 153.021781,
      },
      Object {
        "lat": -27.489337,
        "lng": 153.021781,
      },
    ]
  }
  googleMapURL="https://maps.googleapis.com/maps/api/js?key=GOOGLE_MAPS_API_KEY&v=3.exp&libraries=geometry,drawing,places"
  handleMarkerComplete={[Function]}
  handlePolygonComplete={[Function]}
  handleRectangleComplete={[Function]}
  loadingElement={<div />}
  onBoundsChanged={[Function]}
  onDrawingManagerMounted={[Function]}
  onMapMounted={[Function]}
  onPlacesChanged={[Function]}
  onSearchBoxMounted={[Function]}
  readOnly={true}
  zoom={13}
/>
`;

exports[`Publication's map coordinates should not render in read only mode 1`] = `
<withScriptjs(withGoogleMap(GoogleMapViewComponent))
  center={
    Object {
      "lat": -27.489337,
      "lng": 153.021781,
    }
  }
  coordinates="153.021781,-27.489337"
  currentOverlay={null}
  geoCoords={
    Array [
      Object {
        "lat": -27.489337,
        "lng": 153.021781,
      },
    ]
  }
  googleMapURL="https://maps.googleapis.com/maps/api/js?key=GOOGLE_MAPS_API_KEY&v=3.exp&libraries=geometry,drawing,places"
  handleMarkerComplete={[Function]}
  handlePolygonComplete={[Function]}
  handleRectangleComplete={[Function]}
  loadingElement={<div />}
  onBoundsChanged={[Function]}
  onChange={[MockFunction]}
  onDrawingManagerMounted={[Function]}
  onMapMounted={[Function]}
  onPlacesChanged={[Function]}
  onSearchBoxMounted={[Function]}
  readOnly={false}
  zoom={7}
/>
`;

exports[`Publication's map coordinates should not render in read only mode 2`] = `
<withScriptjs(withGoogleMap(GoogleMapViewComponent))
  center={
    Object {
      "lat": -27.489337,
      "lng": 153.021781,
    }
  }
  coordinates="153.021781,-27.489337"
  currentOverlay={
    Object {
      "getBounds": [Function],
      "setMap": [MockFunction],
    }
  }
  geoCoords={
    Array [
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
    ]
  }
  googleMapURL="https://maps.googleapis.com/maps/api/js?key=GOOGLE_MAPS_API_KEY&v=3.exp&libraries=geometry,drawing,places"
  handleMarkerComplete={[Function]}
  handlePolygonComplete={[Function]}
  handleRectangleComplete={[Function]}
  isSearch={false}
  loadingElement={<div />}
  onBoundsChanged={[Function]}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "",
        ],
        Array [
          "-27.489337,153.021781",
        ],
        Array [
          "-27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781",
        ],
        Array [
          "-27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  onDrawingManagerMounted={[Function]}
  onMapMounted={[Function]}
  onPlacesChanged={[Function]}
  onSearchBoxMounted={[Function]}
  readOnly={false}
  zoom={7}
/>
`;

exports[`Publication's map coordinates should not render in read only mode 3`] = `
<withScriptjs(withGoogleMap(GoogleMapViewComponent))
  center={
    Object {
      "lat": -27.489337,
      "lng": 153.021781,
    }
  }
  coordinates="153.021781,-27.489337"
  currentOverlay={
    Object {
      "getBounds": [Function],
      "setMap": [MockFunction],
    }
  }
  geoCoords={
    Array [
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
    ]
  }
  googleMapURL="https://maps.googleapis.com/maps/api/js?key=GOOGLE_MAPS_API_KEY&v=3.exp&libraries=geometry,drawing,places"
  handleMarkerComplete={[Function]}
  handlePolygonComplete={[Function]}
  handleRectangleComplete={[Function]}
  isSearch={false}
  loadingElement={<div />}
  onBoundsChanged={[Function]}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "",
        ],
        Array [
          "-27.489337,153.021781",
        ],
        Array [
          "-27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781",
        ],
        Array [
          "-27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  onDrawingManagerMounted={[Function]}
  onMapMounted={[Function]}
  onPlacesChanged={[Function]}
  onSearchBoxMounted={[Function]}
  readOnly={false}
  zoom={7}
/>
`;

exports[`Publication's map coordinates should not render in read only mode 4`] = `
<withScriptjs(withGoogleMap(GoogleMapViewComponent))
  center={
    Object {
      "lat": -27.489337,
      "lng": 153.021781,
    }
  }
  coordinates="153.021781,-27.489337"
  currentOverlay={
    Object {
      "getBounds": [Function],
      "setMap": [MockFunction],
    }
  }
  geoCoords={
    Array [
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
    ]
  }
  googleMapURL="https://maps.googleapis.com/maps/api/js?key=GOOGLE_MAPS_API_KEY&v=3.exp&libraries=geometry,drawing,places"
  handleMarkerComplete={[Function]}
  handlePolygonComplete={[Function]}
  handleRectangleComplete={[Function]}
  isSearch={false}
  loadingElement={<div />}
  onBoundsChanged={[Function]}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "",
        ],
        Array [
          "-27.489337,153.021781",
        ],
        Array [
          "-27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781",
        ],
        Array [
          "-27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  onDrawingManagerMounted={[Function]}
  onMapMounted={[Function]}
  onPlacesChanged={[Function]}
  onSearchBoxMounted={[Function]}
  readOnly={false}
  zoom={7}
/>
`;

exports[`Publication's map coordinates should not render in read only mode 5`] = `
<withScriptjs(withGoogleMap(GoogleMapViewComponent))
  center={
    Object {
      "lat": -27.489337,
      "lng": 153.021781,
    }
  }
  coordinates="153.021781,-27.489337"
  currentOverlay={
    Object {
      "getBounds": [Function],
      "setMap": [MockFunction],
    }
  }
  geoCoords={
    Array [
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
    ]
  }
  googleMapURL="https://maps.googleapis.com/maps/api/js?key=GOOGLE_MAPS_API_KEY&v=3.exp&libraries=geometry,drawing,places"
  handleMarkerComplete={[Function]}
  handlePolygonComplete={[Function]}
  handleRectangleComplete={[Function]}
  isSearch={false}
  loadingElement={<div />}
  onBoundsChanged={[Function]}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "",
        ],
        Array [
          "-27.489337,153.021781",
        ],
        Array [
          "-27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781",
        ],
        Array [
          "-27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  onDrawingManagerMounted={[Function]}
  onMapMounted={[Function]}
  onPlacesChanged={[Function]}
  onSearchBoxMounted={[Function]}
  readOnly={false}
  zoom={7}
/>
`;

exports[`Publication's map coordinates should not render in read only mode 6`] = `
<withScriptjs(withGoogleMap(GoogleMapViewComponent))
  center={
    Object {
      "lat": [Function],
      "lng": [Function],
    }
  }
  coordinates="153.021781,-27.489337"
  currentOverlay={
    Object {
      "getBounds": [Function],
      "setMap": [MockFunction],
    }
  }
  geoCoords={
    Array [
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
    ]
  }
  googleMapURL="https://maps.googleapis.com/maps/api/js?key=GOOGLE_MAPS_API_KEY&v=3.exp&libraries=geometry,drawing,places"
  handleMarkerComplete={[Function]}
  handlePolygonComplete={[Function]}
  handleRectangleComplete={[Function]}
  isSearch={true}
  loadingElement={<div />}
  onBoundsChanged={[Function]}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "",
        ],
        Array [
          "-27.489337,153.021781",
        ],
        Array [
          "-27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781",
        ],
        Array [
          "-27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781",
        ],
        Array [
          "-27.489337,153.021781 -27.489337,153.021781",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  onDrawingManagerMounted={[Function]}
  onMapMounted={[Function]}
  onPlacesChanged={[Function]}
  onSearchBoxMounted={[Function]}
  readOnly={false}
  zoom={7}
/>
`;

exports[`Publication's map coordinates should not render in read only mode 7`] = `
<withScriptjs(withGoogleMap(GoogleMapViewComponent))
  coordinates="153.021781,-27.489337"
  currentOverlay={
    Object {
      "getBounds": [Function],
      "setMap": [MockFunction],
    }
  }
  geoCoords={
    Array [
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
      Object {
        "lat": 153.021781,
        "lng": -27.489337,
      },
    ]
  }
  googleMapURL="https://maps.googleapis.com/maps/api/js?key=GOOGLE_MAPS_API_KEY&v=3.exp&libraries=geometry,drawing,places"
  handleMarkerComplete={[Function]}
  handlePolygonComplete={[Function]}
  handleRectangleComplete={[Function]}
  isSearch={true}
  loadingElement={<div />}
  onBoundsChanged={[Function]}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "",
        ],
        Array [
          "-27.489337,153.021781",
        ],
        Array [
          "-27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781",
        ],
        Array [
          "-27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781 -27.489337,153.021781",
        ],
        Array [
          "-27.489337,153.021781 -27.489337,153.021781",
        ],
        Array [
          "-27.489337,153.021781 -27.489337,153.021781",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  onDrawingManagerMounted={[Function]}
  onMapMounted={[Function]}
  onPlacesChanged={[Function]}
  onSearchBoxMounted={[Function]}
  readOnly={false}
  zoom={7}
/>
`;

exports[`Publication's map coordinates should render component with a marker 1`] = `
<withScriptjs(withGoogleMap(GoogleMapViewComponent))
  center={
    Object {
      "lat": -27.489337,
      "lng": 153.021781,
    }
  }
  coordinates="153.021781,-27.489337"
  currentOverlay={null}
  geoCoords={
    Array [
      Object {
        "lat": -27.489337,
        "lng": 153.021781,
      },
    ]
  }
  googleMapURL="https://maps.googleapis.com/maps/api/js?key=GOOGLE_MAPS_API_KEY&v=3.exp&libraries=geometry,drawing,places"
  handleMarkerComplete={[Function]}
  handlePolygonComplete={[Function]}
  handleRectangleComplete={[Function]}
  loadingElement={<div />}
  onBoundsChanged={[Function]}
  onDrawingManagerMounted={[Function]}
  onMapMounted={[Function]}
  onPlacesChanged={[Function]}
  onSearchBoxMounted={[Function]}
  zoom={7}
/>
`;

exports[`Publication's map coordinates should render component with a selected area 1`] = `
<withScriptjs(withGoogleMap(GoogleMapViewComponent))
  center={
    Object {
      "lat": -27.499433,
      "lng": 153.00502749999998,
    }
  }
  coordinates="153.021781,-27.489337 152.988274,-27.489337 152.988274,-27.509529 153.021781,-27.509529 153.021781,-27.489337"
  currentOverlay={null}
  geoCoords={
    Array [
      Object {
        "lat": -27.489337,
        "lng": 153.021781,
      },
      Object {
        "lat": -27.489337,
        "lng": 152.988274,
      },
      Object {
        "lat": -27.509529,
        "lng": 152.988274,
      },
      Object {
        "lat": -27.509529,
        "lng": 153.021781,
      },
      Object {
        "lat": -27.489337,
        "lng": 153.021781,
      },
    ]
  }
  googleMapURL="https://maps.googleapis.com/maps/api/js?key=GOOGLE_MAPS_API_KEY&v=3.exp&libraries=geometry,drawing,places"
  handleMarkerComplete={[Function]}
  handlePolygonComplete={[Function]}
  handleRectangleComplete={[Function]}
  loadingElement={<div />}
  onBoundsChanged={[Function]}
  onDrawingManagerMounted={[Function]}
  onMapMounted={[Function]}
  onPlacesChanged={[Function]}
  onSearchBoxMounted={[Function]}
  zoom={13}
/>
`;

exports[`Publication's map coordinates should render component with empty coordinates 1`] = `
<withScriptjs(withGoogleMap(GoogleMapViewComponent))
  center={
    Object {
      "lat": -27.499412,
      "lng": 153.013346,
    }
  }
  coordinates=""
  currentOverlay={null}
  geoCoords={Array []}
  googleMapURL="https://maps.googleapis.com/maps/api/js?key=GOOGLE_MAPS_API_KEY&v=3.exp&libraries=geometry,drawing,places"
  handleMarkerComplete={[Function]}
  handlePolygonComplete={[Function]}
  handleRectangleComplete={[Function]}
  loadingElement={<div />}
  onBoundsChanged={[Function]}
  onDrawingManagerMounted={[Function]}
  onMapMounted={[Function]}
  onPlacesChanged={[Function]}
  onSearchBoxMounted={[Function]}
  zoom={13}
/>
`;
