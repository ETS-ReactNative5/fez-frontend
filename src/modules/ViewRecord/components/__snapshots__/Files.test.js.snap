// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Files Component  should not render component with no files 1`] = `""`;

exports[`Files Component  should not render cultural message 1`] = `
<section>
  <StandardCard
    className=""
    title="Files"
  >
    <Table
      allRowsSelected={false}
      className="files horizontal"
      fixedFooter={true}
      fixedHeader={true}
      height="inherit"
      multiSelectable={false}
      selectable={false}
    >
      <TableHeader
        adjustForCheckbox={false}
        className="header"
        displaySelectAll={false}
        enableSelectAll={true}
        selectAllSelected={false}
      >
        <TableRow
          displayBorder={true}
          hoverable={false}
          hovered={false}
          selectable={true}
          striped={false}
        >
          <TableHeaderColumn
            className="filetype"
          />
          <TableHeaderColumn
            className="filename"
          >
            File name
          </TableHeaderColumn>
          <TableHeaderColumn
            className="description is-hidden-mobile"
          >
            Description
          </TableHeaderColumn>
          <TableHeaderColumn
            className="align-right is-hidden-mobile is-hidden-tablet-only size"
          >
            Size
          </TableHeaderColumn>
          <TableHeaderColumn
            className="oa align-right"
          />
        </TableRow>
      </TableHeader>
      <TableBody
        allRowsSelected={false}
        className="data"
        deselectOnClickaway={true}
        displayRowCheckbox={false}
        multiSelectable={false}
        preScanRows={true}
        selectable={true}
        style={Object {}}
      >
        <TableRow
          className="file"
          displayBorder={true}
          hoverable={false}
          hovered={false}
          key="file-0"
          selectable={true}
          striped={false}
        >
          <TableRowColumn
            className="filetype fileIcon"
            hoverable={false}
          >
            <Thumbnail
              mediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/web_image.jpg"
              mimeType="image/jpeg"
              onClick={[Function]}
              previewMediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/preview_image.jpg"
              thumbnailFileName="thumbnail_image.jpg"
              thumbnailMediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/thumbnail_image.jpg"
            />
          </TableRowColumn>
          <TableRowColumn
            className="filename"
            hoverable={false}
          >
            <FileName
              allowDownload={true}
              calculatedSize="95.49 KB"
              description="testing image description"
              fileName="image.jpg"
              icon={
                <Thumbnail
                  mediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/web_image.jpg"
                  mimeType="image/jpeg"
                  onClick={[Function]}
                  previewMediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/preview_image.jpg"
                  thumbnailFileName="thumbnail_image.jpg"
                  thumbnailMediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/thumbnail_image.jpg"
                />
              }
              mediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/web_image.jpg"
              mimeType="image/jpeg"
              onFileSelect={[Function]}
              openAccessStatus={
                Object {
                  "embargoDate": null,
                  "isOpenAccess": true,
                  "openAccessStatusId": 453695,
                }
              }
              pid="UQ:676287"
              previewMediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/preview_image.jpg"
              thumbnailFileName="thumbnail_image.jpg"
            />
          </TableRowColumn>
          <TableRowColumn
            className="is-hidden-mobile description"
            hoverable={false}
          >
            testing image description
          </TableRowColumn>
          <TableRowColumn
            className="align-right is-hidden-mobile is-hidden-tablet-only size"
            hoverable={false}
          >
            95.49 KB
          </TableRowColumn>
          <TableRowColumn
            className="oa align-right"
            hoverable={false}
          >
            <OpenAccessIcon
              embargoDate={null}
              isOpenAccess={true}
              openAccessStatusId={453695}
              showEmbargoText={false}
            />
          </TableRowColumn>
        </TableRow>
      </TableBody>
    </Table>
  </StandardCard>
</section>
`;

exports[`Files Component  should render component 1`] = `
<section>
  <StandardCard
    className=""
    title="Files"
  >
    <Table
      allRowsSelected={false}
      className="files horizontal"
      fixedFooter={true}
      fixedHeader={true}
      height="inherit"
      multiSelectable={false}
      selectable={false}
    >
      <TableHeader
        adjustForCheckbox={false}
        className="header"
        displaySelectAll={false}
        enableSelectAll={true}
        selectAllSelected={false}
      >
        <TableRow
          displayBorder={true}
          hoverable={false}
          hovered={false}
          selectable={true}
          striped={false}
        >
          <TableHeaderColumn
            className="filetype"
          />
          <TableHeaderColumn
            className="filename"
          >
            File name
          </TableHeaderColumn>
          <TableHeaderColumn
            className="description is-hidden-mobile"
          >
            Description
          </TableHeaderColumn>
          <TableHeaderColumn
            className="align-right is-hidden-mobile is-hidden-tablet-only size"
          >
            Size
          </TableHeaderColumn>
          <TableHeaderColumn
            className="oa align-right"
          />
        </TableRow>
      </TableHeader>
      <TableBody
        allRowsSelected={false}
        className="data"
        deselectOnClickaway={true}
        displayRowCheckbox={false}
        multiSelectable={false}
        preScanRows={true}
        selectable={true}
        style={Object {}}
      >
        <TableRow
          className="file"
          displayBorder={true}
          hoverable={false}
          hovered={false}
          key="file-0"
          selectable={true}
          striped={false}
        >
          <TableRowColumn
            className="filetype fileIcon"
            hoverable={false}
          >
            <Thumbnail
              mediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/web_image.jpg"
              mimeType="image/jpeg"
              onClick={[Function]}
              previewMediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/preview_image.jpg"
              thumbnailFileName="thumbnail_image.jpg"
              thumbnailMediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/thumbnail_image.jpg"
            />
          </TableRowColumn>
          <TableRowColumn
            className="filename"
            hoverable={false}
          >
            <FileName
              allowDownload={true}
              calculatedSize="95.49 KB"
              description="testing image description"
              fileName="image.jpg"
              icon={
                <Thumbnail
                  mediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/web_image.jpg"
                  mimeType="image/jpeg"
                  onClick={[Function]}
                  previewMediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/preview_image.jpg"
                  thumbnailFileName="thumbnail_image.jpg"
                  thumbnailMediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/thumbnail_image.jpg"
                />
              }
              mediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/web_image.jpg"
              mimeType="image/jpeg"
              onFileSelect={[Function]}
              openAccessStatus={
                Object {
                  "embargoDate": null,
                  "isOpenAccess": true,
                  "openAccessStatusId": 453695,
                }
              }
              pid="UQ:676287"
              previewMediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/preview_image.jpg"
              thumbnailFileName="thumbnail_image.jpg"
            />
          </TableRowColumn>
          <TableRowColumn
            className="is-hidden-mobile description"
            hoverable={false}
          >
            testing image description
          </TableRowColumn>
          <TableRowColumn
            className="align-right is-hidden-mobile is-hidden-tablet-only size"
            hoverable={false}
          >
            95.49 KB
          </TableRowColumn>
          <TableRowColumn
            className="oa align-right"
            hoverable={false}
          >
            <OpenAccessIcon
              embargoDate={null}
              isOpenAccess={true}
              openAccessStatusId={453695}
              showEmbargoText={false}
            />
          </TableRowColumn>
        </TableRow>
      </TableBody>
    </Table>
  </StandardCard>
</section>
`;

exports[`Files Component  should render cultural message 1`] = `
<section>
  <StandardCard
    className=""
    title="Files"
  >
    <Alert
      allowDismiss={true}
      dismissAction={[MockFunction]}
      dismissTitle="Click to dismiss this alert"
      message="hello"
      showLoader={false}
      type="info"
    />
    <Table
      allRowsSelected={false}
      className="files horizontal"
      fixedFooter={true}
      fixedHeader={true}
      height="inherit"
      multiSelectable={false}
      selectable={false}
    >
      <TableHeader
        adjustForCheckbox={false}
        className="header"
        displaySelectAll={false}
        enableSelectAll={true}
        selectAllSelected={false}
      >
        <TableRow
          displayBorder={true}
          hoverable={false}
          hovered={false}
          selectable={true}
          striped={false}
        >
          <TableHeaderColumn
            className="filetype"
          />
          <TableHeaderColumn
            className="filename"
          >
            File name
          </TableHeaderColumn>
          <TableHeaderColumn
            className="description is-hidden-mobile"
          >
            Description
          </TableHeaderColumn>
          <TableHeaderColumn
            className="align-right is-hidden-mobile is-hidden-tablet-only size"
          >
            Size
          </TableHeaderColumn>
          <TableHeaderColumn
            className="oa align-right"
          />
        </TableRow>
      </TableHeader>
      <TableBody
        allRowsSelected={false}
        className="data"
        deselectOnClickaway={true}
        displayRowCheckbox={false}
        multiSelectable={false}
        preScanRows={true}
        selectable={true}
        style={Object {}}
      >
        <TableRow
          className="file"
          displayBorder={true}
          hoverable={false}
          hovered={false}
          key="file-0"
          selectable={true}
          striped={false}
        >
          <TableRowColumn
            className="filetype fileIcon"
            hoverable={false}
          >
            <Thumbnail
              mediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/web_image.jpg"
              mimeType="image/jpeg"
              onClick={[Function]}
              previewMediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/preview_image.jpg"
              thumbnailFileName="thumbnail_image.jpg"
              thumbnailMediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/thumbnail_image.jpg"
            />
          </TableRowColumn>
          <TableRowColumn
            className="filename"
            hoverable={false}
          >
            <FileName
              allowDownload={true}
              calculatedSize="95.49 KB"
              description="testing image description"
              fileName="image.jpg"
              icon={
                <Thumbnail
                  mediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/web_image.jpg"
                  mimeType="image/jpeg"
                  onClick={[Function]}
                  previewMediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/preview_image.jpg"
                  thumbnailFileName="thumbnail_image.jpg"
                  thumbnailMediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/thumbnail_image.jpg"
                />
              }
              mediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/web_image.jpg"
              mimeType="image/jpeg"
              onFileSelect={[Function]}
              openAccessStatus={
                Object {
                  "embargoDate": null,
                  "isOpenAccess": true,
                  "openAccessStatusId": 453695,
                }
              }
              pid="UQ:676287"
              previewMediaUrl="https://espace.library.uq.edu.au/view/UQ:676287/preview_image.jpg"
              thumbnailFileName="thumbnail_image.jpg"
            />
          </TableRowColumn>
          <TableRowColumn
            className="is-hidden-mobile description"
            hoverable={false}
          >
            testing image description
          </TableRowColumn>
          <TableRowColumn
            className="align-right is-hidden-mobile is-hidden-tablet-only size"
            hoverable={false}
          >
            95.49 KB
          </TableRowColumn>
          <TableRowColumn
            className="oa align-right"
            hoverable={false}
          >
            <OpenAccessIcon
              embargoDate={null}
              isOpenAccess={true}
              openAccessStatusId={453695}
              showEmbargoText={false}
            />
          </TableRowColumn>
        </TableRow>
      </TableBody>
    </Table>
  </StandardCard>
</section>
`;

exports[`Files Component  should render icon for mimeType 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditorInsertDriveFile />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Files Component  should render icon for mimeType 2`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ImageImage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Files Component  should render icon for mimeType 3`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AvVideocam />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Files Component  should render icon for mimeType 4`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AvVolumeUp />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Files Component  should render icon for mimeType 5`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ImagePictureAsPdf />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Files Component  should render icon for mimeType 6`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Thumbnail
    mediaUrl="https://espace.library.uq.edu.au/view/UQ:1/test.tiff"
    mimeType="image/jpg"
    onClick={[Function]}
    previewMediaUrl="https://espace.library.uq.edu.au/view/UQ:1/preview_test.jpg"
    thumbnailFileName="thumbnail_test.jpg"
    thumbnailMediaUrl="https://espace.library.uq.edu.au/view/UQ:1/thumbnail_test.jpg"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <img
        alt="thumbnail_test.jpg"
        onError={[Function]}
        src="https://espace.library.uq.edu.au/view/UQ:1/thumbnail_test.jpg"
      />,
      "className": "fileThumbnail",
      "onClick": [Function],
      "onKeyPress": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "alt": "thumbnail_test.jpg",
        "onError": [Function],
        "src": "https://espace.library.uq.edu.au/view/UQ:1/thumbnail_test.jpg",
      },
      "ref": null,
      "rendered": null,
      "type": "img",
    },
    "type": "a",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <img
          alt="thumbnail_test.jpg"
          onError={[Function]}
          src="https://espace.library.uq.edu.au/view/UQ:1/thumbnail_test.jpg"
        />,
        "className": "fileThumbnail",
        "onClick": [Function],
        "onKeyPress": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "thumbnail_test.jpg",
          "onError": [Function],
          "src": "https://espace.library.uq.edu.au/view/UQ:1/thumbnail_test.jpg",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      "type": "a",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
