// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`IdentifiersSectionContainer component should render default view 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "dispatch": [MockFunction],
        "getState": [MockFunction] {
          "calls": Array [
            Array [],
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Immutable.Map {},
            },
            Object {
              "type": "return",
              "value": Immutable.Map {},
            },
          ],
        },
        "subscribe": [MockFunction] {
          "calls": Array [
            Array [
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [MockFunction],
          "getState": [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Immutable.Map {},
              },
              Object {
                "type": "return",
                "value": Immutable.Map {},
              },
            ],
          },
          "subscribe": [MockFunction] {
            "calls": Array [
              Array [
                [Function],
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
        },
        "unsubscribe": undefined,
      },
    }
  }
>
  <Connect(Component) />
</ContextProvider>
`;
