// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SbsSubmission test should display successfull submission screen 1`] = `
<StandardPage
  title="Professional doctorate deposit"
>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <StandardCard
        title="Your thesis has been deposited"
      >
        <WithStyles(Typography)>
          <p>
            You have successfully deposited your thesis to UQ eSpace. You wil receive a confirmation email soon.
          </p>
        </WithStyles(Typography)>
      </StandardCard>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`SbsSubmission test should render sbs thesis submission acknowledgement 1`] = `
<StandardPage
  title="Professional doctorate deposit"
>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <StandardCard
        title="Your thesis has been deposited"
      >
        <WithStyles(Typography)>
          <p>
            You have successfully deposited your thesis to UQ eSpace. You wil receive a confirmation email soon.
          </p>
        </WithStyles(Typography)>
      </StandardCard>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`SbsSubmission test should render sbs thesis submission form 1`] = `
<StandardPage
  title="Professional doctorate deposit"
>
  <form>
    <NavigationDialogBox
      txt={
        Object {
          "cancelButtonLabel": "No",
          "confirmButtonLabel": "Yes",
          "confirmationMessage": "Are you sure you want to abandon workflow?",
          "confirmationTitle": "Abandon workflow",
        }
      }
      when={true}
    />
    <ConfirmDialogBox
      hideCancelButton={false}
      locale={
        Object {
          "cancelButtonLabel": "No, continue editing",
          "confirmButtonLabel": "Yes, deposit thesis",
          "confirmationMessage": "You are about to deposit your thesis with attached files. Are you sure you want to proceed?",
          "confirmationTitle": "Thesis deposit",
        }
      }
      onAction={[MockFunction]}
      onRef={[Function]}
    />
    <WithStyles(Grid)
      container={true}
      spacing={24}
    >
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <StandardCard
          title="Thesis information"
        >
          <WithStyles(Grid)
            container={true}
            spacing={24}
          >
            <WithStyles(Grid)
              item={true}
              xs={12}
            >
              <Field
                component={[Function]}
                disabled={false}
                height={50}
                name="thesisTitle"
                title="Thesis title"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
              sm={6}
              xs={12}
            >
              <Field
                component={[Function]}
                disabled={false}
                fullWidth={true}
                label="Author name"
                name="currentAuthor.0.nameAsPublished"
                placeholder=""
                required={true}
                rows={1}
                type="text"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
              sm={6}
              xs={12}
            >
              <Field
                component={[Function]}
                disabled={false}
                itemsList={
                  Array [
                    Object {
                      "text": "Select a thesis type",
                      "value": undefined,
                    },
                    Object {
                      "text": "MPhil Thesis",
                      "value": "MPhil Thesis",
                    },
                    Object {
                      "text": "PhD Thesis",
                      "value": "PhD Thesis",
                    },
                    Object {
                      "text": "Professional Doctorate",
                      "value": "Professional Doctorate",
                    },
                  ]
                }
                locale={
                  Object {
                    "label": "Thesis type",
                  }
                }
                name="rek_genre_type"
                required={true}
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
              xs={12}
            >
              <Field
                component={
                  Object {
                    "$$typeof": Symbol(react.memo),
                    "Naked": [Function],
                    "WrappedComponent": [Function],
                    "compare": null,
                    "displayName": "Connect(WithStyles(AutoCompleteAsyncField))",
                    "options": Object {
                      "defaultTheme": Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "only": [Function],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                          "width": [Function],
                        },
                        "direction": "ltr",
                        "mixins": Object {
                          "gutters": [Function],
                          "toolbar": Object {
                            "@media (min-width:0px) and (orientation: landscape)": Object {
                              "minHeight": 48,
                            },
                            "@media (min-width:600px)": Object {
                              "minHeight": 64,
                            },
                            "minHeight": 56,
                          },
                        },
                        "overrides": Object {},
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "augmentColor": [Function],
                          "background": Object {
                            "default": "#fafafa",
                            "paper": "#fff",
                          },
                          "common": Object {
                            "black": "#000",
                            "white": "#fff",
                          },
                          "contrastThreshold": 3,
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "getContrastText": [Function],
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "tonalOffset": 0.2,
                          "type": "light",
                        },
                        "props": Object {},
                        "shadows": Array [
                          "none",
                          "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                          "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                          "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "transitions": Object {
                          "create": [Function],
                          "duration": Object {
                            "complex": 375,
                            "enteringScreen": 225,
                            "leavingScreen": 195,
                            "short": 250,
                            "shorter": 200,
                            "shortest": 150,
                            "standard": 300,
                          },
                          "easing": Object {
                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                          },
                          "getAutoHeightDuration": [Function],
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "lineHeight": "1.46429em",
                          },
                          "body1Next": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.5,
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "lineHeight": "1.71429em",
                          },
                          "body2Next": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.01071em",
                            "lineHeight": 1.5,
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "textTransform": "uppercase",
                          },
                          "buttonNext": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.02857em",
                            "lineHeight": 1.75,
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "lineHeight": "1.375em",
                          },
                          "captionNext": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.03333em",
                            "lineHeight": 1.66,
                          },
                          "display1": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "lineHeight": "1.20588em",
                          },
                          "display2": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.8125rem",
                            "fontWeight": 400,
                            "lineHeight": "1.13333em",
                            "marginLeft": "-.02em",
                          },
                          "display3": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "-.02em",
                            "lineHeight": "1.30357em",
                            "marginLeft": "-.02em",
                          },
                          "display4": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "7rem",
                            "fontWeight": 300,
                            "letterSpacing": "-.04em",
                            "lineHeight": "1.14286em",
                            "marginLeft": "-.04em",
                          },
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": 14,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "6rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.01562em",
                            "lineHeight": 1,
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.00833em",
                            "lineHeight": 1,
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.04,
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00735em",
                            "lineHeight": 1.17,
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.33,
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.25rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.0075em",
                            "lineHeight": 1.6,
                          },
                          "headline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "lineHeight": "1.35417em",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.08333em",
                            "lineHeight": 2.66,
                            "textTransform": "uppercase",
                          },
                          "pxToRem": [Function],
                          "round": [Function],
                          "subheading": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "lineHeight": "1.5em",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.75,
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.00714em",
                            "lineHeight": 1.57,
                          },
                          "title": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.3125rem",
                            "fontWeight": 500,
                            "lineHeight": "1.16667em",
                          },
                          "useNextVariants": false,
                        },
                        "zIndex": Object {
                          "appBar": 1100,
                          "drawer": 1200,
                          "mobileStepper": 1000,
                          "modal": 1300,
                          "snackbar": 1400,
                          "tooltip": 1500,
                        },
                      },
                    },
                    "type": [Function],
                  }
                }
                disabled={false}
                floatingLabelText="Institution name"
                hintText=""
                name="fez_record_search_key_org_name.rek_org_name"
                required={true}
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
              xs={12}
            >
              <Field
                component={[Function]}
                disabled={false}
                floatingLabelText="Enrolling unit"
                hintText="Enrolling unit, eg. School of Business"
                name="fez_record_search_key_org_unit_name.rek_org_unit_name"
                required={true}
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
              xs={12}
            >
              <Field
                allowPartial={true}
                className="requiredHintField"
                component={[Function]}
                disabled={false}
                floatingTitle="Publication date"
                floatingTitleRequired={true}
                name="rek_date"
                required={true}
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
              xs={12}
            >
              <Field
                component={[Function]}
                disabled={false}
                name="thesisAbstract"
                title="Abstract"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </WithStyles(Grid)>
          </WithStyles(Grid)>
        </StandardCard>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <StandardCard
          title="Supervisors"
        >
          <Field
            component={[Function]}
            disabled={false}
            locale={
              Object {
                "form": Object {
                  "locale": Object {
                    "addButton": "Add supervisor",
                    "descriptionStep1": "",
                    "descriptionStep1NoStep2": "List your current supervisors",
                    "identifierLabel": "UQ identifier (if available)",
                    "nameAsPublishedFieldId": "supervisors-name-as-published-field",
                    "nameAsPublishedHint": "",
                    "nameAsPublishedLabel": "Enter each supervisor’s name on a separate line e.g. Firstname Surname",
                  },
                },
                "header": Object {
                  "locale": Object {
                    "contributorAssignmentColumn": "Select your name",
                    "deleteAll": "Remove all items",
                    "deleteAllConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete all items?",
                      "confirmationTitle": "Delete all",
                    },
                    "descriptionStep2": "",
                    "identifierColumn": "UQ identifier",
                    "nameColumn": "Supervisor's name",
                    "reorderColumn": "Reorder items",
                  },
                },
                "row": Object {
                  "locale": Object {
                    "deleteButtonId": [Function],
                    "deleteHint": "Remove this item",
                    "deleteRecordConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete this item?",
                      "confirmationTitle": "Delete item",
                    },
                    "moveDownHint": "Move item down the order",
                    "moveUpHint": "Move item up the order",
                    "selectHint": "Select this supervisor ([name]) to assign it as you",
                    "suffix": " listed supervisor",
                  },
                },
              }
            }
            name="supervisors"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          />
        </StandardCard>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <StandardCard
          title="Field of research"
        >
          <WithStyles(Typography)>
            Select up to 3 Field of Research (FoR) codes at the 4 digit level
          </WithStyles(Typography)>
          <Field
            component={[Function]}
            disabled={false}
            distinctOnly={true}
            hideReorder={true}
            locale={
              Object {
                "form": Object {
                  "locale": Object {
                    "inputFieldHint": "Start typing code or field name and select from list",
                    "inputFieldLabel": "Field of research",
                  },
                },
                "header": Object {
                  "locale": Object {
                    "deleteAll": "Remove all items",
                    "deleteAllConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete all items?",
                      "confirmationTitle": "Delete all",
                    },
                    "nameColumn": "Field of research",
                  },
                },
                "row": Object {
                  "locale": Object {
                    "deleteHint": "Remove this item",
                    "deleteRecordConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete this item?",
                      "confirmationTitle": "Delete item",
                    },
                  },
                },
              }
            }
            maxCount={3}
            name="fieldOfResearch"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          />
        </StandardCard>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <StandardCard
          title="Keywords"
        >
          <WithStyles(Typography)>
            Add up to 10 individual keywords, or a comma separated list, that describe the content of the thesis.
          </WithStyles(Typography)>
          <Field
            component={[Function]}
            disabled={false}
            locale={
              Object {
                "form": Object {
                  "locale": Object {
                    "addButtonLabel": "Add",
                    "id": "keywords-input",
                    "inputFieldHint": "Type keywords",
                    "inputFieldLabel": "Keywords",
                  },
                },
                "header": Object {
                  "locale": Object {
                    "deleteAll": "Remove all keywords",
                    "deleteAllConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete all keywords?",
                      "confirmationTitle": "Delete all",
                    },
                    "nameColumn": "Keyword",
                    "reorderColumn": "Reorder keywords",
                  },
                },
                "row": Object {
                  "locale": Object {
                    "deleteHint": "Remove this keyword",
                    "deleteRecordConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete this keyword?",
                      "confirmationTitle": "Delete keyword",
                    },
                    "moveDownHint": "Move keyword down the order",
                    "moveUpHint": "Move keyword up the order",
                  },
                },
              }
            }
            maxCount={10}
            name="fez_record_search_key_keywords"
            searchKey={
              Object {
                "order": "rek_keywords_order",
                "value": "rek_keywords",
              }
            }
          />
        </StandardCard>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <StandardCard
          title="Additional notes"
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="Notes (not publicly viewable)"
            multiline={true}
            name="comments"
            placeholder="Provide any additional information"
            rows={3}
            title="Additional notes"
            type="text"
          />
        </StandardCard>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <StandardCard
          title="Upload files"
        >
          <Field
            component={[Function]}
            defaultQuickTemplateId={3}
            disabled={false}
            locale={
              Object {
                "errorTitle": "Upload Errors",
                "fileUploadInstruction": <p>
                  Click here to select files, or drag files into this area to upload
                </p>,
                "fileUploadRestrictionHeading": "File upload restrictions",
                "fileUploadRestrictions": <div>
                  Maximum file size is 8GB. 
                  <br />
                  PDF files must be saved using the following naming structure
                   
                  <b>
                    &lt;student number&gt;_&lt;degree type&gt;_&lt;document name&gt;.pdf
                  </b>
                  . Document name could be thesis, abstract, and etc. For example:
                  <ul>
                    <li>
                      s1234567_pd_abstract.pdf
                    </li>
                    <li>
                      s1234567_pd_totalthesis.pdf
                    </li>
                  </ul>
                  Supplementary audio files are to be in MP 3 format. 
                  <br />
                  Supplementary video files are to be in WMV or AVI format. 
                  <br />
                </div>,
                "instructions": "",
                "successMessage": "Successfully added [numberOfFiles] file(s) to upload queue.",
                "successTitle": "Success",
                "validation": Object {
                  "duplicateFiles": "File(s) ([fileNames]) are duplicates and have been ignored",
                  "invalidFileNames": "File(s) ([fileNames]) have invalid file name",
                  "invalidMimeTypeFiles": "File(s) ([fileNames]) are not supported",
                  "notFiles": "Invalid files ([fileNames])",
                  "tooBigFiles": "File(s) ([fileNames]) exceed maximum allowed upload file size",
                  "tooManyFiles": "Maximum number of files ([maxNumberOfFiles]) has been exceeded. File(s) ([fileNames]) will not be uploaded",
                },
              }
            }
            name="files"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </StandardCard>
      </WithStyles(Grid)>
    </WithStyles(Grid)>
    <WithStyles(Grid)
      container={true}
      spacing={16}
    >
      <WithStyles(Grid)
        item={true}
        sm={true}
        xs={false}
      />
      <WithStyles(Grid)
        item={true}
        sm="auto"
        xs={12}
      >
        <WithStyles(Button)
          disabled={false}
          fullWidth={true}
          onClick={[Function]}
          variant="contained"
        >
          Cancel
        </WithStyles(Button)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        sm="auto"
        xs={12}
      >
        <WithStyles(Button)
          color="primary"
          fullWidth={true}
          onClick={[Function]}
          variant="contained"
        >
          Deposit your thesis
        </WithStyles(Button)>
      </WithStyles(Grid)>
    </WithStyles(Grid)>
  </form>
</StandardPage>
`;

exports[`SbsSubmission test should render sbs thesis submission form 2`] = `
<StandardPage
  title="Professional doctorate deposit"
>
  <form>
    <NavigationDialogBox
      txt={
        Object {
          "cancelButtonLabel": "No",
          "confirmButtonLabel": "Yes",
          "confirmationMessage": "Are you sure you want to abandon workflow?",
          "confirmationTitle": "Abandon workflow",
        }
      }
      when={true}
    />
    <ConfirmDialogBox
      hideCancelButton={false}
      locale={
        Object {
          "cancelButtonLabel": "No, continue editing",
          "confirmButtonLabel": "Yes, deposit thesis",
          "confirmationMessage": "You are about to deposit your thesis with attached files. Are you sure you want to proceed?",
          "confirmationTitle": "Thesis deposit",
        }
      }
      onAction={[MockFunction]}
      onRef={[Function]}
    />
    <WithStyles(Grid)
      container={true}
      spacing={24}
    >
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <StandardCard
          title="Thesis information"
        >
          <WithStyles(Grid)
            container={true}
            spacing={24}
          >
            <WithStyles(Grid)
              item={true}
              xs={12}
            >
              <Field
                component={[Function]}
                disabled={false}
                height={50}
                name="thesisTitle"
                title="Thesis title"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
              sm={6}
              xs={12}
            >
              <Field
                component={[Function]}
                disabled={false}
                fullWidth={true}
                label="Author name"
                name="currentAuthor.0.nameAsPublished"
                placeholder=""
                required={true}
                rows={1}
                type="text"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
              sm={6}
              xs={12}
            >
              <Field
                component={[Function]}
                disabled={false}
                itemsList={
                  Array [
                    Object {
                      "text": "Select a thesis type",
                      "value": undefined,
                    },
                    Object {
                      "text": "MPhil Thesis",
                      "value": "MPhil Thesis",
                    },
                    Object {
                      "text": "PhD Thesis",
                      "value": "PhD Thesis",
                    },
                    Object {
                      "text": "Professional Doctorate",
                      "value": "Professional Doctorate",
                    },
                  ]
                }
                locale={
                  Object {
                    "label": "Thesis type",
                  }
                }
                name="rek_genre_type"
                required={true}
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
              xs={12}
            >
              <Field
                component={
                  Object {
                    "$$typeof": Symbol(react.memo),
                    "Naked": [Function],
                    "WrappedComponent": [Function],
                    "compare": null,
                    "displayName": "Connect(WithStyles(AutoCompleteAsyncField))",
                    "options": Object {
                      "defaultTheme": Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "only": [Function],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                          "width": [Function],
                        },
                        "direction": "ltr",
                        "mixins": Object {
                          "gutters": [Function],
                          "toolbar": Object {
                            "@media (min-width:0px) and (orientation: landscape)": Object {
                              "minHeight": 48,
                            },
                            "@media (min-width:600px)": Object {
                              "minHeight": 64,
                            },
                            "minHeight": 56,
                          },
                        },
                        "overrides": Object {},
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "augmentColor": [Function],
                          "background": Object {
                            "default": "#fafafa",
                            "paper": "#fff",
                          },
                          "common": Object {
                            "black": "#000",
                            "white": "#fff",
                          },
                          "contrastThreshold": 3,
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "getContrastText": [Function],
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "tonalOffset": 0.2,
                          "type": "light",
                        },
                        "props": Object {},
                        "shadows": Array [
                          "none",
                          "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                          "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                          "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "transitions": Object {
                          "create": [Function],
                          "duration": Object {
                            "complex": 375,
                            "enteringScreen": 225,
                            "leavingScreen": 195,
                            "short": 250,
                            "shorter": 200,
                            "shortest": 150,
                            "standard": 300,
                          },
                          "easing": Object {
                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                          },
                          "getAutoHeightDuration": [Function],
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "lineHeight": "1.46429em",
                          },
                          "body1Next": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.5,
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "lineHeight": "1.71429em",
                          },
                          "body2Next": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.01071em",
                            "lineHeight": 1.5,
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "textTransform": "uppercase",
                          },
                          "buttonNext": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.02857em",
                            "lineHeight": 1.75,
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "lineHeight": "1.375em",
                          },
                          "captionNext": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.03333em",
                            "lineHeight": 1.66,
                          },
                          "display1": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "lineHeight": "1.20588em",
                          },
                          "display2": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.8125rem",
                            "fontWeight": 400,
                            "lineHeight": "1.13333em",
                            "marginLeft": "-.02em",
                          },
                          "display3": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "-.02em",
                            "lineHeight": "1.30357em",
                            "marginLeft": "-.02em",
                          },
                          "display4": Object {
                            "color": "rgba(0, 0, 0, 0.54)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "7rem",
                            "fontWeight": 300,
                            "letterSpacing": "-.04em",
                            "lineHeight": "1.14286em",
                            "marginLeft": "-.04em",
                          },
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": 14,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "6rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.01562em",
                            "lineHeight": 1,
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.00833em",
                            "lineHeight": 1,
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.04,
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00735em",
                            "lineHeight": 1.17,
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.33,
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.25rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.0075em",
                            "lineHeight": 1.6,
                          },
                          "headline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "lineHeight": "1.35417em",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.08333em",
                            "lineHeight": 2.66,
                            "textTransform": "uppercase",
                          },
                          "pxToRem": [Function],
                          "round": [Function],
                          "subheading": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "lineHeight": "1.5em",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.75,
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.00714em",
                            "lineHeight": 1.57,
                          },
                          "title": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.3125rem",
                            "fontWeight": 500,
                            "lineHeight": "1.16667em",
                          },
                          "useNextVariants": false,
                        },
                        "zIndex": Object {
                          "appBar": 1100,
                          "drawer": 1200,
                          "mobileStepper": 1000,
                          "modal": 1300,
                          "snackbar": 1400,
                          "tooltip": 1500,
                        },
                      },
                    },
                    "type": [Function],
                  }
                }
                disabled={false}
                floatingLabelText="Institution name"
                hintText=""
                name="fez_record_search_key_org_name.rek_org_name"
                required={true}
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
              xs={12}
            >
              <Field
                component={[Function]}
                disabled={false}
                floatingLabelText="Enrolling unit"
                hintText="Enrolling unit, eg. School of Business"
                name="fez_record_search_key_org_unit_name.rek_org_unit_name"
                required={true}
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
              xs={12}
            >
              <Field
                allowPartial={true}
                className="requiredHintField"
                component={[Function]}
                disabled={false}
                floatingTitle="Publication date"
                floatingTitleRequired={true}
                name="rek_date"
                required={true}
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
              xs={12}
            >
              <Field
                component={[Function]}
                disabled={false}
                name="thesisAbstract"
                title="Abstract"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </WithStyles(Grid)>
          </WithStyles(Grid)>
        </StandardCard>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <StandardCard
          title="Supervisors"
        >
          <Field
            component={[Function]}
            disabled={false}
            locale={
              Object {
                "form": Object {
                  "locale": Object {
                    "addButton": "Add supervisor",
                    "descriptionStep1": "",
                    "descriptionStep1NoStep2": "List your current supervisors",
                    "identifierLabel": "UQ identifier (if available)",
                    "nameAsPublishedFieldId": "supervisors-name-as-published-field",
                    "nameAsPublishedHint": "",
                    "nameAsPublishedLabel": "Enter each supervisor’s name on a separate line e.g. Firstname Surname",
                  },
                },
                "header": Object {
                  "locale": Object {
                    "contributorAssignmentColumn": "Select your name",
                    "deleteAll": "Remove all items",
                    "deleteAllConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete all items?",
                      "confirmationTitle": "Delete all",
                    },
                    "descriptionStep2": "",
                    "identifierColumn": "UQ identifier",
                    "nameColumn": "Supervisor's name",
                    "reorderColumn": "Reorder items",
                  },
                },
                "row": Object {
                  "locale": Object {
                    "deleteButtonId": [Function],
                    "deleteHint": "Remove this item",
                    "deleteRecordConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete this item?",
                      "confirmationTitle": "Delete item",
                    },
                    "moveDownHint": "Move item down the order",
                    "moveUpHint": "Move item up the order",
                    "selectHint": "Select this supervisor ([name]) to assign it as you",
                    "suffix": " listed supervisor",
                  },
                },
              }
            }
            name="supervisors"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          />
        </StandardCard>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <StandardCard
          title="Field of research"
        >
          <WithStyles(Typography)>
            Select up to 3 Field of Research (FoR) codes at the 4 digit level
          </WithStyles(Typography)>
          <Field
            component={[Function]}
            disabled={false}
            distinctOnly={true}
            hideReorder={true}
            locale={
              Object {
                "form": Object {
                  "locale": Object {
                    "inputFieldHint": "Start typing code or field name and select from list",
                    "inputFieldLabel": "Field of research",
                  },
                },
                "header": Object {
                  "locale": Object {
                    "deleteAll": "Remove all items",
                    "deleteAllConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete all items?",
                      "confirmationTitle": "Delete all",
                    },
                    "nameColumn": "Field of research",
                  },
                },
                "row": Object {
                  "locale": Object {
                    "deleteHint": "Remove this item",
                    "deleteRecordConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete this item?",
                      "confirmationTitle": "Delete item",
                    },
                  },
                },
              }
            }
            maxCount={3}
            name="fieldOfResearch"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          />
        </StandardCard>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <StandardCard
          title="Keywords"
        >
          <WithStyles(Typography)>
            Add up to 10 individual keywords, or a comma separated list, that describe the content of the thesis.
          </WithStyles(Typography)>
          <Field
            component={[Function]}
            disabled={false}
            locale={
              Object {
                "form": Object {
                  "locale": Object {
                    "addButtonLabel": "Add",
                    "id": "keywords-input",
                    "inputFieldHint": "Type keywords",
                    "inputFieldLabel": "Keywords",
                  },
                },
                "header": Object {
                  "locale": Object {
                    "deleteAll": "Remove all keywords",
                    "deleteAllConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete all keywords?",
                      "confirmationTitle": "Delete all",
                    },
                    "nameColumn": "Keyword",
                    "reorderColumn": "Reorder keywords",
                  },
                },
                "row": Object {
                  "locale": Object {
                    "deleteHint": "Remove this keyword",
                    "deleteRecordConfirmation": Object {
                      "cancelButtonLabel": "No",
                      "confirmButtonLabel": "Yes",
                      "confirmationMessage": "Are you sure you want to delete this keyword?",
                      "confirmationTitle": "Delete keyword",
                    },
                    "moveDownHint": "Move keyword down the order",
                    "moveUpHint": "Move keyword up the order",
                  },
                },
              }
            }
            maxCount={10}
            name="fez_record_search_key_keywords"
            searchKey={
              Object {
                "order": "rek_keywords_order",
                "value": "rek_keywords",
              }
            }
          />
        </StandardCard>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <StandardCard
          title="Additional notes"
        >
          <Field
            component={[Function]}
            disabled={false}
            fullWidth={true}
            label="Notes (not publicly viewable)"
            multiline={true}
            name="comments"
            placeholder="Provide any additional information"
            rows={3}
            title="Additional notes"
            type="text"
          />
        </StandardCard>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        xs={12}
      >
        <StandardCard
          title="Upload files"
        >
          <Field
            component={[Function]}
            defaultQuickTemplateId={3}
            disabled={false}
            locale={
              Object {
                "errorTitle": "Upload Errors",
                "fileUploadInstruction": <p>
                  Click here to select files, or drag files into this area to upload
                </p>,
                "fileUploadRestrictionHeading": "File upload restrictions",
                "fileUploadRestrictions": <div>
                  Maximum file size is 8GB. 
                  <br />
                  PDF files must be saved using the following naming structure
                   
                  <b>
                    &lt;student number&gt;_&lt;degree type&gt;_&lt;document name&gt;.pdf
                  </b>
                  . Document name could be thesis, abstract, and etc. For example:
                  <ul>
                    <li>
                      s1234567_pd_abstract.pdf
                    </li>
                    <li>
                      s1234567_pd_totalthesis.pdf
                    </li>
                  </ul>
                  Supplementary audio files are to be in MP 3 format. 
                  <br />
                  Supplementary video files are to be in WMV or AVI format. 
                  <br />
                </div>,
                "instructions": "",
                "successMessage": "Successfully added [numberOfFiles] file(s) to upload queue.",
                "successTitle": "Success",
                "validation": Object {
                  "duplicateFiles": "File(s) ([fileNames]) are duplicates and have been ignored",
                  "invalidFileNames": "File(s) ([fileNames]) have invalid file name",
                  "invalidMimeTypeFiles": "File(s) ([fileNames]) are not supported",
                  "notFiles": "Invalid files ([fileNames])",
                  "tooBigFiles": "File(s) ([fileNames]) exceed maximum allowed upload file size",
                  "tooManyFiles": "Maximum number of files ([maxNumberOfFiles]) has been exceeded. File(s) ([fileNames]) will not be uploaded",
                },
              }
            }
            name="files"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </StandardCard>
      </WithStyles(Grid)>
    </WithStyles(Grid)>
    <WithStyles(Grid)
      container={true}
      spacing={16}
    >
      <WithStyles(Grid)
        item={true}
        sm={true}
        xs={false}
      />
      <WithStyles(Grid)
        item={true}
        sm="auto"
        xs={12}
      >
        <WithStyles(Button)
          disabled={false}
          fullWidth={true}
          onClick={[Function]}
          variant="contained"
        >
          Cancel
        </WithStyles(Button)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        sm="auto"
        xs={12}
      >
        <WithStyles(Button)
          color="primary"
          fullWidth={true}
          onClick={[Function]}
          variant="contained"
        >
          Deposit your thesis
        </WithStyles(Button)>
      </WithStyles(Grid)>
    </WithStyles(Grid)>
  </form>
</StandardPage>
`;

exports[`SbsSubmission test should render sbs thesis submission form 3`] = `
<StandardPage
  title="Professional doctorate deposit"
>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(Alert)
        action={[Function]}
        actionButtonLabel="RESUBMIT YOUR THESIS"
        message="There was an issue uploading your thesis files. You will need to resubmit your thesis by clicking on the 'Resubmit your thesis' button."
        title="FILE UPLOAD ERROR"
        type="error"
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;
