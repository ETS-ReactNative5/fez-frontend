// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ThesisSubmission test should display successfull submission screen 1`] = `
<StandardPage
  className=""
  title="Professional doctorate deposit"
>
  <StandardCard
    className=""
  >
    <p>
      Your thesis has been deposited. You will receive an email confirming your thesis deposit shortly.
    </p>
  </StandardCard>
  <div
    className="columns action-buttons"
  >
    <div
      className="column is-hidden-mobile"
    />
    <div
      className="column is-narrow-desktop"
    >
      <RaisedButton
        disabled={false}
        fullWidth={true}
        label="Return to the Graduate School website"
        labelPosition="after"
        onClick={[Function]}
        primary={false}
        secondary={true}
      />
    </div>
  </div>
</StandardPage>
`;

exports[`ThesisSubmission test should render hdr thesis submission acknowledgement 1`] = `
<StandardPage
  className=""
  title="Higher degree by research thesis deposit"
>
  <StandardCard
    className=""
  >
    <p>
      Your thesis has been deposited. You will receive an email confirming your thesis deposit shortly.
    </p>
  </StandardCard>
  <div
    className="columns action-buttons"
  >
    <div
      className="column is-hidden-mobile"
    />
    <div
      className="column is-narrow-desktop"
    >
      <RaisedButton
        disabled={false}
        fullWidth={true}
        label="Return to the Graduate School website"
        labelPosition="after"
        onClick={[Function]}
        primary={false}
        secondary={true}
      />
    </div>
  </div>
</StandardPage>
`;

exports[`ThesisSubmission test should render hdr thesis submission form 1`] = `
<StandardPage
  className=""
  title="Higher degree by research thesis deposit"
>
  <p>
    <span>
      Required fields are marked with 
      <span
        className="requiredField"
      >
        <label>
           
        </label>
      </span>
    </span>
  </p>
  <form>
    <NavigationDialogBox
      txt={
        Object {
          "cancelButtonLabel": "No",
          "confirmButtonLabel": "Yes",
          "confirmationMessage": "Are you sure you want to abandon workflow?",
          "confirmationTitle": "Abandon workflow",
        }
      }
      when={true}
    />
    <ConfirmDialogBox
      hideCancelButton={false}
      locale={
        Object {
          "cancelButtonLabel": "No, continue editing",
          "confirmButtonLabel": "Yes, deposit thesis",
          "confirmationMessage": "You are about to deposit your thesis with attached files. Are you sure you want to proceed?",
          "confirmationTitle": "Thesis deposit",
        }
      }
      onAction={[MockFunction]}
      onRef={[Function]}
    />
    <StandardCard
      className=""
      title="Thesis information"
    >
      <div
        className="columns"
        style={
          Object {
            "marginTop": "6px",
          }
        }
      >
        <div
          className="column requiredField"
        >
          <label
            htmlFor="thesisTitle"
          >
            Title
          </label>
          <Field
            component={[Function]}
            disabled={false}
            height={50}
            name="thesisTitle"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </div>
      </div>
      <div
        className="columns"
      >
        <div
          className="column is-half"
        >
          <Field
            className="requiredField"
            component={[Function]}
            disabled={false}
            floatingLabelText="Author name"
            fullWidth={true}
            hintText=""
            name="currentAuthor.0.nameAsPublished"
            rows={1}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </div>
        <div
          className="column "
        >
          <Field
            className="requiredField"
            component={[Function]}
            disabled={false}
            itemsList={
              Array [
                "MPhil Thesis",
                "PhD Thesis",
                "Professional Doctorate",
              ]
            }
            locale={
              Object {
                "label": "Thesis type",
              }
            }
            name="rek_genre_type"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </div>
      </div>
      <div
        className="columns"
      >
        <div
          className="column"
        >
          <Field
            className="requiredField"
            component={[Function]}
            disabled={false}
            floatingLabelText="Enrolling unit"
            hintText="Enrolling unit, eg. School of Business"
            name="fez_record_search_key_org_unit_name.rek_org_unit_name"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </div>
      </div>
      <div
        className="columns"
        style={
          Object {
            "marginTop": "6px",
          }
        }
      >
        <div
          className="column requiredField"
        >
          <label
            htmlFor="thesisAbstract"
          >
            Abstract
          </label>
          <Field
            component={[Function]}
            disabled={false}
            name="thesisAbstract"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </div>
      </div>
    </StandardCard>
    <StandardCard
      className=""
      title="Supervisors"
    >
      <Field
        className="requiredField"
        component={[Function]}
        disabled={false}
        locale={
          Object {
            "form": Object {
              "locale": Object {
                "addButton": "Add supervisor",
                "descriptionStep1": "",
                "descriptionStep1NoStep2": "List your current supervisors",
                "identifierLabel": "UQ identifier (if available)",
                "nameAsPublishedHint": "",
                "nameAsPublishedLabel": "Enter each supervisor’s name on a separate line e.g. Firstname Surname",
              },
            },
            "header": Object {
              "locale": Object {
                "contributorAssignmentColumn": "Select your name",
                "deleteAll": "Remove all items",
                "deleteAllConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete all items?",
                  "confirmationTitle": "Delete all",
                },
                "descriptionStep2": "",
                "identifierColumn": "UQ identifier",
                "nameColumn": "Supervisor's name",
                "reorderColumn": "Reorder items",
              },
            },
            "row": Object {
              "locale": Object {
                "deleteHint": "Remove this item",
                "deleteRecordConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete this item?",
                  "confirmationTitle": "Delete item",
                },
                "moveDownHint": "Move item down the order",
                "moveUpHint": "Move item up the order",
                "ordinalData": Array [
                  "First",
                  "Second",
                  "Third",
                  "Fourth",
                  "Fifth",
                  "Sixth",
                  "Seventh",
                  "Eighth",
                  "Ninth",
                  "Tenth",
                ],
                "selectHint": "Select this supervisor ([name]) to assign it as you",
                "suffix": " listed supervisor",
              },
            },
          }
        }
        name="supervisors"
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
    <StandardCard
      className=""
      title="Field of research"
    >
      <div>
        Select up to 3 Field of Research (FoR) codes at the 4 digit level
      </div>
      <Field
        className="requiredField"
        component={[Function]}
        disabled={false}
        distinctOnly={true}
        hideReorder={true}
        locale={
          Object {
            "form": Object {
              "locale": Object {
                "inputFieldHint": "Start typing code or field name and select from list",
                "inputFieldLabel": "Field of research",
              },
            },
            "header": Object {
              "locale": Object {
                "deleteAll": "Remove all items",
                "deleteAllConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete all items?",
                  "confirmationTitle": "Delete all",
                },
                "nameColumn": "Field of research",
              },
            },
            "row": Object {
              "locale": Object {
                "deleteHint": "Remove this item",
                "deleteRecordConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete this item?",
                  "confirmationTitle": "Delete item",
                },
              },
            },
          }
        }
        maxCount={3}
        name="fieldOfResearch"
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
    <StandardCard
      className=""
      title="Keywords"
    >
      <div>
        Add up to 10 keywords that describe the content of the thesis
      </div>
      <Field
        className="requiredField"
        component={[Function]}
        disabled={false}
        locale={
          Object {
            "form": Object {
              "locale": Object {
                "addButtonLabel": "Add",
                "inputFieldHint": "Type keywords",
                "inputFieldLabel": "Keywords",
              },
            },
            "header": Object {
              "locale": Object {
                "deleteAll": "Remove all keywords",
                "deleteAllConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete all keywords?",
                  "confirmationTitle": "Delete all",
                },
                "nameColumn": "Keyword",
                "reorderColumn": "Reorder keywords",
              },
            },
            "row": Object {
              "locale": Object {
                "deleteHint": "Remove this keyword",
                "deleteRecordConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete this keyword?",
                  "confirmationTitle": "Delete keyword",
                },
                "moveDownHint": "Move keyword down the order",
                "moveUpHint": "Move keyword up the order",
              },
            },
          }
        }
        maxCount={10}
        name="fez_record_search_key_keywords"
        searchKey={
          Object {
            "order": "rek_keywords_order",
            "value": "rek_keywords",
          }
        }
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
    <StandardCard
      className=""
      title="Upload files"
    >
      <Field
        component={[Function]}
        defaultQuickTemplateId={3}
        disabled={false}
        locale={
          Object {
            "accessTermsAndConditions": "I understand that the files indicated above as open access will be submitted as open access and will be made publicly available immediately or will be made available on the indicated embargo date.  All other files submitted will be accessible by UQ eSpace administrators.",
            "errorTitle": "Upload Errors",
            "fileUploadInstruction": <p>
              Click here to select files, or drag files into this area to upload
            </p>,
            "fileUploadRestrictionHeading": <h3>
              <span
                className="requiredField"
              >
                <label>
                   
                </label>
              </span>
              File upload restrictions
            </h3>,
            "fileUploadRestrictions": <div>
              Maximum file size is 5Gb. 
              <br />
              PDF files must be saved using the following naming structure 
              <b>
                &lt;student number&gt;_&lt;degree type&gt;_&lt;document name&gt;.pdf
              </b>
              . Document name could be thesis, abstract, and etc. For example:
              <ul>
                <li>
                  s1234567_phd_thesis.pdf
                </li>
                <li>
                  s1234567_phd_abstract.pdf
                </li>
              </ul>
              Supplementary audio files are to be in MP 3 format. 
              <br />
              Supplementary video files are to be in WMV or AVI format. 
              <br />
            </div>,
            "instructions": "",
            "successMessage": "Successfully added [numberOfFiles] file(s) to upload queue.",
            "successTitle": "Success",
            "validation": Object {
              "duplicateFiles": "File(s) ([fileNames]) are duplicates and have been ignored",
              "invalidFileNames": "File(s) ([fileNames]) have invalid file name",
              "notFiles": "Invalid files ([fileNames])",
              "tooBigFiles": "File(s) ([fileNames]) exceed maximum allowed upload file size",
              "tooManyFiles": "Maximum number of files ([maxNumberOfFiles]) has been exceeded. File(s) ([fileNames]) will not be uploaded",
            },
          }
        }
        name="files"
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
    <div
      className="columns action-buttons"
    >
      <div
        className="column is-hidden-mobile"
      />
      <div
        className="column is-narrow-desktop"
      >
        <RaisedButton
          disabled={false}
          fullWidth={true}
          label="Cancel"
          labelPosition="after"
          onClick={[Function]}
          primary={false}
          secondary={false}
        />
      </div>
      <div
        className="column is-narrow-desktop"
      >
        <RaisedButton
          disabled={false}
          fullWidth={true}
          label="Deposit your thesis"
          labelPosition="after"
          onClick={[Function]}
          primary={false}
          secondary={true}
        />
      </div>
    </div>
  </form>
</StandardPage>
`;

exports[`ThesisSubmission test should render sbs thesis submission acknowledgement 1`] = `
<StandardPage
  className=""
  title="Professional doctorate deposit"
>
  <StandardCard
    className=""
  >
    <p>
      Your thesis has been deposited. You will receive an email confirming your thesis deposit shortly.
    </p>
  </StandardCard>
  <div
    className="columns action-buttons"
  >
    <div
      className="column is-hidden-mobile"
    />
    <div
      className="column is-narrow-desktop"
    >
      <RaisedButton
        disabled={false}
        fullWidth={true}
        label="Return to the Graduate School website"
        labelPosition="after"
        onClick={[Function]}
        primary={false}
        secondary={true}
      />
    </div>
  </div>
</StandardPage>
`;

exports[`ThesisSubmission test should render sbs thesis submission form 1`] = `
<StandardPage
  className=""
  title="Professional doctorate deposit"
>
  <p>
    <span>
      Required fields are marked with 
      <span
        className="requiredField"
      >
        <label>
           
        </label>
      </span>
    </span>
  </p>
  <form>
    <NavigationDialogBox
      txt={
        Object {
          "cancelButtonLabel": "No",
          "confirmButtonLabel": "Yes",
          "confirmationMessage": "Are you sure you want to abandon workflow?",
          "confirmationTitle": "Abandon workflow",
        }
      }
      when={true}
    />
    <ConfirmDialogBox
      hideCancelButton={false}
      locale={
        Object {
          "cancelButtonLabel": "No, continue editing",
          "confirmButtonLabel": "Yes, deposit thesis",
          "confirmationMessage": "You are about to deposit your thesis with attached files. Are you sure you want to proceed?",
          "confirmationTitle": "Thesis deposit",
        }
      }
      onAction={[MockFunction]}
      onRef={[Function]}
    />
    <StandardCard
      className=""
      title="Thesis information"
    >
      <div
        className="columns"
        style={
          Object {
            "marginTop": "6px",
          }
        }
      >
        <div
          className="column requiredField"
        >
          <label
            htmlFor="thesisTitle"
          >
            Title
          </label>
          <Field
            component={[Function]}
            disabled={false}
            height={50}
            name="thesisTitle"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </div>
      </div>
      <div
        className="columns"
      >
        <div
          className="column is-half"
        >
          <Field
            className="requiredField"
            component={[Function]}
            disabled={false}
            floatingLabelText="Author name"
            fullWidth={true}
            hintText=""
            name="currentAuthor.0.nameAsPublished"
            rows={1}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </div>
        <div
          className="column "
        >
          <Field
            className="requiredField"
            component={[Function]}
            disabled={false}
            itemsList={
              Array [
                "MPhil Thesis",
                "PhD Thesis",
                "Professional Doctorate",
              ]
            }
            locale={
              Object {
                "label": "Thesis type",
              }
            }
            name="rek_genre_type"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </div>
      </div>
      <div
        className="columns"
      >
        <div
          className="column"
        >
          <Field
            className="requiredField"
            component={[Function]}
            disabled={false}
            floatingLabelText="Enrolling unit"
            hintText="Enrolling unit, eg. School of Business"
            name="fez_record_search_key_org_unit_name.rek_org_unit_name"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </div>
      </div>
      <div
        className="columns"
        style={
          Object {
            "marginTop": "6px",
          }
        }
      >
        <div
          className="column requiredField"
        >
          <label
            htmlFor="thesisAbstract"
          >
            Abstract
          </label>
          <Field
            component={[Function]}
            disabled={false}
            name="thesisAbstract"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </div>
      </div>
    </StandardCard>
    <StandardCard
      className=""
      title="Supervisors"
    >
      <Field
        className="requiredField"
        component={[Function]}
        disabled={false}
        locale={
          Object {
            "form": Object {
              "locale": Object {
                "addButton": "Add supervisor",
                "descriptionStep1": "",
                "descriptionStep1NoStep2": "List your current supervisors",
                "identifierLabel": "UQ identifier (if available)",
                "nameAsPublishedHint": "",
                "nameAsPublishedLabel": "Enter each supervisor’s name on a separate line e.g. Firstname Surname",
              },
            },
            "header": Object {
              "locale": Object {
                "contributorAssignmentColumn": "Select your name",
                "deleteAll": "Remove all items",
                "deleteAllConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete all items?",
                  "confirmationTitle": "Delete all",
                },
                "descriptionStep2": "",
                "identifierColumn": "UQ identifier",
                "nameColumn": "Supervisor's name",
                "reorderColumn": "Reorder items",
              },
            },
            "row": Object {
              "locale": Object {
                "deleteHint": "Remove this item",
                "deleteRecordConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete this item?",
                  "confirmationTitle": "Delete item",
                },
                "moveDownHint": "Move item down the order",
                "moveUpHint": "Move item up the order",
                "ordinalData": Array [
                  "First",
                  "Second",
                  "Third",
                  "Fourth",
                  "Fifth",
                  "Sixth",
                  "Seventh",
                  "Eighth",
                  "Ninth",
                  "Tenth",
                ],
                "selectHint": "Select this supervisor ([name]) to assign it as you",
                "suffix": " listed supervisor",
              },
            },
          }
        }
        name="supervisors"
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
    <StandardCard
      className=""
      title="Field of research"
    >
      <div>
        Select up to 3 Field of Research (FoR) codes at the 4 digit level
      </div>
      <Field
        className="requiredField"
        component={[Function]}
        disabled={false}
        distinctOnly={true}
        hideReorder={true}
        locale={
          Object {
            "form": Object {
              "locale": Object {
                "inputFieldHint": "Start typing code or field name and select from list",
                "inputFieldLabel": "Field of research",
              },
            },
            "header": Object {
              "locale": Object {
                "deleteAll": "Remove all items",
                "deleteAllConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete all items?",
                  "confirmationTitle": "Delete all",
                },
                "nameColumn": "Field of research",
              },
            },
            "row": Object {
              "locale": Object {
                "deleteHint": "Remove this item",
                "deleteRecordConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete this item?",
                  "confirmationTitle": "Delete item",
                },
              },
            },
          }
        }
        maxCount={3}
        name="fieldOfResearch"
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
    <StandardCard
      className=""
      title="Keywords"
    >
      <div>
        Add up to 10 keywords that describe the content of the thesis
      </div>
      <Field
        className="requiredField"
        component={[Function]}
        disabled={false}
        locale={
          Object {
            "form": Object {
              "locale": Object {
                "addButtonLabel": "Add",
                "inputFieldHint": "Type keywords",
                "inputFieldLabel": "Keywords",
              },
            },
            "header": Object {
              "locale": Object {
                "deleteAll": "Remove all keywords",
                "deleteAllConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete all keywords?",
                  "confirmationTitle": "Delete all",
                },
                "nameColumn": "Keyword",
                "reorderColumn": "Reorder keywords",
              },
            },
            "row": Object {
              "locale": Object {
                "deleteHint": "Remove this keyword",
                "deleteRecordConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete this keyword?",
                  "confirmationTitle": "Delete keyword",
                },
                "moveDownHint": "Move keyword down the order",
                "moveUpHint": "Move keyword up the order",
              },
            },
          }
        }
        maxCount={10}
        name="fez_record_search_key_keywords"
        searchKey={
          Object {
            "order": "rek_keywords_order",
            "value": "rek_keywords",
          }
        }
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
    <StandardCard
      className=""
      title="Upload files"
    >
      <Field
        component={[Function]}
        defaultQuickTemplateId={3}
        disabled={false}
        locale={
          Object {
            "accessTermsAndConditions": "I understand that the files indicated above as open access will be submitted as open access and will be made publicly available immediately or will be made available on the indicated embargo date.  All other files submitted will be accessible by UQ eSpace administrators.",
            "errorTitle": "Upload Errors",
            "fileUploadInstruction": <p>
              Click here to select files, or drag files into this area to upload
            </p>,
            "fileUploadRestrictionHeading": <h3>
              <span
                className="requiredField"
              >
                <label>
                   
                </label>
              </span>
              File upload restrictions
            </h3>,
            "fileUploadRestrictions": <div>
              Maximum file size is 5Gb. 
              <br />
              PDF files must be saved using the following naming structure 
              <b>
                &lt;student number&gt;_&lt;degree type&gt;_&lt;document name&gt;.pdf
              </b>
              . Document name could be thesis, abstract, and etc. For example:
              <ul>
                <li>
                  s1234567_phd_thesis.pdf
                </li>
                <li>
                  s1234567_phd_abstract.pdf
                </li>
              </ul>
              Supplementary audio files are to be in MP 3 format. 
              <br />
              Supplementary video files are to be in WMV or AVI format. 
              <br />
            </div>,
            "instructions": "",
            "successMessage": "Successfully added [numberOfFiles] file(s) to upload queue.",
            "successTitle": "Success",
            "validation": Object {
              "duplicateFiles": "File(s) ([fileNames]) are duplicates and have been ignored",
              "invalidFileNames": "File(s) ([fileNames]) have invalid file name",
              "notFiles": "Invalid files ([fileNames])",
              "tooBigFiles": "File(s) ([fileNames]) exceed maximum allowed upload file size",
              "tooManyFiles": "Maximum number of files ([maxNumberOfFiles]) has been exceeded. File(s) ([fileNames]) will not be uploaded",
            },
          }
        }
        name="files"
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
    <div
      className="columns action-buttons"
    >
      <div
        className="column is-hidden-mobile"
      />
      <div
        className="column is-narrow-desktop"
      >
        <RaisedButton
          disabled={false}
          fullWidth={true}
          label="Cancel"
          labelPosition="after"
          onClick={[Function]}
          primary={false}
          secondary={false}
        />
      </div>
      <div
        className="column is-narrow-desktop"
      >
        <RaisedButton
          disabled={false}
          fullWidth={true}
          label="Deposit your thesis"
          labelPosition="after"
          onClick={[Function]}
          primary={false}
          secondary={true}
        />
      </div>
    </div>
  </form>
</StandardPage>
`;
