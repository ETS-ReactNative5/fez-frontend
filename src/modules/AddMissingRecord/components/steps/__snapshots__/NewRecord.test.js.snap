// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Add new record should not render publication form if author is not loaded  1`] = `<span />`;

exports[`Add new record should render alert about file uploading or issue error 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    locale={
      Object {
        "alternateActionButtonLabel": "Fix record",
        "cancelButtonLabel": "Add another missing work",
        "confirmButtonLabel": "Go to my research",
        "confirmationMessage": <WithStyles(Grid)
          container={true}
          spacing={3}
        >
          <WithStyles(Grid)
            item={true}
            xs={12}
          >
            <WithStyles(Alert)
              message="Retry via \\"Fix record\\" screen or contact eSpace administrators."
              title="File upload and/or notes post failed"
              type="warning"
            />
            <p>
              Your work has been saved.
              <br />
              <br />
              Your work will be published immediately and a UQ eSpace Research Outputs Officer will review the record.
            </p>
          </WithStyles(Grid)>
        </WithStyles(Grid)>,
        "confirmationTitle": "Your work has been submitted",
        "fileFailConfirmationAlert": Object {
          "message": "Retry via \\"Fix record\\" screen or contact eSpace administrators.",
          "title": "File upload and/or notes post failed",
          "type": "warning",
        },
        "recordSuccessConfirmationMessage": <p>
          Your work has been saved.
          <br />
          <br />
          Your work will be published immediately and a UQ eSpace Research Outputs Officer will review the record.
        </p>,
      }
    }
    onAction={[Function]}
    onAlternateAction={[Function]}
    onCancelAction={[Function]}
    onRef={[Function]}
    showAlternateActionButton={true}
  />
  <Connect(ReduxForm)
    initialValues={
      Object {
        "currentAuthor": Array [
          Object {
            "authorId": "",
            "nameAsPublished": "",
          },
        ],
        "rek_title": "",
      }
    }
    onFormCancel={[Function]}
    onFormSubmitSuccess={[Function]}
  />
</Fragment>
`;

exports[`Add new record should render stepper and a publication form 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    locale={
      Object {
        "alternateActionButtonLabel": "Fix record",
        "cancelButtonLabel": "Add another missing work",
        "confirmButtonLabel": "Go to my research",
        "confirmationMessage": <WithStyles(Grid)
          container={true}
          spacing={3}
        >
          <WithStyles(Grid)
            item={true}
            xs={12}
          >
            <p>
              Your work has been saved.
              <br />
              <br />
              Your work will be published immediately and a UQ eSpace Research Outputs Officer will review the record.
            </p>
          </WithStyles(Grid)>
        </WithStyles(Grid)>,
        "confirmationTitle": "Your work has been submitted",
        "fileFailConfirmationAlert": Object {
          "message": "Retry via \\"Fix record\\" screen or contact eSpace administrators.",
          "title": "File upload and/or notes post failed",
          "type": "warning",
        },
        "recordSuccessConfirmationMessage": <p>
          Your work has been saved.
          <br />
          <br />
          Your work will be published immediately and a UQ eSpace Research Outputs Officer will review the record.
        </p>,
      }
    }
    onAction={[Function]}
    onAlternateAction={[Function]}
    onCancelAction={[Function]}
    onRef={[Function]}
  />
  <Connect(ReduxForm)
    initialValues={
      Object {
        "currentAuthor": Array [
          Object {
            "authorId": 44,
            "nameAsPublished": "Fred",
          },
        ],
        "rek_title": "",
      }
    }
    onFormCancel={[Function]}
    onFormSubmitSuccess={[Function]}
  />
</Fragment>
`;

exports[`Add new record should render the confirm dialog with an alert for failed file upload 1`] = `
<WithStyles(ConfirmDialogBox)
  locale={
    Object {
      "alternateActionButtonLabel": "Fix record",
      "cancelButtonLabel": "Add another missing work",
      "confirmButtonLabel": "Go to my research",
      "confirmationMessage": <WithStyles(Grid)
        container={true}
        spacing={3}
      >
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <p>
            Your work has been saved.
            <br />
            <br />
            Your work will be published immediately and a UQ eSpace Research Outputs Officer will review the record.
          </p>
        </WithStyles(Grid)>
      </WithStyles(Grid)>,
      "confirmationTitle": "Your work has been submitted",
      "fileFailConfirmationAlert": Object {
        "message": "Retry via \\"Fix record\\" screen or contact eSpace administrators.",
        "title": "File upload and/or notes post failed",
        "type": "warning",
      },
      "recordSuccessConfirmationMessage": <p>
        Your work has been saved.
        <br />
        <br />
        Your work will be published immediately and a UQ eSpace Research Outputs Officer will review the record.
      </p>,
    }
  }
  onAction={[Function]}
  onAlternateAction={[Function]}
  onCancelAction={[Function]}
  onRef={[Function]}
>
  <ConfirmDialogBox
    classes={
      Object {
        "alternateActionButtonClass": "ConfirmDialogBox-alternateActionButtonClass-1",
      }
    }
    hideCancelButton={false}
    locale={
      Object {
        "alternateActionButtonLabel": "Fix record",
        "cancelButtonLabel": "Add another missing work",
        "confirmButtonLabel": "Go to my research",
        "confirmationMessage": <WithStyles(Grid)
          container={true}
          spacing={3}
        >
          <WithStyles(Grid)
            item={true}
            xs={12}
          >
            <p>
              Your work has been saved.
              <br />
              <br />
              Your work will be published immediately and a UQ eSpace Research Outputs Officer will review the record.
            </p>
          </WithStyles(Grid)>
        </WithStyles(Grid)>,
        "confirmationTitle": "Your work has been submitted",
        "fileFailConfirmationAlert": Object {
          "message": "Retry via \\"Fix record\\" screen or contact eSpace administrators.",
          "title": "File upload and/or notes post failed",
          "type": "warning",
        },
        "recordSuccessConfirmationMessage": <p>
          Your work has been saved.
          <br />
          <br />
          Your work will be published immediately and a UQ eSpace Research Outputs Officer will review the record.
        </p>,
      }
    }
    onAction={[Function]}
    onAlternateAction={[Function]}
    onCancelAction={[Function]}
    onRef={[Function]}
    showAlternateActionButton={false}
  >
    <WithStyles(Dialog)
      open={false}
      style={
        Object {
          "padding": 6,
        }
      }
    >
      <Dialog
        PaperComponent={[Function]}
        TransitionComponent={[Function]}
        classes={
          Object {
            "container": "MuiDialog-container-5",
            "paper": "MuiDialog-paper-6",
            "paperFullScreen": "MuiDialog-paperFullScreen-15",
            "paperFullWidth": "MuiDialog-paperFullWidth-14",
            "paperScrollBody": "MuiDialog-paperScrollBody-8",
            "paperScrollPaper": "MuiDialog-paperScrollPaper-7",
            "paperWidthLg": "MuiDialog-paperWidthLg-12",
            "paperWidthMd": "MuiDialog-paperWidthMd-11",
            "paperWidthSm": "MuiDialog-paperWidthSm-10",
            "paperWidthXl": "MuiDialog-paperWidthXl-13",
            "paperWidthXs": "MuiDialog-paperWidthXs-9",
            "root": "MuiDialog-root-2",
            "scrollBody": "MuiDialog-scrollBody-4",
            "scrollPaper": "MuiDialog-scrollPaper-3",
          }
        }
        disableBackdropClick={false}
        disableEscapeKeyDown={false}
        fullScreen={false}
        fullWidth={false}
        maxWidth="sm"
        open={false}
        scroll="paper"
        style={
          Object {
            "padding": 6,
          }
        }
        transitionDuration={
          Object {
            "enter": 225,
            "exit": 195,
          }
        }
      >
        <WithStyles(Modal)
          BackdropProps={
            Object {
              "transitionDuration": Object {
                "enter": 225,
                "exit": 195,
              },
            }
          }
          className="MuiDialog-root-2"
          closeAfterTransition={true}
          disableBackdropClick={false}
          disableEscapeKeyDown={false}
          open={false}
          role="dialog"
          style={
            Object {
              "padding": 6,
            }
          }
        >
          <Modal
            BackdropComponent={[Function]}
            BackdropProps={
              Object {
                "transitionDuration": Object {
                  "enter": 225,
                  "exit": 195,
                },
              }
            }
            className="MuiDialog-root-2"
            classes={
              Object {
                "hidden": "MuiModal-hidden-17",
                "root": "MuiModal-root-16",
              }
            }
            closeAfterTransition={true}
            disableAutoFocus={false}
            disableBackdropClick={false}
            disableEnforceFocus={false}
            disableEscapeKeyDown={false}
            disablePortal={false}
            disableRestoreFocus={false}
            hideBackdrop={false}
            keepMounted={false}
            manager={
              ModalManager {
                "data": Array [],
                "handleContainerOverflow": true,
                "hideSiblingNodes": true,
                "modals": Array [],
              }
            }
            open={false}
            role="dialog"
            style={
              Object {
                "padding": 6,
              }
            }
          />
        </WithStyles(Modal)>
      </Dialog>
    </WithStyles(Dialog)>
  </ConfirmDialogBox>
</WithStyles(ConfirmDialogBox)>
`;

exports[`Add new record should render the confirm dialog without an alert for a succcessful file upload 1`] = `
<WithStyles(ConfirmDialogBox)
  locale={
    Object {
      "alternateActionButtonLabel": "Fix record",
      "cancelButtonLabel": "Add another missing work",
      "confirmButtonLabel": "Go to my research",
      "confirmationMessage": <WithStyles(Grid)
        container={true}
        spacing={3}
      >
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <p>
            Your work has been saved.
            <br />
            <br />
            Your work will be published immediately and a UQ eSpace Research Outputs Officer will review the record.
          </p>
        </WithStyles(Grid)>
      </WithStyles(Grid)>,
      "confirmationTitle": "Your work has been submitted",
      "fileFailConfirmationAlert": Object {
        "message": "Retry via \\"Fix record\\" screen or contact eSpace administrators.",
        "title": "File upload and/or notes post failed",
        "type": "warning",
      },
      "recordSuccessConfirmationMessage": <p>
        Your work has been saved.
        <br />
        <br />
        Your work will be published immediately and a UQ eSpace Research Outputs Officer will review the record.
      </p>,
    }
  }
  onAction={[Function]}
  onAlternateAction={[Function]}
  onCancelAction={[Function]}
  onRef={[Function]}
/>
`;
