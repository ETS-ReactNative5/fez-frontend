// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Add new record should not render publication form if author is not loaded  1`] = `<span />`;

exports[`Add new record should render alert about file uploading or issue error 1`] = `
<Fragment>
  <ConfirmDialogBox
    hideCancelButton={false}
    locale={
      Object {
        "cancelButtonLabel": "Add another missing work",
        "confirmButtonLabel": "Go to my research",
        "confirmationMessage": <WithStyles(Grid)
          container={true}
          spacing={24}
        >
          <WithStyles(Grid)
            item={true}
            xs={12}
          >
            <WithStyles(Alert)
              message="Retry uploading files and/or submitting notes via \\"Fix record\\" screen or contact eSpace administrators."
              title="File upload and/or notes post failed"
              type="warning"
            />
            <p>
              Your work has been saved.
              <br />
              <br />
              Your work will be published immediately and a UQ eSpace Research Outputs Officer will review the record.
            </p>
          </WithStyles(Grid)>
        </WithStyles(Grid)>,
        "confirmationTitle": "Your work has been submitted",
        "fileFailConfirmationAlert": Object {
          "message": "Retry uploading files and/or submitting notes via \\"Fix record\\" screen or contact eSpace administrators.",
          "title": "File upload and/or notes post failed",
          "type": "warning",
        },
        "recordSuccessConfirmationMessage": <p>
          Your work has been saved.
          <br />
          <br />
          Your work will be published immediately and a UQ eSpace Research Outputs Officer will review the record.
        </p>,
      }
    }
    onAction={[Function]}
    onCancelAction={[Function]}
    onRef={[Function]}
  />
  <PublicationForm
    initialValues={
      Object {
        "currentAuthor": Array [
          Object {
            "authorId": "",
            "nameAsPublished": "",
          },
        ],
        "rek_title": "",
      }
    }
    onFormCancel={[Function]}
    onFormSubmitSuccess={[Function]}
  />
</Fragment>
`;

exports[`Add new record should render stepper and a publication form 1`] = `
<Fragment>
  <ConfirmDialogBox
    hideCancelButton={false}
    locale={
      Object {
        "cancelButtonLabel": "Add another missing work",
        "confirmButtonLabel": "Go to my research",
        "confirmationMessage": <WithStyles(Grid)
          container={true}
          spacing={24}
        >
          <WithStyles(Grid)
            item={true}
            xs={12}
          >
            <p>
              Your work has been saved.
              <br />
              <br />
              Your work will be published immediately and a UQ eSpace Research Outputs Officer will review the record.
            </p>
          </WithStyles(Grid)>
        </WithStyles(Grid)>,
        "confirmationTitle": "Your work has been submitted",
        "fileFailConfirmationAlert": Object {
          "message": "Retry uploading files and/or submitting notes via \\"Fix record\\" screen or contact eSpace administrators.",
          "title": "File upload and/or notes post failed",
          "type": "warning",
        },
        "recordSuccessConfirmationMessage": <p>
          Your work has been saved.
          <br />
          <br />
          Your work will be published immediately and a UQ eSpace Research Outputs Officer will review the record.
        </p>,
      }
    }
    onAction={[Function]}
    onCancelAction={[Function]}
    onRef={[Function]}
  />
  <PublicationForm
    initialValues={
      Object {
        "currentAuthor": Array [
          Object {
            "authorId": 44,
            "nameAsPublished": "Fred",
          },
        ],
        "rek_title": "",
      }
    }
    onFormCancel={[Function]}
    onFormSubmitSuccess={[Function]}
  />
</Fragment>
`;

exports[`Add new record should render the confirm dialog with an alert for failed file upload 1`] = `
<ConfirmDialogBox
  hideCancelButton={false}
  locale={
    Object {
      "cancelButtonLabel": "Add another missing work",
      "confirmButtonLabel": "Go to my research",
      "confirmationMessage": <WithStyles(Grid)
        container={true}
        spacing={24}
      >
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <p>
            Your work has been saved.
            <br />
            <br />
            Your work will be published immediately and a UQ eSpace Research Outputs Officer will review the record.
          </p>
        </WithStyles(Grid)>
      </WithStyles(Grid)>,
      "confirmationTitle": "Your work has been submitted",
      "fileFailConfirmationAlert": Object {
        "message": "Retry uploading files and/or submitting notes via \\"Fix record\\" screen or contact eSpace administrators.",
        "title": "File upload and/or notes post failed",
        "type": "warning",
      },
      "recordSuccessConfirmationMessage": <p>
        Your work has been saved.
        <br />
        <br />
        Your work will be published immediately and a UQ eSpace Research Outputs Officer will review the record.
      </p>,
    }
  }
  onAction={[Function]}
  onCancelAction={[Function]}
  onRef={[Function]}
>
  <WithStyles(Dialog)
    open={false}
    style={
      Object {
        "padding": 6,
      }
    }
  >
    <Dialog
      TransitionComponent={[Function]}
      classes={
        Object {
          "paper": "MuiDialog-paper-4",
          "paperFullScreen": "MuiDialog-paperFullScreen-12",
          "paperFullWidth": "MuiDialog-paperFullWidth-11",
          "paperScrollBody": "MuiDialog-paperScrollBody-6",
          "paperScrollPaper": "MuiDialog-paperScrollPaper-5",
          "paperWidthLg": "MuiDialog-paperWidthLg-10",
          "paperWidthMd": "MuiDialog-paperWidthMd-9",
          "paperWidthSm": "MuiDialog-paperWidthSm-8",
          "paperWidthXs": "MuiDialog-paperWidthXs-7",
          "root": "MuiDialog-root-1",
          "scrollBody": "MuiDialog-scrollBody-3",
          "scrollPaper": "MuiDialog-scrollPaper-2",
        }
      }
      disableBackdropClick={false}
      disableEscapeKeyDown={false}
      fullScreen={false}
      fullWidth={false}
      maxWidth="sm"
      open={false}
      scroll="paper"
      style={
        Object {
          "padding": 6,
        }
      }
      transitionDuration={
        Object {
          "enter": 225,
          "exit": 195,
        }
      }
    >
      <WithStyles(Modal)
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDialog-root-1 MuiDialog-scrollPaper-2"
        disableBackdropClick={false}
        disableEscapeKeyDown={false}
        open={false}
        role="dialog"
        style={
          Object {
            "padding": 6,
          }
        }
      >
        <Modal
          BackdropComponent={[Function]}
          BackdropProps={
            Object {
              "transitionDuration": Object {
                "enter": 225,
                "exit": 195,
              },
            }
          }
          className="MuiDialog-root-1 MuiDialog-scrollPaper-2"
          classes={
            Object {
              "hidden": "MuiModal-hidden-14",
              "root": "MuiModal-root-13",
            }
          }
          disableAutoFocus={false}
          disableBackdropClick={false}
          disableEnforceFocus={false}
          disableEscapeKeyDown={false}
          disablePortal={false}
          disableRestoreFocus={false}
          hideBackdrop={false}
          keepMounted={false}
          manager={
            ModalManager {
              "containers": Array [],
              "data": Array [],
              "handleContainerOverflow": true,
              "hideSiblingNodes": true,
              "modals": Array [],
            }
          }
          open={false}
          role="dialog"
          style={
            Object {
              "padding": 6,
            }
          }
        />
      </WithStyles(Modal)>
    </Dialog>
  </WithStyles(Dialog)>
</ConfirmDialogBox>
`;

exports[`Add new record should render the confirm dialog without an alert for a succcessful file upload 1`] = `
<ConfirmDialogBox
  hideCancelButton={false}
  locale={
    Object {
      "cancelButtonLabel": "Add another missing work",
      "confirmButtonLabel": "Go to my research",
      "confirmationMessage": <WithStyles(Grid)
        container={true}
        spacing={24}
      >
        <WithStyles(Grid)
          item={true}
          xs={12}
        >
          <p>
            Your work has been saved.
            <br />
            <br />
            Your work will be published immediately and a UQ eSpace Research Outputs Officer will review the record.
          </p>
        </WithStyles(Grid)>
      </WithStyles(Grid)>,
      "confirmationTitle": "Your work has been submitted",
      "fileFailConfirmationAlert": Object {
        "message": "Retry uploading files and/or submitting notes via \\"Fix record\\" screen or contact eSpace administrators.",
        "title": "File upload and/or notes post failed",
        "type": "warning",
      },
      "recordSuccessConfirmationMessage": <p>
        Your work has been saved.
        <br />
        <br />
        Your work will be published immediately and a UQ eSpace Research Outputs Officer will review the record.
      </p>,
    }
  }
  onAction={[Function]}
  onCancelAction={[Function]}
  onRef={[Function]}
/>
`;

exports[`Add new record should render with missing author information 1`] = `
<PublicationForm
  initialValues={
    Object {
      "currentAuthor": Array [
        Object {
          "authorId": "",
          "nameAsPublished": "",
        },
      ],
      "rek_title": "",
    }
  }
  onFormCancel={[Function]}
  onFormSubmitSuccess={[Function]}
/>
`;
